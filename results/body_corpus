This fixes the current runchecker daily failures.
_|_struct timeval doesn't support nanosecs but OSSL_TIME does. We round up any nanosecs to ensure that a non-zero input always results in a non-zero output.

This fixes a quic-client fuzzer hang.

Fixes https://github.com/openssl/openssl/issues/22437
_|_The first commit is the essence of this PR, and hopefully a straight forward bugfix.

The second commit is trivial, and hopefully no-op/not-required, but it took most of my effort because I couldn't reach a definitive conclusion, hence the way too long commit message with suggested reasoning.

In a nutshell, the first commit won't compile on Windows CE unless
```c
#if !defined(OPENSSL_SYS_WINCE)
```
and
```c
#if !defined(OPENSSL_SYS_WINCE) && !defined(_WIN32_WCE)
```
Are equivalent - and this is the change that is the 2nd commit.

I.e. if _WIN32_WCE cannot be defined when OPENSSL_SYS_WINCE is not defined, then it's no-op, but I couldn't conclude that this is indeed the case.

If someone can give me a reason why _WIN32_WCE  is never defined unless OPENSSL_SYS_WINCE is also defined, then I'll replace the second commit message with this two-lines explanation, or maybe drop the second commit and only add a comment at the first commit._|_Fixes #22412
Fixes #22427_|_This fixes broken cherry-pick from the master branch where there is a quiet argument.

This is again urgent as 3.1 and 3.0 CI is still broken.
_|_The first commit should go in master only as it cleans up includes there.

The second commit should go in all branches and it fixes the current build failure seen on 3.1 and 3.0 only.

This is urgent as CI is totally broken on 3.1 and 3.0._|_The `get_user_{entropy,nonce}` callbacks were add recently to the dispatch table in commit 4cde7585ce8e. Instead of adding corresponding `cleanup_user_{entropy,nonce}` callbacks, the `cleanup_{entropy,nonce}` callbacks were reused. This can cause a problem in the case where the seed source is replaced by a provider: the buffer gets allocated by the provider but cleared by the core.
_|_The `get_user_{entropy,nonce}` callbacks were add recently to the dispatch table in commit 4cde7585ce8e. Instead of adding corresponding `cleanup_user_{entropy,nonce}` callbacks, the `cleanup_{entropy,nonce}` callbacks were reused. This can cause a problem in the case where the seed source is replaced by a provider: the buffer gets allocated by the provider but cleared by the core.
_|_RFC 9000 s 17.2.5.2 says

> After the client has received and processed an Initial or Retry packet
> from the server, it MUST discard any subsequent Retry packets that it
> receives.

We were checking for multiple Retry packets, but not if we had already processed an Initial packet.

Fixes the assertion failure noted in
https://github.com/openssl/openssl/pull/22368#issuecomment-1765618884

_|_If the CC TX allowance is zero then we cannot send a PING frame at the moment, so do not take into account the ping deadline when calculating the tick deadline in that case.

This avoids the hang found by the fuzzer mentioned in https://github.com/openssl/openssl/pull/22368#issuecomment-1765131727

_|_Postpone two TODO(QUIC) items appropriately
 
- The one in ch_rx_handle_packet() is a tuning thing -> QUIC FUTURE
- The one in ossl_quic_tserver_shutdown() is a server thing -> QUIC SERVER

Add handling of SSL_get_shutdown()
    
- Return SSL_SENT_SHUTDOWN and SSL_RECEIVED_SHUTDOWN with semantics
  similar to TLS connections.
_|_According to the manual page, EVP_PKEY_CTX_set0_rsa_oaep_label() should accept NULL as the label argument, though the function currently rejects it while setting the corresponding octet string parameter with OSSL_PARAM_construct_octet_string, which expects non-NULL input.  This adds a workaround to the caller for backward compatibility.

Fixes #21288
<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Fixes #22225

In `OBJ_nid2obj()`, if the NID does not have an OID, then a pointer to the special "undefined" ASN1_OBJECT is returned.  Check for the undefined-ASN1_OBJECT and return an error.

Testing:

```
#!/bin/bash -x

shopt -s expand_aliases

alias openssl="LD_LIBRARY_PATH=~/git/openssl ~/git/openssl/apps/openssl"

echo "This is a confidential message.  It should be encrypted." > msg.txt

## this should fail b/c there is no OID for aes-256-ctr
openssl cms -encrypt -in msg.txt -aes-256-ctr -out msg.txt.cms -recip demos/cms/signer.pem
echo $?
```
_|_This fixes some empty error queue cases on unsupported algorithms with in `CMS_add1_signer()`
as (in part) requested by https://github.com/openssl/openssl/issues/11915#issuecomment-1756489351.

On this occasion, also 

* fix `EVP shake_ctrl()` by adding a missing NULL `evp_ctx` check - like `sha1_int_ctrl()`, the function must not choke on  a NULL argument. This is needed in particular for EdDSA support for CMS/PKCS7, as provided in #22391.
* in `CMS_add1_signer.pod`, add missing info on `CMS_SignerInfo_sign()` return values
* in `pkcs7.h.in`, point out confusing names of `digest_enc_alg` and `enc_digest` fields of `PKCS7_SIGNER_INFO`_|_Fixes #4668 (on unix-like platforms)

This PR differs from #21821 (which was merged to "master") because, on `openssl-3.1`, the unix Makefile template does not use the variables `BINDIR` and `bindir`.

Testing:

```
  rm -rf "$HOME/tmp/beforespace afterspace"
  ./Configure -Werror --strict-warnings --prefix="$HOME/tmp/beforespace afterspace"
  make -j6 update
  make -j6
  make install
  make test
```_|_This copy would need an update on dupctx but
rather than doing it just remove the copy.

This fixes failures of evp_test on Windows with
new CPUs.
_|_This takes the QUIC client fuzzer written by @kroeckx in #19743 and adds additional commits and updates to enable the fuzzer to complete a full handshake and read data from a stream.

We also fix two bugs that the fuzzer identified. One was in the save/restore of error state which could lead to the error data getting into an inconsistent state (which led to undefined behaviour). The second is a use-after-free in `qrx_process_pkt`.

Some initial corpora files are in openssl/fuzz-corpora#16. This includes a "happy path" corpora file that achieves a full handshake and a read of data._|_CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->

To support Embarcadero's clang-based compilers the following code was added to the file crypto/thread/arch/thread_win.c just before function void ossl_crypto_mem_barrier(void).

```cpp
#if defined(__BORLANDC__) && defined(__clang__) && defined(_WIN32) 
__forceinline void MemoryBarrier(void)
{
    long barrier;
    __asm {
        xchg barrier, eax
    }
}
#endif
```

Without this change, library creation fails because it cannot find the _MemoryBarrier function,
_|_
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_external calls to OBJ_new_nid will fail on an attempt to lock the ossl_obj_nid_lock as it won't have been initalized yet.  Modify both OBJ_new_nid and and OBJ_create (its only internal caller), to allow both to use ossl_obj_[write|read]_[lock|unlock] so that we can guarantee initialization prior to use

Fixes #22337


_|_Some of the non-default options that enable more
code to be built need to be enabled in one of the
Windows builds to avoid regressions.
_|_RSA 1.1.1 api compatibility was broken in 3.2 for a few reasons:
1) We were allowing NULL bignums to be pushed onto BIGNUM stacks, resulting in sigsegvs
2) We were checking for the presence of CRT params on export and import of RSA keys, which are not requried.

This PR addresses both of those issues

Fixes #21935 

_|_Fixes #22106._|_The lower priority 'and' seems to have some "interesting" interactions with
function argument parsing in some perl versions (presumably because 'and' is
lower priority than the comma).

For the lines that are changed here, perl v5.20.1 says this:

    Useless use of string eq in void context at [.test.recipes]05-test_rand.t line 33.
    Useless use of numeric eq (==) in void context at [.test.recipes]05-test_rand.t line 39.

Replacing 'and' with '&&' in these two cases fixes the problem.

Replacing
_|_Fixes #22309_|_Fixes #22306

This reverts some of the recent changes in load_key_certs_crls() as they were incorrect.
_|_This change ensures that struct timeval is present before ssl.h is included to ensure definition consistency.

Fixes: #22309_|_Although many of the QUIC tests use fake time, the time we pass to the ossl_crypto_condvar_wait_timeout() must be a real time.

Passing fake time was causing the QUIC tserver test to hang because ossl_crypto_convar_wait_timeout() always timed out immediately and never relinquished the CPU.

If using fake time we adjust the time to real time just before using it.

Fixes #22020

_|_The BIO_addr test is failing on non-stop. The length of the data is larger than the size we have allocated for it. We dynamically allocate instead.

Fixes #22218
_|_We recently see errors during the cpuinfo commands on windows runners. This would allow some further investigation.
_|_The semantics of ossl_ffc_validate_public_key() and ossl_ffc_validate_public_key_partial() needs to be changed to not return error on non-fatal problems.

Fixes #22287

This fixes a regression of DH_check_pub_key() since 1.1.1.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Fix #21477 strict build. This was initially addressed in #21501 but the following comment was unaddressed: 
https://github.com/openssl/openssl/pull/21501#issuecomment-1648240595

This PR fixes the same problem that exists in quic_channel.


CLA: trivial
_|_If we wait for 100ms 600 times - then the test takes a minute to complete
which is far too long. The purpose of the wait is to give the assistance
thread a chance to catch up. We only do that if the event timeout has
actually expired - otherwise we are waiting for no reason.

Fixes https://github.com/openssl/openssl/issues/22156

We also fix an issue in the tserver timeout code.

When running the tserver test we bail out if a timeout expires. We
shouldn't use fake time for that timeout, because fake time might never
actually get incremented.

This PR *could* be beneficial for #22020_|_The function `ossl_blake2b_param_init` should initialise only, and not read the data it is initialising

This is an alternative fix to #22103._|_This change fixes a build failure on Solaris 11.4 (with either GCC or Oracle Developer Studio). On Solaris `sun` is an implicit define that collides with the variable name._|_the sctp BIO implementation uses the generic BIO dgram implementation under the covers for some operations.  However, the private data for each bio is incongruous, leading to segfaults when doing things like passing a dgram_sctp_ctrl operation to the underlying dgram_ctrl method.

Fix this by removing the common fields between the two strcutres and embedding a bio_dgram_data as the first member of the bio_dgram_sctp_data struct.  This allows implicit casting when that call path is taken, avoiding any memory mis-use

Fixes #20643

_|_It is also not allowed by doc nits check to have
multiple includes.

This is urgent as CI is broken.
_|_Fixes #22216
_|_Bumps [suisei-cn/actions-download-file](https://github.com/suisei-cn/actions-download-file) from 1.3.0 to 1.4.0.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href="https://github.com/suisei-cn/actions-download-file/releases">suisei-cn/actions-download-file's releases</a>.</em></p>
<blockquote>
<h2>v1.4.0</h2>
<ul>
<li>Updated dependencies.</li>
<li>Add the parameter <code>retry-times</code>. <a href="https://redirect.github.com/suisei-cn/actions-download-file/issues/14">#14</a></li>
</ul>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/suisei-cn/actions-download-file/commit/15306412d2c75df56b46844362b86b65235b7db1"><code>1530641</code></a> chore: 1.4.0</li>
<li><a href="https://github.com/suisei-cn/actions-download-file/commit/4d125910ae161fc79aee21858e81a71c48248a8c"><code>4d12591</code></a> fix: fix definition of retry-times</li>
<li><a href="https://github.com/suisei-cn/actions-download-file/commit/a85d7d4d7387507621feb86659a0d70ef35f3262"><code>a85d7d4</code></a> feat: retry-times</li>
<li><a href="https://github.com/suisei-cn/actions-download-file/commit/70af63423e5b87333b29147ee37aab0c557db860"><code>70af634</code></a> chore: prettier</li>
<li><a href="https://github.com/suisei-cn/actions-download-file/commit/d5ffa18d27d8e540e47e6327971d39bce9b68c0e"><code>d5ffa18</code></a> chore: dep update</li>
<li><a href="https://github.com/suisei-cn/actions-download-file/commit/0a9872eb973869ddf9babbc22d87a50c9648d6e0"><code>0a9872e</code></a> chore: migrate to pnpm@8</li>
<li><a href="https://github.com/suisei-cn/actions-download-file/commit/e6e7e6f6706b9e230af10510dbacecf0656a6785"><code>e6e7e6f</code></a> docs: add the input parameter <code>filename</code></li>
<li><a href="https://github.com/suisei-cn/actions-download-file/commit/42a92d0c535c1a1f9247531c1072ed445720f298"><code>42a92d0</code></a> ci: remove redundant test parts</li>
<li><a href="https://github.com/suisei-cn/actions-download-file/commit/c2f94b5e72881b6f590466f9715c5c3c5034436b"><code>c2f94b5</code></a> ci: add tests to check output filename</li>
<li><a href="https://github.com/suisei-cn/actions-download-file/commit/45991686c065f4abcae20a0fac676cffbeac30bc"><code>4599168</code></a> ci: update to actions/checkout@v3</li>
<li>See full diff in <a href="https://github.com/suisei-cn/actions-download-file/compare/v1.3.0...v1.4.0">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=suisei-cn/actions-download-file&package-manager=github_actions&previous-version=1.3.0&new-version=1.4.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>_|_A new type of noise is introduced in the noisy dgram bio filter.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Fixes recent regression from commit febe8cf4dee9939ee3e5523b6f14d9dc1ec74153

This is urgent as Coveralls CI is broken.
_|_Bumps [actions/setup-python](https://github.com/actions/setup-python) from 4.7.0 to 4.7.1.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href="https://github.com/actions/setup-python/releases">actions/setup-python's releases</a>.</em></p>
<blockquote>
<h2>v4.7.1</h2>
<h2>What's Changed</h2>
<ul>
<li>Bump word-wrap from 1.2.3 to 1.2.4 by <a href="https://github.com/dependabot"><code>@​dependabot</code></a> in <a href="https://redirect.github.com/actions/setup-python/pull/702">actions/setup-python#702</a></li>
<li>Add range validation for toml files by <a href="https://github.com/dmitry-shibanov"><code>@​dmitry-shibanov</code></a> in <a href="https://redirect.github.com/actions/setup-python/pull/726">actions/setup-python#726</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href="https://github.com/actions/setup-python/compare/v4...v4.7.1">https://github.com/actions/setup-python/compare/v4...v4.7.1</a></p>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/actions/setup-python/commit/65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236"><code>65d7f2d</code></a> Add range validation for toml files (<a href="https://redirect.github.com/actions/setup-python/issues/726">#726</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/f97b83114c6f41cfaa57698147ad3ce20543a127"><code>f97b831</code></a> Bump word-wrap from 1.2.3 to 1.2.4 (<a href="https://redirect.github.com/actions/setup-python/issues/702">#702</a>)</li>
<li>See full diff in <a href="https://github.com/actions/setup-python/compare/v4.7.0...v4.7.1">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4.7.0&new-version=4.7.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>_|_Include the necessary header file openssl/pem.h in the documentation to ensure that all functions related to d2i_PKCS8PrivateKey are correctly defined.

Closes openssl#22188_|_Remove unnecessary line in man3/PKCS5_PBKDF2_HMAC.pod to enhance clarity and conciseness.

Closes openssl#22168_|_This is alternative to #22245 _|_If either endpoint issues a PING frame while we are introducing noise into the communication then there is a danger that the connection itself will fail. We detect the PING and then back off on generating noise for a short while. It should be sufficient to just ensure that the next datagram does not get dropped for each endpoint.

Fixes #22199
_|_This includes a fix in Configurations/unix-Makefile.tmpl to allow
running `make md-nits` from an out-of-source build tree as well.
_|_With pre-3.0 OpenSSL, EVP_PKEY_print_private() calls the EVP_PKEY_ASN1_METHOD
function "priv_print", effectively asking the backend to print whatever it
regards as private key components.

In all backends that were built into libcrypto, this function printed what
was included in the private key structure, which usually includes the
public key components as well.

With OpenSSL 3.0, some of the corresponding key2text encoders got a
slightly different behavior, where the presence of the selector
OSSL_KEYMGMT_SELECT_PRIVATE_KEY without the presence of the selector
OSSL_KEYMGMT_SELECT_PUBLIC_KEY would only get what would intuitively be
regarded as private key components printed.  This isn't entirely consistent,
though, as the RSA key2text encoder will still print the public key
components regardless.

To compensate for the changed backend behavior, EVP_PKEY_print_private()
was made to ask the encoder to print the keypair rather than just the
private key, thereby moving the backend semantics to the application API.
Unfortunately, this causes confusion for providers where the key2text
encoder really should print the private key only.

This change restores the built-in 1.1.1 backend behavior in the encoders
that OpenSSL provides, and renders EVP_PKEY_print_private() more true to its
documented behavior, leaving it to the backend to decide what it regards as
"private key components".

Fixes #22233
_|_Script 13 is a stress test which can timeout on some low powered platforms or with some options that significantly slow performance.

We increase the timeout.

_|_Fixing issues:

* 1545174: calling risky function
* 1545175: use after free
* 1545176: dereference before NULL check
_|_Cherry pick of #21964 for 3.1.

All the major lumps were clean.

Those that weren't were dropped as not being relevant:
* indentation fix 6935101354e1ebcb43aa8afb158603f94c0f9bc6
* provider cross version checking 54e60d2a05f86e947dface08e5c20b831be17bf8 
* cipher dupctx version checking 1a18596149a325a679f8244bac52b6796dfcc48e

_|_##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Fixes #22189

This is an obvious optimization and in heavily multithreaded environments it can actually make a difference as seen in the above discussion.
_|_Ensure we use OPENSSL_NO_SSL_TRACE guards where appropriate.
_|_# test_EVP_PKEY_sign_with_app_method

This pull request adds `test_EVP_PKEY_sign_with_app_method`, a regression test for the bug fix in commit 1acc3e8cc3c6 (pull request #22163). It is analogous to `test_EVP_PKEY_sign`, only with a fake app method based key.

To use as much as possible of  `test_EVP_PKEY_sign`'s implementation, the EVP keys are loaded with `load_example_{rsa,dsa}_key()` and then their `{RSA,DSA}_METHOD`s are replaced, respectively. (The EC key test case was omitted, because there is no `EC_KEY_METHOD_dup` method.)

## Testing the regression test (with `no-engine`)

To verify that the detects the regression, you need to `git revert 1acc3e8cc3c6` and configure and build with `no-engine`. Then, run the evp_extra test:

    make test V=1 TESTS=test_evp_extra

It will fail twice with an 'unsupported algorithm' error:

    # Subtest: test_EVP_PKEY_sign_with_app_method
    1..2
    # ERROR: (ptr) 'ctx != NULL' failed @ test/evp_extra_test.c:1365
    # 0x0
    # 80EB60A4627F0000:error:0300009C:digital envelope routines:int_ctx_new:unsupported algorithm:crypto/evp/pmeth_lib.c:312:
    # OPENSSL_TEST_RAND_SEED=1695633019
    not ok 34 - iteration 1
    # ERROR: (ptr) 'ctx != NULL' failed @ test/evp_extra_test.c:1365
    # 0x0
    # 80EB60A4627F0000:error:0300009C:digital envelope routines:int_ctx_new:unsupported algorithm:crypto/evp/pmeth_lib.c:312:
    # OPENSSL_TEST_RAND_SEED=1695633019
    not ok 35 - iteration 2



## A bug in `EVP_PKEY_assign_DSA`?

With `enable-engine` (and `git revert 1acc3e8cc3c6`), the test succeds with the RSA key (as expected), but it fails with the DSA key. The functions `EVP_PKEY_assign_RSA` and `EVP_PKEY_assign_DSA` behave differently and to me it seems that there is a bug in the DSA implementation. Or am I using the API incorrectly?


### EVP_PKEY_assign_RSA

After calling `EVP_PKEY_assign_RSA`, all RSA parameters are set correctly:

```
Breakpoint 3, test_EVP_PKEY_sign_with_app_method (tst=0) at test/evp_extra_test.c:1345
1345	        rsa = NULL; /* now owned by the pkey */
(gdb) p *pkey->pkey.rsa
$1 = {
  dummy_zero = 0,
  libctx = 0x555555a72d20 <default_context_int>,
  version = 0,
  meth = 0x555555aa7350,
  engine = 0x0,
  n = 0x555555accee0,
  e = 0x555555accec0,
  d = 0x555555accfe0,
  p = 0x555555a961d0,
  q = 0x555555ac8e10,
  dmp1 = 0x555555acc820,
  dmq1 = 0x555555acc990,
  iqmp = 0x555555ac93a0,
  pss_params = {
    hash_algorithm_nid = 0,
    mask_gen = {
      algorithm_nid = 0,
      hash_algorithm_nid = 0
    },
    salt_len = 0,
    trailer_field = 0
  },
  pss = 0x0,
  prime_infos = 0x0,
  ex_data = {
    ctx = 0x0,
    sk = 0x0
  },
  references = {
    val = 1
  },
  flags = 6,
  _method_mod_n = 0x0,
  _method_mod_p = 0x0,
  _method_mod_q = 0x0,
  blinding = 0x0,
  mt_blinding = 0x0,
  lock = 0x555555acd230,
  dirty_cnt = 4
}
```

### EVP_PKEY_assign_DSA

After calling `EVP_PKEY_assign_DSA`, all DSA parameters are unassigned:

```
Breakpoint 4, test_EVP_PKEY_sign_with_app_method (tst=1) at test/evp_extra_test.c:1357
1357	        dsa = NULL; /* now owned by the pkey */
(gdb) p *pkey->pkey.dsa
$2 = {
  pad = 0,
  version = 0,
  params = {
    p = 0x0,
    q = 0x0,
    g = 0x0,
    j = 0x0,
    seed = 0x0,
    seedlen = 0,
    pcounter = -1,
    nid = 0,
    gindex = -1,
    h = 0,
    flags = 3,
    mdname = 0x0,
    mdprops = 0x0,
    keylength = 0
  },
  pub_key = 0x555555a961d0,
  priv_key = 0x555555acce30,
  flags = 1,
  method_mont_p = 0x0,
  references = {
    val = 1
  },
  ex_data = {
    ctx = 0x555555a72d20 <default_context_int>,
    sk = 0x0
  },
  meth = 0x555555acb480,
  engine = 0x0,
  lock = 0x555555accd00,
  libctx = 0x555555a72d20 <default_context_int>,
  dirty_cnt = 4
}
```

As a consequence, `EVP_PKEY_sign` fails with an 'invalid key' error:

```
#0  ERR_new () at crypto/err/err_blocks.c:20
#1  0x000055555564ddb2 in EVP_PKEY_sign (ctx=0x555555a977b0, sig=0x0, siglen=0x7fffffffcd98, tbs=0x7fffffffcd70 "", tbslen=20) at crypto/evp/signature.c:656
#2  0x00005555555be317 in test_EVP_PKEY_sign_with_app_method (tst=1) at test/evp_extra_test.c:1367
#3  0x00005555555d0e93 in run_tests (test_prog_name=0x7fffffffe272 "/home/msp/src/openssl/master/test/evp_extra_test") at test/testutil/driver.c:377
#4  0x00005555555d12e3 in main (argc=1, argv=0x7fffffffdf78) at test/testutil/main.c:31
(gdb) c
Continuing.
    # ERROR: (int) 'EVP_PKEY_sign(ctx, NULL, &sig_len, tbs, sizeof(tbs)) > 0' failed @ test/evp_extra_test.c:1367
    # [0] compared to [0]
    # 40E7DCF7FF7F0000:error:030000A3:digital envelope routines:EVP_PKEY_sign:invalid key:crypto/evp/signature.c:656:
    # OPENSSL_TEST_RAND_SEED=1695630154
    not ok 35 - iteration 2
```
_|_quictestlib now uses struct timeval. We need to include "e_os.h" to get it.

Fixes #22178

This is an alternative to #22179_|_ossl_property_list_to_string() didn't quote strings correctly which could result in a generated property string being unparsable.


- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Fixes: #22178

Signed-of-by: Randall S. Becker <randall.becker@nexbridge.ca>
_|_Signing with an app method based key (i.e. an `EVP_PKEY` which wraps an `RSA` key with an application defined `RSA_METHOD`) used to work in 1.1.1. That feature was broken in commit 60488d2434, but later on fixed by @t8m in commit b247113c05 (see #14859).

This commit corrects a  minor flaw of the fix, which affects only `no-engine` builds: the special treatment for foreign keys is guarded by an `OPENSSL_NO_ENGINE` check.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated_|_When the realloc fails in contract, this not a fatal error, since the memory is only shrinked. It is also no option to exit the function at this point, since that would leave the hash table in an inconsistent state.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_test_cms test fails if DSA is not enabled.

Reproduction example:
```bash
./config no-dsa
make TESTS="test_cms" test
```

This fails with:
```
[...]
80-test_cms.t .. 10/? 
Could not find private key of signing key from ../../test/smime-certs/smdsa1.pem
4007ABB8727F0000:error:1608010C:STORE routines:ossl_store_handle_load_result:unsupported:crypto/store/store_result.c:151:
../../util/wrap.pl ../../apps/openssl cms -sign -in ../../test/smcont.txt -signer ../../test/smime-certs/smdsa1.pem -md SHAKE256 => 2
not ok 21 - issue\#21986
# ------------------------------------------------------------------------------
#   Failed test 'issue#21986'
#   at test/recipes/80-test_cms.t line 1147.
80-test_cms.t .. Dubious, test returned 1 (wstat 256, 0x100)
Failed 1/21 subtests
```

This PR adds a skip if DSA is disabled.

CLA: trivial

##### Checklist
- [x] tests are added or updated
_|_Fixes Coverity 1544699.

_|_Hi,

In this PR we solve the issue raised in #21439 - locally tested:
```
$ echo jebs | openssl enc -e -aes-256-cbc -pass pass:password -pbkdf2  -nopad
bad encrypt
$ cat ./foo | openssl enc -d -aes-256-cbc -pass pass:password -pbkdf2
bad decrypt
```

Fixes: https://github.com/openssl/openssl/issues/21439

EDIT: I assume it's a trivial change.
_|_Allow 2 digits after the comma in percentage in OPENSSL_MALLOC_FAILURES. Add OPENSSL_MALLOC_SEED to allow for some randomization.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_master version increments the struct_ref early
and needs to decrement the struct_ref on error,
while 3.1 and 3.0 increment the struct_ref later.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_sparse_array.o is not needed in libssl at 3.0.x version.

fix #22113 
<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_#22107
_|_ossl_blake2b_param_init() looks at the contents of the contents of the
passed BLAKE2B_PARAM reference.  That structure therefore needs to be
initiliazed beforehand.

Just to be safe, the same is done with BLAKE2S_PARAM.
_|_Hit a few regressions in dupctx tests from my addition of those methods in the various ciphers. Fix them up

##### Checklist
- [x] tests are added or updated
_|_It won't be merged to 3.1 and 3.0 before the 3.1.3 and 3.0.11 releases.
_|_Fixes #22089
_|_Missed this in the recent update to 3.1.2.

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Hit two regressions in dupctx tests from my addition of those methods in the various ciphers.  Fix them up

##### Checklist

- [x] tests are added or updated
_|_The CI on 3.1 is broken due to this so marking this urgent.
_|_For some reason, the code here was made to got through the provider
specific init functions.  This is very very dangerous if the provider
specific functions were to change in any way (such as changes to the
implementation context structure).

Instead, use the init functions from the base blake2 implementations
directly.
_|_In case we ignore the error we must use ctx_base and not ctx.
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_OSSL_sleep(1) isn't enough of a wait for threads to process the next QUIC
tick, so it gets increased to OSSL_sleep(100).  This may be a tad much,
perhaps, but for now, it gives a good margin.
_|_The biggest change is a cleanup of the blake2 provider implementation

XOFLEN was only implemented for BLAKE2b, not for BLAKE2s.

Also, it was made in such a way that a call of the set_ctx_params function
to set XOFLEN only set the BLAKE2[SB]_PARAM structure, but never had an
effect on the outlen field of the corresponding BLAKE2[SB]_CTX structure,
which effectively ignored whatever was set.

Finally, it's cleaner with a provider implementation that uses
IMPLEMENT_digest_functions_with_settable_ctx(), rather than reimplementing
everything that macro does.

-----

As an aside, this also has the legacy Blake2 EVP structure use the
base blake2[sb] functions instead of going through the provider
specific implementation.  The latter is quite dangerous, considering
that the legacy code has no control over changes in the provider
implementation context.
_|_Test that we fail immediately if a client does not provide ALPN. Similarly test that we correctly detect a server that does not supply ALPN.

While doing this I noticed that QUIC-TLS misconfiguration errors (e.g. because of lack of ALPN) just got reported to the user as "internal error". So I also fixed things to correctly propagate the TLS errors._|_This affects only RSA-PSS keys with params using
negative salt legth, or in case of out of memory.
This fixes a memory leak reported in #22049.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This fixes a few memory leaks reported in #22049.

If SSL_CTX_set0_tmp_dh_pkey rejects the temp dh key due to security restrictions (even when @SECLEVEL=0 is used!) then the caller has to delete the PKEY object.
That is different to how the deprecated
SSL_CTX_set_tmp_dh_pkey was designed to work.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The size of the datagram header is significantly larger that we might expect on NonStop (probably driven by sizeof(BIO_ADDR)). We adjust the assumptions in the test about how many datagrams we can fit into the default buffer size.

Fixes #22013

_|_In some error cases the normal cleanup did not
appen, but instead an exit(1) which caused some
memory leaks, as reportted in #22049.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes: #22045

CLA: Trivial_|_Couple of missing cases here.

Also a trivial multistream test fix.

Cherry-picks from #22037._|_If there is an issue with setting up the test environment in this test, pid is not set so stop_mock_server kills the perl process. A guard has been added to prevent this situation.

This fix applies to 3.0 and 3.1 only.

Fixes: #22014
_|_Some old glibc versions have recvmmsg but not sendmmsg. We require both to use that functionality. Introduce a test to check we have a sufficiently recent version of glibc.

Fixes #22021_|_That seems to be only an issue for RSA-PSS with parameters.
Spotted by code review, so it looks there is no test coverage for this.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_when used in conjunction with -out and -modulus options.

Fixes #21403

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_when used in conjunction with -out and -modulus options.

Fixes #21403

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_The server port was hard coded to 8186.  That could make for some
"interesting" effects if two instances of this same test was running
on the same machine.

This change binds the server interface with port 0, and captures the
resulting random port.
_|_They were introduced in gcc 4.6 so check for this before defining the wrapping macro.

Fixes #22017 

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_…so do not use the "r" shortcut.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_If there is an issue with setting up the test environment in this test, pid is not set so stop_server kills the perl process. A guard has been added to prevent this situation.

Fixes: #22014
_|_Check that we can set and use a PSK when establishing a QUIC connection.

Fixes https://github.com/openssl/project/issues/83

This also fixes a bug in the `SSL_CIPHER_find()` function which crashed when passed a QUIC SSL object.
_|_That caused several memory leaks in case of error. Also when the CMS object that is created by CMS_EncryptedData_encrypt is not used in the normal way, but instead just deleted by CMS_ContentInfo_free some memory was lost.

Fixes #21985

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Additionally use OPENSSL_clear_free on the private key data in case of error.

master has the memory leak already fixed, just the clear free on the private key is missing._|_socket.h has been modified so that poll.h is omitted for OPENSSL_SYS_NONSTOP builds. The platform configuration is derived from UNIX so the include is only omitted for NonStop but kept in the OPENSSL_SYS_UNIX include block.

Fixes: #22001
_|_This is done using the define `__NSK_OPTIONAL_TYPES__` and is specific to the NonStop platform builds.

Fixes: #22002
_|_Using "*:{port}" is preferred to "[::]:{port}", because it won't break on IPv4-only machines.  (NOTE: {port} is, of course, a port number or service name)

This fixes test failures in `79-test_http.t` and `80-test_ssl_new.t` on machines without IPv6.
_|_Fixes #21986

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The valtype value of dkeyform defined in the s_server_options structure is F, which leads to the judgment that the engine is not supported when processing parameters in the opt_next function. This the valtype value of dkeyform should be changed to "f".

fix: #21980 

CLA: trivial
_|_In the error handling case the memory in
vb->users_pwd was accidentally not released.
_|_Fixes #21977

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_When the provider's load function returned with an error, the libcrypto
error flag was only set if EOF hadn't been reached.  This is troublesome,
as an error can very well occur during the last load before EOF is reached!

Also, the error flag was never reset, even though documentation specifies
that it should indicate an error in the last load (i.e. not the one before
that).

Fixes #21968
_|_This is just a draft for @nhorman  to cherry-pick the test from._|_Error handling in engine_cleanup_add_first/last was broken and caused memory leaks.
_|_- [x] documentation is added or updated
- [x] tests are added or updated

Fixes #21909_|_The plan at the moment is to validate 3.1.2 all going well.

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_This was meant to end up with the rest of the fixes in #21951, but
that didn't quite happen...
_|_Marking as urgent as this is needed to fix https://github.com/openssl/openssl/actions/runs/6069710453/job/16464523594
_|_The test encrypted RSA key with DES3 which is still allowed in the 3.0 fips provider.

Instead use the traditional key format that uses MD5 to create the password based key. MD5 is disallowed in the 3.0 fips provider.

This should fix Provider compatibility CI:
https://github.com/openssl/openssl/actions/runs/6075083978/job/16480942800

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Bumps [coverallsapp/github-action](https://github.com/coverallsapp/github-action) from 2.2.1 to 2.2.2.
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/coverallsapp/github-action/commit/3b7078ee895f74fc267b7b267c88211df59fa816"><code>3b7078e</code></a> feat: use pwsh for windows runner (<a href="https://redirect.github.com/coverallsapp/github-action/issues/188">#188</a>)</li>
<li>See full diff in <a href="https://github.com/coverallsapp/github-action/compare/v2.2.1...v2.2.2">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=coverallsapp/github-action&package-manager=github_actions&previous-version=2.2.1&new-version=2.2.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>_|_Bumps [actions/checkout](https://github.com/actions/checkout) from 2 to 4.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href="https://github.com/actions/checkout/releases">actions/checkout's releases</a>.</em></p>
<blockquote>
<h2>v4.0.0</h2>
<h2>What's Changed</h2>
<ul>
<li>Update default runtime to node20 by <a href="https://github.com/takost"><code>@​takost</code></a> in <a href="https://redirect.github.com/actions/checkout/pull/1436">actions/checkout#1436</a></li>
<li>Support fetching without the --progress option by <a href="https://github.com/simonbaird"><code>@​simonbaird</code></a> in <a href="https://redirect.github.com/actions/checkout/pull/1067">actions/checkout#1067</a></li>
<li>Release 4.0.0 by <a href="https://github.com/takost"><code>@​takost</code></a> in <a href="https://redirect.github.com/actions/checkout/pull/1447">actions/checkout#1447</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a href="https://github.com/takost"><code>@​takost</code></a> made their first contribution in <a href="https://redirect.github.com/actions/checkout/pull/1436">actions/checkout#1436</a></li>
<li><a href="https://github.com/simonbaird"><code>@​simonbaird</code></a> made their first contribution in <a href="https://redirect.github.com/actions/checkout/pull/1067">actions/checkout#1067</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href="https://github.com/actions/checkout/compare/v3...v4.0.0">https://github.com/actions/checkout/compare/v3...v4.0.0</a></p>
<h2>v3.6.0</h2>
<h2>What's Changed</h2>
<ul>
<li>Mark test scripts with Bash'isms to be run via Bash by <a href="https://github.com/dscho"><code>@​dscho</code></a> in <a href="https://redirect.github.com/actions/checkout/pull/1377">actions/checkout#1377</a></li>
<li>Add option to fetch tags even if fetch-depth &gt; 0 by <a href="https://github.com/RobertWieczoreck"><code>@​RobertWieczoreck</code></a> in <a href="https://redirect.github.com/actions/checkout/pull/579">actions/checkout#579</a></li>
<li>Release 3.6.0 by <a href="https://github.com/luketomlinson"><code>@​luketomlinson</code></a> in <a href="https://redirect.github.com/actions/checkout/pull/1437">actions/checkout#1437</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a href="https://github.com/RobertWieczoreck"><code>@​RobertWieczoreck</code></a> made their first contribution in <a href="https://redirect.github.com/actions/checkout/pull/579">actions/checkout#579</a></li>
<li><a href="https://github.com/luketomlinson"><code>@​luketomlinson</code></a> made their first contribution in <a href="https://redirect.github.com/actions/checkout/pull/1437">actions/checkout#1437</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href="https://github.com/actions/checkout/compare/v3.5.3...v3.6.0">https://github.com/actions/checkout/compare/v3.5.3...v3.6.0</a></p>
<h2>v3.5.3</h2>
<h2>What's Changed</h2>
<ul>
<li>Fix: Checkout Issue in self hosted runner due to faulty submodule check-ins by <a href="https://github.com/megamanics"><code>@​megamanics</code></a> in <a href="https://redirect.github.com/actions/checkout/pull/1196">actions/checkout#1196</a></li>
<li>Fix typos found by codespell by <a href="https://github.com/DimitriPapadopoulos"><code>@​DimitriPapadopoulos</code></a> in <a href="https://redirect.github.com/actions/checkout/pull/1287">actions/checkout#1287</a></li>
<li>Add support for sparse checkouts by <a href="https://github.com/dscho"><code>@​dscho</code></a> and <a href="https://github.com/dfdez"><code>@​dfdez</code></a> in <a href="https://redirect.github.com/actions/checkout/pull/1369">actions/checkout#1369</a></li>
<li>Release v3.5.3 by <a href="https://github.com/TingluoHuang"><code>@​TingluoHuang</code></a> in <a href="https://redirect.github.com/actions/checkout/pull/1376">actions/checkout#1376</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a href="https://github.com/megamanics"><code>@​megamanics</code></a> made their first contribution in <a href="https://redirect.github.com/actions/checkout/pull/1196">actions/checkout#1196</a></li>
<li><a href="https://github.com/DimitriPapadopoulos"><code>@​DimitriPapadopoulos</code></a> made their first contribution in <a href="https://redirect.github.com/actions/checkout/pull/1287">actions/checkout#1287</a></li>
<li><a href="https://github.com/dfdez"><code>@​dfdez</code></a> made their first contribution in <a href="https://redirect.github.com/actions/checkout/pull/1369">actions/checkout#1369</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href="https://github.com/actions/checkout/compare/v3...v3.5.3">https://github.com/actions/checkout/compare/v3...v3.5.3</a></p>
<h2>v3.5.2</h2>
<h2>What's Changed</h2>
<ul>
<li>Fix: Use correct API url / endpoint in GHES by <a href="https://github.com/fhammerl"><code>@​fhammerl</code></a> in <a href="https://redirect.github.com/actions/checkout/pull/1289">actions/checkout#1289</a> based on <a href="https://redirect.github.com/actions/checkout/issues/1286">#1286</a> by <a href="https://github.com/1newsr"><code>@​1newsr</code></a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href="https://github.com/actions/checkout/compare/v3.5.1...v3.5.2">https://github.com/actions/checkout/compare/v3.5.1...v3.5.2</a></p>
<h2>v3.5.1</h2>
<h2>What's Changed</h2>
<ul>
<li>Improve checkout performance on Windows runners by upgrading <code>@​actions/github</code> dependency by <a href="https://github.com/BrettDong"><code>@​BrettDong</code></a> in <a href="https://redirect.github.com/actions/checkout/pull/1246">actions/checkout#1246</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a href="https://github.com/BrettDong"><code>@​BrettDong</code></a> made their first contribution in <a href="https://redirect.github.com/actions/checkout/pull/1246">actions/checkout#1246</a></li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href="https://github.com/actions/checkout/blob/main/CHANGELOG.md">actions/checkout's changelog</a>.</em></p>
<blockquote>
<h1>Changelog</h1>
<h2>v4.0.0</h2>
<ul>
<li><a href="https://redirect.github.com/actions/checkout/pull/1067">Support fetching without the --progress option</a></li>
<li><a href="https://redirect.github.com/actions/checkout/pull/1436">Update to node20</a></li>
</ul>
<h2>v3.6.0</h2>
<ul>
<li><a href="https://redirect.github.com/actions/checkout/pull/1377">Fix: Mark test scripts with Bash'isms to be run via Bash</a></li>
<li><a href="https://redirect.github.com/actions/checkout/pull/579">Add option to fetch tags even if fetch-depth &gt; 0</a></li>
</ul>
<h2>v3.5.3</h2>
<ul>
<li><a href="https://redirect.github.com/actions/checkout/pull/1196">Fix: Checkout fail in self-hosted runners when faulty submodule are checked-in</a></li>
<li><a href="https://redirect.github.com/actions/checkout/pull/1287">Fix typos found by codespell</a></li>
<li><a href="https://redirect.github.com/actions/checkout/pull/1369">Add support for sparse checkouts</a></li>
</ul>
<h2>v3.5.2</h2>
<ul>
<li><a href="https://redirect.github.com/actions/checkout/pull/1289">Fix api endpoint for GHES</a></li>
</ul>
<h2>v3.5.1</h2>
<ul>
<li><a href="https://redirect.github.com/actions/checkout/pull/1246">Fix slow checkout on Windows</a></li>
</ul>
<h2>v3.5.0</h2>
<ul>
<li><a href="https://redirect.github.com/actions/checkout/pull/1237">Add new public key for known_hosts</a></li>
</ul>
<h2>v3.4.0</h2>
<ul>
<li><a href="https://redirect.github.com/actions/checkout/pull/1209">Upgrade codeql actions to v2</a></li>
<li><a href="https://redirect.github.com/actions/checkout/pull/1210">Upgrade dependencies</a></li>
<li><a href="https://redirect.github.com/actions/checkout/pull/1225">Upgrade <code>@​actions/io</code></a></li>
</ul>
<h2>v3.3.0</h2>
<ul>
<li><a href="https://redirect.github.com/actions/checkout/pull/1045">Implement branch list using callbacks from exec function</a></li>
<li><a href="https://redirect.github.com/actions/checkout/pull/1050">Add in explicit reference to private checkout options</a></li>
<li>[Fix comment typos (that got added in <a href="https://redirect.github.com/actions/checkout/issues/770">#770</a>)](<a href="https://redirect.github.com/actions/checkout/pull/1057">actions/checkout#1057</a>)</li>
</ul>
<h2>v3.2.0</h2>
<ul>
<li><a href="https://redirect.github.com/actions/checkout/pull/942">Add GitHub Action to perform release</a></li>
<li><a href="https://redirect.github.com/actions/checkout/pull/967">Fix status badge</a></li>
<li><a href="https://redirect.github.com/actions/checkout/pull/1002">Replace datadog/squid with ubuntu/squid Docker image</a></li>
<li><a href="https://redirect.github.com/actions/checkout/pull/964">Wrap pipeline commands for submoduleForeach in quotes</a></li>
<li><a href="https://redirect.github.com/actions/checkout/pull/1029">Update <code>@​actions/io</code> to 1.1.2</a></li>
<li><a href="https://redirect.github.com/actions/checkout/pull/1039">Upgrading version to 3.2.0</a></li>
</ul>
<h2>v3.1.0</h2>
<ul>
<li><a href="https://redirect.github.com/actions/checkout/pull/939">Use <code>@​actions/core</code> <code>saveState</code> and <code>getState</code></a></li>
<li><a href="https://redirect.github.com/actions/checkout/pull/922">Add <code>github-server-url</code> input</a></li>
</ul>
<h2>v3.0.2</h2>
<ul>
<li><a href="https://redirect.github.com/actions/checkout/pull/770">Add input <code>set-safe-directory</code></a></li>
</ul>
<h2>v3.0.1</h2>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac"><code>3df4ab1</code></a> Release 4.0.0 (<a href="https://redirect.github.com/actions/checkout/issues/1447">#1447</a>)</li>
<li><a href="https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc"><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href="https://redirect.github.com/actions/checkout/issues/1067">#1067</a>)</li>
<li><a href="https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac"><code>97a652b</code></a> Update default runtime to node20 (<a href="https://redirect.github.com/actions/checkout/issues/1436">#1436</a>)</li>
<li><a href="https://github.com/actions/checkout/commit/f43a0e5ff2bd294095638e18286ca9a3d1956744"><code>f43a0e5</code></a> Release 3.6.0 (<a href="https://redirect.github.com/actions/checkout/issues/1437">#1437</a>)</li>
<li><a href="https://github.com/actions/checkout/commit/7739b9ba2efcda9dde65ad1e3c2dbe65b41dfba7"><code>7739b9b</code></a> Add option to fetch tags even if fetch-depth &gt; 0 (<a href="https://redirect.github.com/actions/checkout/issues/579">#579</a>)</li>
<li><a href="https://github.com/actions/checkout/commit/96f53100ba2a5449eb71d2e6604bbcd94b9449b5"><code>96f5310</code></a> Mark test scripts with Bash'isms to be run via Bash (<a href="https://redirect.github.com/actions/checkout/issues/1377">#1377</a>)</li>
<li><a href="https://github.com/actions/checkout/commit/c85c95e3d7251135ab7dc9ce3241c5835cc595a9"><code>c85c95e</code></a> Release v3.5.3 (<a href="https://redirect.github.com/actions/checkout/issues/1376">#1376</a>)</li>
<li><a href="https://github.com/actions/checkout/commit/d106d4669b3bfcb17f11f83f98e1cab478e9f635"><code>d106d46</code></a> Add support for sparse checkouts (<a href="https://redirect.github.com/actions/checkout/issues/1369">#1369</a>)</li>
<li><a href="https://github.com/actions/checkout/commit/f095bcc56b7c2baf48f3ac70d6d6782f4f553222"><code>f095bcc</code></a> Fix typos found by codespell (<a href="https://redirect.github.com/actions/checkout/issues/1287">#1287</a>)</li>
<li><a href="https://github.com/actions/checkout/commit/47fbe2df0ad0e27efb67a70beac3555f192b062f"><code>47fbe2d</code></a> Fix: Checkout fail in self-hosted runners when faulty submodule are checked-i...</li>
<li>Additional commits viewable in <a href="https://github.com/actions/checkout/compare/v2...v4">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=2&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>_|_Related to #21935

This fixes the segfault on the master branch but there is still one remaining issue which is on all branches.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_There is a rarely used feature that can be enabled with `./config enable-crypto-mdebug` when additionally the environment variable OPENSSL_MALLOC_FAILURES is used. It turns out to be possible that CRYPTO_zalloc may create a leak when the memory is allocated and then the shouldfail happens, then the memory is lost.
Likewise when OPENSSL_realloc is used with size=0, then the memory is to be free'd but here the shouldfail check is too early, and the failure may prevent the memory to be freed thus creating a bogus memory leak.
_|_Fixes https://github.com/openssl/openssl/issues/18454.
Amends https://github.com/openssl/openssl/pull/17951._|_Fixes https://github.com/openssl/openssl/issues/18454._|_Replace strcpy() with strncpy() in the SSL_get_shared_ciphers() function to prevent potential buffer overflow issues. strncpy() now checks the length of the cipher name and ensures it doesn't exceed the buffer size.

CLA: trivial

Fixes #19837

_|_It was noted that several cipher implementations were missing their dupctx method, resulting in an inability to use EVP_CIPHER_CTX_dup/copy, which was then ignored because the cipher tests just assume that a failure there was a lack of support, and ignored them.  Update the tests to fail on a missing dupctx method, and implement said method in all those that are missing it

Fixes #21887 

##### Checklist
- [x] tests are added or updated
_|_clang-cl.exe defines __clang__ and _MSC_VER but not __GNUC__, so a clang- specific guard is needed to get the correct ALIGNxx versions.

Fixes #21914

As requested [by @paulidale in this comment](https://github.com/openssl/openssl/pull/20754#discussion_r1278672599).

But also fixes the build issue noted in [this comment](https://github.com/openssl/openssl/issues/21874#issuecomment-1700674561) (which is what I separated out into #21914)

Note that rather than `e_os.h`, I've put them in `common.h` - they are not "O/S" things, and I've added them after the "likely" macros, and both are compiler things, so `common.h` seems reasonable.

I've also updated the whitespace in the two sections before and after, so that it matches how we normally do things._|_Fixes https://github.com/openssl/project/issues/198
Fixes https://github.com/openssl/openssl/issues/21912
_|_This adds support for SSL_want. It also sets the last error variable on successful execution of any 'I/O' function, not just on failure.

We still need to decide what to do about
- `SSL_RETRY_VERIFY`
- `SSL_X509_LOOKUP`
- `SSL_CLIENT_HELLO_CB`

which are not currently supported by the QUIC_TLS code.

```
30730c8416 QUIC MULTISTREAM TEST: Test SSL_want for consistency with SSL_get_error
738ffea096 QUIC APL: Implement SSL_want
66ff948d30 QUIC APL: Revise I/O error setting so that the last error is set on success
f1ac737d91 QUIC APL: Adjust expect_quic_conn_only
```

Fixes https://github.com/openssl/project/issues/197_|_Fixes Coverity 1542440
_|_Fixes [#21498](https://github.com/openssl/openssl/issues/21498)

CLA: trivial
_|_This code was added in error and is entirely redundant. It is also an expensive operation (e.g. see #21833).

Fixes #21834
_|_As discussed in https://github.com/openssl/openssl/discussions/21864

OPENSSL_init_crypto() with OPENSSL_INIT_LOAD_CONFIG must load the configuration into the initial global default library context, not the currently set default library context.

OPENSSL_init_crypto() with OPENSSL_INIT_LOAD_CONFIG may be called within other OpenSSL API functions, e.g. from within EVP_PKEY_CTX_new_xxx() when initializing a pkey context, to perform implicit initialization, if it has not been initialized yet. This implicit initialization may happen at a time when an application has already create its own library context and made it the default library context. So loading the config into the current default library context would load it into the applications library context._|_Fixes https://github.com/openssl/openssl/issues/21892_|_This is necessary to fix the failing CI.
_|_Fixes #21564

This fix was more difficult to do than expected,
but on the bright side it simplifies the code by 
* getting rid of legacy, no more calling `OBJ_find_sigid_algs()` and `OBJ_find_sigid_by_algs()`, and
* assigning `msg->header->protectionAlg` in an abstract way via `ASN1_item_sign_ex(ASN1_ITEM_rptr()`.

The tests and internal doc are extended according to the peculiarities of Edwards keys,
where also the `verify_signature()` test function had to be updated, which in fact simplified its implementation.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_Implement the dupctx method for the chacha20 cipher, so that EVP_PKEY_CTX_copy works

Its pretty straightforward, its basically just a memdup.  Checking the pointers that might need fixing up:

in PROV_CHACHA20_CTX all members are statically declared, so memduping should be fine

in PROV_CHACHA20_CTX->base (PROV_CIPHER_CTX):
        Non statically declared members:
                *tlsmac needs to get memduped to avoid double free
                 conditions
                *hw pointer is always assigned to the chacha20_hw global
                 variable, so can be left alone
                *libctx can be left alone as provctx is always NULL in
                 chacha20_newctx
                *ks appears unused by chacha20, so can be ignored

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #21874
Fixes #21876
_|_##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_The PKCS5 (RFC 8018) standard uses a 64 bit salt length for PBE, and recommends a minimum of 64 bits for PBES2. For FIPS compliance PBKDF2 requires a salt length of 128 bits.
This affects OpenSSL command line applications such as "genrsa" and "pkcs8" and API's such as PEM_write_bio_PrivateKey() that are reliant on the default value.

The "pkcs8" and "enc" applications now have an extra "saltlen" option which allows the user to set the lenght of the salt.
Note that "genrsa" can only use defaults since it has no way of passing the saltlen down thru the API's.. If you wanted to change the saltlen you could always use "genrsa" followed by a "pkcs8" (with the salt length set to non default).

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_fixed_size is set in dgram_pair_ctrl_set_write_buf_size(). When it's not set, we should grow._|_Recently the Coveralls CI run started failing
because it times out in this test.
Outside of Coveralls it runs fine so assuming that this is caused by slow execution under Coveralls.
_|_These were not meant to be pushed as they move on-push CI to on-pull-request which was useful for the PR which was supposed to fix failures of these CI runs but not permanently as these take too long time to run.
_|_The function SSL_set_initial_peer_addr() got renamed to SSL_set1_initial_peer_addr(). The demo missed out on the rename when it got rebased on top of it.
_|_The assembler will complain when we include loongarch_arch.h in an assembly file as following:

crypto/loongarch_arch.h: Assembler messages:
crypto/loongarch_arch.h:12: Fatal error: no match insn: extern	unsigned int OPENSSL_loongarch_hwcap_P

So, the sentence of `extern unsigned int OPENSSL_loongarch_hwcap_P` should be guarded with "#ifndef \_\_ASSEMBLER\_\_".

Fixes #21838.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #4668 (on unix-like platforms)

Update the unix Makefile template and some c sources to handle paths with spaces.

Testing:

```
rm -rf "$HOME/tmp/beforespace afterspace"
./Configure -Werror --strict-warnings --prefix="$HOME/tmp/beforespace afterspace"
make -j6 update
make -j6
make install
make test
```
_|_As discussed in https://github.com/openssl/openssl/issues/21813 further fixes for RSA-PSS keys._|_##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated

Closes: https://github.com/openssl/openssl/issues/21813_|_Fixes #21701
_|_This removes those functions for Windows targets,
as a simple interim solution.

Fixes #21522
_|_If we've got more data to send than will fit in a single datagram we should keep generating those datagrams until we've sent it all.

Making this change triggered a related problem which meant that every time we created a datagram we added a CONNECTION_CLOSE frame if one was scheduled. We weren't remembering that we had already sent it. This issue (probably) wasn't triggerable before so was not a problem._|_Make sure we free the stack of names we allocated in an error path.

Found by the reproducible error patch in #21668

_|_In some cases where a FIN has been received but with no data quic_read_actual
was failing to raise SSL_ERROR_ZERO_RETURN. This meant that we could end up
blocking in SSL_read(_ex) for too long._|_This builds on the existing tutorial on writing a blocking QUIC client to add multi-stream support. We also add a corresponding demo.

There's also a few miscellaneous improvements and cleanups to some of the previous tutorial material.

Finally we update quicserver to be able to interoperate with the multi-stream demo code._|_Some version negotiation fixes were intended to be part of the previous conformance updates but got lost.

Also, we weren't handling SSL_set_mode correctly._|_If setting the crypto state has failed then memory might have been partially allocated to fields within the partially constructed record layer. We need to call tls_int_free() to properly free it.

Found by the reproducible error patch in openssl#21668

_|_Fix unmatched stack allocation in assembly for `felem_{mul,square}()`. This should always present as a bug._|_Fix two memory issues detected by #21668._|_issue: https://github.com/openssl/openssl/issues/21718

build break reported:
crypto/threads_pthread.c:76:5: warning: implicit declaration of function 'pthread_mutexattr_settype'; did you mean 'pthread_mutexattr_destroy'? [-Wimplicit-function-declaration]
   76 |     pthread_mutexattr_settype(&attr, PTHREAD_MUTEX_NORMAL);
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~
      |     pthread_mutexattr_destroy
crypto/threads_pthread.c:76:38: error: 'PTHREAD_MUTEX_NORMAL' undeclared (first use in this function); did you mean 'PTHREAD_MUTEX_TIMED_NP'?
   76 |     pthread_mutexattr_settype(&attr, PTHREAD_MUTEX_NORMAL);
      |                                      ^~~~~~~~~~~~~~~~~~~~
      |                                      PTHREAD_MUTEX_TIMED_NP

This occurs because PTHREAD_MUTEX_NORMAL is only defined in glibc if __USE_UNIX98 or __USE_XOPEN2K8 is defined, which is derived from setting __USE_POSIX_C_SOURCE or __XOPEN_SOURCE is selected in the glibc feature set for a build.  Since openssl selects no specific feature set from glibc, the build break occurs

We could select a feature set of course, but that seems like a significant discussion to have prior to doing so. Instead, the simpler solution is to just not set the mutex type at all, given that pthread_mutexattr_init sets the default mutex type, which should be akin to normal anyway (i.e. no mutex error checking or allowed-recursive behavior)

_|_bn_wexpand can fail as the result of a memory allocation failure. We should not be calling ossl_assert() on its result because it can fail in normal operation.

Found via the reproducible error injection in #21668
_|_Found via the reproducible error injection in #21668
_|_Fix no-dtls in combination with no-tls.
Fix no-dsa in combination with no-err.
_|_RFC says that successful decryption of HANDSHAKE el packet triggers the discard on server side only.

On client we discard INITIAL el when we successfully send a HANDSHAKE packet.

Fixes #21607
_|_A check for the return value of the function `WPACKET_get_total_written()` was added._|_The return value of the `RAND_bytes()` function is not checked. At the same time, the function might return `0` without changing the value of the `out` variable passed to it. This variable will be used later on, so a check for the function's return value has been added.


Perhaps this would be more correct:
```
  if (RAND_bytes(out, 16) <= 0)
        goto err;
```

_|_In the function `static int bytepad:549` there is a division by the function parameter `w`.
If this parameter is set to zero, a division by zero will occur.

Therefore, a zero check for the parameter `w` was added at the beginning of the function.

Below is an example of the sanitizer output if the function `bytepad` is passed a parameter w of 0.

![image](https://github.com/openssl/openssl/assets/18628960/d3a6ccb2-9d9f-4118-a7e7-0a184bb9c808)
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
Fixes #21694
Add checking of return values of `i2d_X509_NAME` and handle errors.

Found by Linux Verification Center (linuxtesting.org) with SVACE._|_Fixes #17923 as discussed there for backward compatibility with undocumented proxy support feature, which can be reached by creative use of the `path` parameter.
Document this also for `OSSL_HTTP_set1_request()`.
As mentioned, also fix documentation of `server` and `port` parameters.


_|_

fix leaked pointer when BIO_NOCLOSE is set
    
    Was working on an application when valgrind generated this memory leak
    error for us:
    
    ==1007580== at 0x483C815: malloc (vg_replace_malloc.c:431)
    ==1007580== by 0x2C2689: CRYPTO_zalloc (in /home/vien/microedge-c/test)
    ==1007580== by 0x295A17: BUF_MEM_new (in /home/vien/microedge-c/test)
    ==1007580== by 0x295A78: BUF_MEM_new_ex (in /home/vien/microedge-c/test)
    ==1007580== by 0x28CACE: mem_new (in /home/vien/microedge-c/test)
    ==1007580== by 0x285EA8: BIO_new_ex (in /home/vien/microedge-c/test)
    ==1007580== by 0x231894: convert_pubkey_ECC (tpm2_driver.c:221)
    ==1007580== by 0x232B73: create_ephemeral_key (tpm2_driver.c:641)
    ==1007580== by 0x232E1F: tpm_gen_keypair (tpm2_driver.c:695)
    ==1007580== by 0x22D60A: gen_keypair (se_driver_api.c:275)
    ==1007580== by 0x21FF35: generate_keypair (dhkey.c:142)
    ==1007580== by 0x24D4C8: __test_dhkey (dhkey_test.c:55)
    
    The error occurs because BIO_new(BIO_s_mem()) allocates:
    1) a BIO struct
    2) a BIO_BUF_MEM struct which holds a data pointer that is
       (re)-allocated as data is written to the BIO
    
    When BIO_set_close(bio, BIO_NOCLOSE) is set in the calling program, the
    expectation is that the BIO_BUF_MEM data pointer is orphaned so that the
    calling code can take ownership of it via BIO_get_mem_data().
    
    This all works as expected.  However, on calling BIO_free, the s_mem
    implementation calls mem_free->mem_buf_free which, when BIO_NOCLOSE is
    set (shadowed via BIO->shutdown), implements the data pointer orphaning
    by just not calling BIO_BUF_free.  This properly skips the freeing of
    the data pointer, but also leaves the controlling BIO_BUF_MEM struct
    allocated, leading to the leak report above.
    
    Fix (I think) is pretty simple.  In mem_buf_free, we should always call
    BUF_MEM_free (if the corresponding pointer is not NULL), but if
    a->shutdown is 0, we should set the BIO_BUF_MEM->data pointer to NULL.
    This will cause BUF_MEM_free to deallocate the BIO_BUF_MEM data
    structure, but skip the freeing of the actual data

_|_Updates for a few issues related to conformance in the QUIC TLS implementation._|_This can be reproduced with my error injection patch.

The test vector has been validated on the master branch:

$ ERROR_INJECT=1692279870 ../util/shlib_wrap.sh ./asn1parse-test ./corpora/asn1parse/027f6e82ba01d9db9a9167b83e56cc9f2c602550 ERROR_INJECT=1692279870
    #0 0x7f280b42fef8 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86
    #1 0x5610a3f396b4 in my_malloc fuzz/test-corpus.c:114
    #2 0x7f280a2eb94c in CRYPTO_malloc crypto/mem.c:177
    #3 0x7f280a2dafdb in OPENSSL_LH_insert crypto/lhash/lhash.c:114
    #4 0x7f280a1c87fe in err_load_strings crypto/err/err.c:264
    #5 0x7f280a1c87fe in err_load_strings crypto/err/err.c:259
    #6 0x7f280a1c87fe in ERR_load_strings_const crypto/err/err.c:301
    #7 0x7f280a6f513b in ossl_err_load_PROV_strings providers/common/provider_err.c:233
    #8 0x7f280a1cf015 in ossl_err_load_crypto_strings crypto/err/err_all.c:109
    #9 0x7f280a2e9b8c in ossl_init_load_crypto_strings crypto/init.c:190
    #10 0x7f280a2e9b8c in ossl_init_load_crypto_strings_ossl_ crypto/init.c:181
    #11 0x7f2808cfbf67  (/lib/x86_64-linux-gnu/libc.so.6+0x99f67)
    #12 0x7f280a32301e in CRYPTO_THREAD_run_once crypto/threads_pthread.c:154
    #13 0x7f280a2ea1da in OPENSSL_init_crypto crypto/init.c:553
    #14 0x5610a3f38e2f in FuzzerInitialize fuzz/asn1parse.c:29
    #15 0x5610a3f38783 in main fuzz/test-corpus.c:194
    #16 0x7f2808c8bd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)
    #17 0x7f2808c8be3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)
    #18 0x5610a3f38d34 in _start (/home/runner/work/openssl/openssl/fuzz/asn1parse-test+0x3d34)

AddressSanitizer:DEADLYSIGNAL
================================================================= ==27629==ERROR: AddressSanitizer: ABRT on unknown address 0x03e900006e23 (pc 0x7f2808cfbef8 bp 0x7f280b36afe0 sp 0x7ffd545b2460 T0)
    #0 0x7f2808cfbef8  (/lib/x86_64-linux-gnu/libc.so.6+0x99ef8)
    #1 0x7f280a32301e in CRYPTO_THREAD_run_once crypto/threads_pthread.c:154
    #2 0x7f280a2ea1da in OPENSSL_init_crypto crypto/init.c:553
    #3 0x7f280a1c935e in ossl_err_get_state_int crypto/err/err.c:705
    #4 0x7f280a1cf1f9 in ERR_new crypto/err/err_blocks.c:20
    #5 0x7f280a2eb9ac in CRYPTO_malloc crypto/mem.c:205
    #6 0x7f280a2dafdb in OPENSSL_LH_insert crypto/lhash/lhash.c:114
    #7 0x7f280a1c87fe in err_load_strings crypto/err/err.c:264
    #8 0x7f280a1c87fe in err_load_strings crypto/err/err.c:259
    #9 0x7f280a1c87fe in ERR_load_strings_const crypto/err/err.c:301
    #10 0x7f280a6f513b in ossl_err_load_PROV_strings providers/common/provider_err.c:233
    #11 0x7f280a1cf015 in ossl_err_load_crypto_strings crypto/err/err_all.c:109
    #12 0x7f280a2e9b8c in ossl_init_load_crypto_strings crypto/init.c:190
    #13 0x7f280a2e9b8c in ossl_init_load_crypto_strings_ossl_ crypto/init.c:181
    #14 0x7f2808cfbf67  (/lib/x86_64-linux-gnu/libc.so.6+0x99f67)
    #15 0x7f280a32301e in CRYPTO_THREAD_run_once crypto/threads_pthread.c:154
    #16 0x7f280a2ea1da in OPENSSL_init_crypto crypto/init.c:553
    #17 0x5610a3f38e2f in FuzzerInitialize fuzz/asn1parse.c:29
    #18 0x5610a3f38783 in main fuzz/test-corpus.c:194
    #19 0x7f2808c8bd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)
    #20 0x7f2808c8be3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)
    #21 0x5610a3f38d34 in _start (/home/runner/work/openssl/openssl/fuzz/asn1parse-test+0x3d34)

AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: ABRT (/lib/x86_64-linux-gnu/libc.so.6+0x99ef8) ==27629==ABORTING

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This fixes the reported crashes 32-bit HPUX systems due to raw out and inp pointer values, and adds one nop instruction on 64-bit systems, like it is done in other assembly modules for those systems.

The fix was tested by @johnkohl-hcl see:
https://github.com/openssl/openssl/issues/17067#issuecomment-1668468033

Fixes #17067

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #21623 #21624 #21625 #21626_|_CLA: provided

CMS_ContentInfo_free called ossl_cms_get0_env_enc_content, which called cms_get_enveloped_type, which raised error CMS_R_CONTENT_TYPE_NOT_ENVELOPED_DATA for the content info if it contained only signed data.

##### Checklist
- [x] tests are added or updated
_|_CLA: provided

PKCS12_create_ex method called PKCS12_add_cert (if certificate was specified), which added friendly name and local key id attributes if present in the certificate auxiliary data. Then it tried to add friendly name specified by the user and local key id calculated earlier again. Then error with duplicate attributes happened and p12 was not created.

Added a check not to add friendly name and local key id attributes for a second time if they were already added.

##### Checklist
- [x] tests are added or updated
_|_This is based on resolving https://github.com/microsoft/vcpkg/issues/30645.

Despite having `nasm` 2.16.01, and having its directory prepended to `PATH`, and having `AS` set to its filepath, and nasm having nasm `ASM` and `ASMFLAGS` burned into the nmake Makefile, some users faced generated asm code which couldn't be handled by nasm.

This PR just mirrors the existing behaviour for VC win32 (`vc_win32a_info`): Select the specific `perlasm_scheme` for nasm and masm instead of  `auto` when `Configure` also selects the specific asm flags for these tools. AFAIU `auto` doesn't make much sense once the specific flags are fixed.

Disclaimer: I'm not a VC user, except for vcpkg CI._|_* `apps/cmp.c`: fix glitch not allowing to reset `-csr` and `-serial` option values
* `apps.c`: improve warning texts of `parse_name()` when skipping RDN input
* `apps.c`: fix error messages (newline and needless text) in `load_key_certs_crls()`_|_This PR is only needed for the 3.0 and 3.1 branches.
The PR was created following the discussion in PR #21587. 
Also, in PR #21497 was incorrectly added to the 3.0 and 3.1 branches `ERR_raise(..., ERR_R_ASN1_LIB)` and I suggest making changes for this case as well.

Found by Linux Verification Center (linuxtesting.org) with SVACE._|_When `$label eq "0"`, `$label `is not truthy, so `if ($label)` thinks there isn't a label. Correct this by looking at the result of the `s///` operator.

Verified that there are no changes in the .S files created during a normal build, and that the "0:" labels appear in the translation given in the error report (and they are the only difference in the before and after output).

Fixes #21647

Should apply cleanly to 3.0 and 3.1 as well as master_|_Fix CI breakage in master caused by interaction of two different PRs. Urgent due to CI breakage._|_The no-autoload-config option stopped working after 1.1.1.
It should work still.

- [x] documentation is added or updated
- [x] tests are added or updated
_|_I wrote a small H3 client to test QUIC with nghpp3 it looks like the handshake packets were not processed correctly.
Setting ch->el_discarded to QUIC_ENC_LEVEL_INITIAL seems to help._|_A null pointer dereference occurs when memory allocation fails
Fixes #21605

_|_The PEM_read_bio_Parameters[_ex] function does not have the capability of specifying a password callback. We should not use the fallback password callback in this case because it will attempt to send a prompt for the password which might not be the correct thing to do. We should just not use a password in that case.

#Fixes #21588

While fixing the above I noticed some other odd behaviour with the decoders and fixed that too.

We're always supposed to add the fallback "unsupported" error if we don't have anything better. However in some cases this wasn't happening because we were incorrectly setting "flag_construct_called" - even though the construct function had failed.

msblob only decodes public/private keys (not just params). pvk only decodes private keys. If the requested selection doesn't intersect with the above then don't consider those decoders._|_Function `asn1_str2type()` (crypto\asn1\asn1_gen.c) uses function `ASN1_STRING_set()` to set the ASN1 string (line 702), but the result of `ASN1_STRING_set()` execution is not checked, although it may fail.
In the same function `asn1_str2type()`  on line 648 the result of `ASN1_STRING_set()`  is checked.

Added ASN1_STRING_set() check result.

Found by Linux Verification Center (linuxtesting.org) with SVACE._|_Probably urgent as tests in master fail.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [X] tests are added or updated
_|_This PR has been reviewed and tested for 3.1 only - I will look at 3.0 next.

`crypto/armcap.c` does capability detection for Arm and AArch64 systems on Linux, Apple Silicon-based Darwin (iOS, macOS, etc), Windows, and other operating systems.

On 3.1 and earlier it uses a combination of `sysctl()`, `getauxval()` and `SIGILL`-based capability detection that has grown organically and `SIGILL` handling is done in all nearly cases. This has caused problems on both Apple Silicon and Linux-based systems: `lldb` on Apple Silicon is unable to step over any failing `SIGILL`-based tests, which can thwart developing iOS apps under Xcode; and signals are inherently not thread-safe, causing issues in multi-threaded programs (both macOS and Linux).

`crypto/armcap.c` was significantly refactored in `master`, and will be released in OpenSSL 3.2, but was deemed too great a risk for backporting to 3.0 and 3.1. However, that decision only considered the "debugging-under-Darwin" issues, and not the multi-threaded issues.

While it would be possible to make a smaller update to `armcap.c` than the original refactor, the majority of the work was done in separating out the flows for Apple, `getauxval()` and `SIGILL` rather than the `arm_probe_for()` part of the refactoring.

Making that smaller change in 3.1 (or 3.0) would have almost all the risk that went with doing it in `master` originally, as it would be new code.

The version of `armcap.c` in master has now been used for several months - and indeed some minor problems were found on non-AArch64 systems, but we have fixes for those.

So the approach with least risk appears to be to bring in `armcap.c` from `master` with the associated fixes.

The versions of crypto/armcap.c in master and the 3.1 branch have diverged somewhat.

master:
```
m0 - ba9472c1c1   Update with `ARMV8_HAVE_SHA3_AND_WORTH_USING`
m1 - 08e6eb216c   Move CPU detection to armcap.c
m2 - 7b508cd1e1   Ensure there's only one copy of OPENSSL_armcap_P in libcrypto.a
m3 - 93370db1fc   Avoid duplication of OPENSSL_armcap_P on 32bit ARM
m4 - 52a38144b0   Tidy up aarch64 feature detection code in armcap.c
m5 - 513e103f14   Apply aes-gcm unroll8+eor3 optimization patch to Neoverse V2
m6 - d79bb5316e   Enable AES optimisation on Apple Silicon M2-based systems
m7 - f97ddfc305 * Fix the code used to detect aarch64 capabilities when we don't have getauxval()
```

3.1:
```
b0 - 50af7294e5   Don't do SIGILL capability detection on Apple Silicon
b1 - a6e5003051 * Fix the code used to detect aarch64 capabilities when we don't have getauxval()
b2 - 0703f3f9df   Add two new build targets to enable the possibility of using clang-cl as an assembler for Windows on Arm builds...
b3 - 2e7f6ca65d   Apply the AES-GCM unroll8 optimization patch to Neoverse N2
b4 - a14eff6319   Acceleration of chacha20 on aarch64 by SVE
b5 - 34ca334e5d   Optimize AES-GCM for uarchs with unroll and new instructions
b6 - 37f1828d87   SM4 optimization for ARM by HW instruction
b7 - 654490cebf   SM3 acceleration with SM3 hardware instruction on aarch64
```

`* diff -u armcap-f97ddfc305.c armcap-a6e5003051.c` -- these two versions are identical

The last identical versions are at `f97ddfc305` in master ('m7') and `a6e5003051` in 3.1 ('b1').  The only change following that in 3.1 was a minor change to not use the `SIGILL` capability testing on Apple Silicon, but that doesn't help us on Linux.

In terms of risk, it would be possible to rewrite `armcap.c` on 3.1 differently, with less of a refactor, but the changes would be significant.

The rewrite that went into master was thoroughly tested, and preprocessor output looked at under multiple combinations of compilation options and processor types. One issue was subsequently found, which was partly fixed in `93370db1fc` ('m3') and fully fixed in `7b508cd1e1` ('m2'), although this fixed required (straightforward) changes in multiple assembly (`.pl`) files.

This pull request takes the version of `crypto/armcap.c` at `7b508cd1e1` ('m2') and bringing it into 3.1 as-is with the corresponding assembly changes.

(Note `armcap.c` at `52a38144b0` ('m4') and `7b508cd1e1` ('m2') are identical - the fix was required in the assembly files.)

While this means some performance improvements for Apple Silicon M2 will also come in, in terms of reducing risk having the code as similar as possible will mean any future fixes needed to `armcap.c` can be easily applied.

This version of `armcap.c` will not do `SIGILL` capability detection on Apple Silicon (so matching the latest bug fix on 3.1) and will also not do that on Linux where `getauxval()` is present. This improves stability when debugging on Darwin (macOS/iOS/etc) and in multi-threaded programs (both Darwin and Linux).
_|_I've just found a regression bug in version 3.0.9 that only surfaces with responses to legacy `p10cr`, 
causing a wrong rejection with `"CMP error: bad request id"`, which is fixed here.

Meanwhile for CertReqID the value `-1` is legal (`OSSL_CMP_CERTREQID_NONE` defined in `cmp_local.h`),
so the error return value of `ossl_cmp_asn1_get_int()` cannot be `-1` any more.
Therefore the error value of this internal function is changed to `-2` (`OSSL_CMP_CERTREQID_INVALID`).
_|_This same out of trying to make s_client try to play nicely with the quicserver utility (util/quicserver.c).

It turns out that the s_client QUIC functionality was broken sometime after it was implemented by changes in the QUIC code. We need to find a reasonable way of testing s_client in QUIC mode in the test framework (we can't do this at the moment).

I also fixed one error in quicserver which I found when connecting to it from s_client._|_Also fixes a similar regression in X509_VERIFY_PARAM_add0_table().

Commit 38ebfc3 introduced a regression in 3.0.6 that changed the return value of the two functions above from 1 on success to the number of entries in the stack. If there are more than one entry then this is a change in behaviour which should not have been introduced into a stable release.

This reverts the behaviour back to what it was prior to the change. The code is slightly different to the original code in that we also handle a possible -1 return value from the stack push function. This should never happen in reality because we never pass a NULL stack as a parameter - but for the sake of robustness we handle it anyway.

Note that the changed behaviour exists in all versions of 3.1 (it never had the original version). But 3.1 should be fully backwards compatible with 3.0 so we should change it there too.

Fixes #21570
_|_Fixes #21554

CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
_|_Fix excessive time spent checking DH q parameter value.

The function DH_check() performs various checks on DH parameters. After
fixing CVE-2023-3446 it was discovered that a large q parameter value can
also trigger an overly long computation during some of these checks.
A correct q value, if present, cannot be larger than the modulus p
parameter, thus it is unnecessary to perform these checks if q is larger
than p.

CVE-2023-3817_|_The function DH_check() performs various checks on DH parameters. After
fixing CVE-2023-3446 it was discovered that a large q parameter value can
also trigger an overly long computation during some of these checks.
A correct q value, if present, cannot be larger than the modulus p
parameter, thus it is unnecessary to perform these checks if q is larger
than p.

If DH_check() is called with such q parameter value,
DH_CHECK_INVALID_Q_VALUE return flag is set and the computationally
intensive checks are skipped.
_|_Fixes #17067

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Is this the right way to do this?  (draft PR)

I'm not very familiar with the build system for openssl.  Is there a way to create an asm_arch that inherits from another asm_arch and lets you override some of its settings?  Since I didn't know how to do that, I instead made a copy of the ia64 asm configuration, named ia64_hpux32, and skipped the one assembly module that fails for HPUX 32-bit with native HP compilers.

So I'll mark this as a draft to gather recommendations on a better way to fix this.

##### build problems

I can build this equivalent change against 3.0.9 release, and the unit tests pass (whereas they failed for chacha-related tests without this change).  But I can't build anything on master right now on any platform I have available.    I get a failure with undefined symbols, I think someone is missing an include of include/openssl/err.h ?  Here's an example from a linux x86_64 build attempt:

```
gcc  -I. -Iinclude -Iproviders/common/include -Iproviders/implementations/include  -DAES_ASM -DBSAES_ASM -DCMLL_ASM -DECP_NISTZ256_ASM -DGHASH_ASM -DKECCAK1600_ASM -DMD5_ASM -DOPENSSL_BN_ASM_GF2m -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_CPUID_OBJ -DOPENSSL_IA32_SSE2 -DPOLY1305_ASM -DRC4_ASM -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DVPAES_ASM -DWHIRLPOOL_ASM -DX25519_ASM -fPIC -pthread -m64 -Wa,--noexecstack -Wall -O3 -DOPENSSL_USE_NODELETE -DL_ENDIAN -DOPENSSL_PIC -DOPENSSLDIR="\"/vobs/public/openssl/openssl-build-IBM/3.0.9/ssl\"" -DENGINESDIR="\"/vobs/public/openssl/openssl-build-IBM/3.0.9/lib64/engines-3\"" -DMODULESDIR="\"/vobs/public/openssl/openssl-build-IBM/3.0.9/lib64/ossl-modules\"" -DOPENSSL_BUILDING_OPENSSL -DNDEBUG  -MMD -MF crypto/dh/libcrypto-lib-dh_meth.d.tmp -MT crypto/dh/libcrypto-lib-dh_meth.o -c -o crypto/dh/libcrypto-lib-dh_meth.o crypto/dh/dh_meth.c
In file included from crypto/dh/dh_local.h:11,
                 from crypto/dh/dh_meth.c:16:
include/internal/refcount.h: In function 'CRYPTO_NEW_REF':
include/internal/refcount.h:225: warning: implicit declaration of function 'ERR_raise'
include/internal/refcount.h:225: error: 'ERR_LIB_CRYPTO' undeclared (first use in this function)
include/internal/refcount.h:225: error: (Each undeclared identifier is reported only once
include/internal/refcount.h:225: error: for each function it appears in.)
include/internal/refcount.h:225: error: 'ERR_R_CRYPTO_LIB' undeclared (first use in this function)
make[1]: *** [crypto/dh/libcrypto-lib-dh_meth.o] Error 1
make[1]: Leaving directory `/home/jtk/openssl/openssl-master'
make: *** [build_sw] Error 2
```
##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->

_|_For some of the items we add FUTURE/SERVER/TESTING/MULTIPATH designation to indicate these do not necessarily need to be resolved in QUIC MVP release.
_|_Database is "database", not "data base" 😂 
##### Checklist
- [X] documentation is added or updated
- [X] tests are added or updated

credit: @yacanka
_|_The pre-existing error cases where DH_check returned zero are not related to the dh params in any way, but are only triggered by out-of-memory errors, therefore having *ret set to zero feels right, but since the new error case is triggered by too large p values that is something different. On the other hand some callers of this function might not be prepared to handle the return value correctly but only rely on *ret. Therefore we set some error bits in *ret as additional saftety measure.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_In the definition of the latest revised LoongArch64 vector instruction manual, it is clearly pointed out that the undefined upper three bits of each byte in the control register of the vshuf.b instruction should not be used, otherwise uncertain results may be obtained. Therefore, it is necessary to correct the use of the vshuf.b instruction in the existing vpaes-loongarch64.pl code to avoid erroneous calculation results in future LoongArch64 processors.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The pre-existing error cases where DH_check returned zero are not related to the dh params in any way, but are only triggered by out-of-memory errors, therefore having *ret set to zero feels right, but since the new error case is triggered by too large p values that is something different. On the other hand some callers of this function might not be prepared to handle the return value correctly but only rely on *ret. Therefore we set all bits in *reg as an additional saftety measure.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This corrects two serious problems - one in decoders where we try to export/import things with 0 selection which is not meaningful and the second in the actual keymgmt export functions which instead of failing on such export call, they produce bogus (empty) keys.

Fixes #21493
_|_With OPENSSL_TEST_LIBCTX=1 a specific libctx is created and providers are loaded into this libctx.
Within libcrypto functions try to use a libctx but may fall back to some built-in default which is out of sync.
Synchronize the libctx.

Fixes #21516 
_|_Fixes #21502

Function `get_cert_by_subject_ex()` (crypto\x509\by_dir.c) uses function `X509_STORE_lock()` to lock the store, but the result of `X509_STORE_lock()` execution is not checked, although it may fail.

Added `X509_STORE_lock()`() check result._|_Small extra test for the TXP refactor in response to @t8m's suggestion
_|_When an early error happens in the test_pipelining function and idx == 5 the error handling would try to call OPENSSL_free(msg), but msg is at that time just a string constant in read-only memory, so a
crash would be the result. Fixed that by using
fragsize as an indication when to free msg.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Running LSX instructions requires both the hardware support and the kernel support.  The `cpucfg` instruction only tests the hardware support, causing a SIGILL if the hardware supports LSX but the kernel does not.

Use `getauxval(AT_HWCAP)` as the ["Software Development and Build Convention for LoongArch Architectures"][1] manual suggests.

The LOONGARCH_HWCAP_LSX and LOONGARCH_HWCAP_LASX bits are copied from the manual too.  In Glibc 2.38 they'll be provided by <sys/auxv.h> as well, but they are unavailable in earlier Glibc versions so we cannot rely on it.

The getauxval syscall and Glibc wrapper are available since day one (Linux-5.19 and Glibc-2.36) for LoongArch.

Fixes #21508.

[1]:https://github.com/loongson/la-softdev-convention/blob/master/la-softdev-convention.adoc#kernel-constraints_|_Function `X509at_add1_attr()` (crypto/x509/x509_att.c) rejects to add a duplicity into `*x` but it searches in a wrong stack.

Changed to search in `*x`.
_|_Fix #21477 Clang strict build initialization

CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #21492 

Function `v2i_issuer_sign_tool()` (crypto\x509\v3_ist.c) uses function `ASN1_STRING_set()` to set the ASN1 string, but the result of `ASN1_STRING_set()` execution is not checked, although it may fail.

Added `ASN1_STRING_set()` check result.
_|_I suggest changing code so that there is no unreachable code.
There is a warning in cms_main() on line 843, but it is unreachable 
because on line 817 there is a check 'if (operation == SMIME_ENCRYPT)', and line 843 is in this loop and condition to hit the line 843 is 'operation != SMIME_ENCRYPT'_|_In my opinion this is a bug fix as there is currently no way to get the legacy provider built-in but also support loading 3rd party providers or the fips provider from another build.

One can of course disable dso explicitly but there is no reason to be disabling it implicitly with no-module. There is no code dependency or anything.

_|_[//]: # (dependabot-start)
⚠️  **Dependabot is rebasing this PR** ⚠️ 

Rebasing might not happen immediately, so don't worry if this takes some time.

Note: if you make any changes to this PR yourself, they will take precedence over the rebase.

---

[//]: # (dependabot-end)

Bumps [actions/setup-python](https://github.com/actions/setup-python) from 4.6.1 to 4.7.0.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href="https://github.com/actions/setup-python/releases">actions/setup-python's releases</a>.</em></p>
<blockquote>
<h2>v4.7.0</h2>
<p>In scope of this release, the support for reading python version from pyproject.toml was added (<a href="https://redirect.github.com/actions/setup-python/pull/669">actions/setup-python#669</a>).</p>
<pre lang="yaml"><code>      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version-file: pyproject.toml
</code></pre>
<h3>Besides, it includes such changes as:</h3>
<ul>
<li>Bump tough-cookie and <code>@​azure/ms-rest-js</code> by <a href="https://github.com/dependabot"><code>@​dependabot</code></a> in <a href="https://redirect.github.com/actions/setup-python/pull/697">actions/setup-python#697</a></li>
<li>Bump semver from 7.3.8 to 7.5.2 by <a href="https://github.com/dependabot"><code>@​dependabot</code></a> in <a href="https://redirect.github.com/actions/setup-python/pull/692">actions/setup-python#692</a></li>
<li>Fix typos found by codespell by <a href="https://github.com/DimitriPapadopoulos"><code>@​DimitriPapadopoulos</code></a> in <a href="https://redirect.github.com/actions/setup-python/pull/650">actions/setup-python#650</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a href="https://github.com/dariocurr"><code>@​dariocurr</code></a> made their first contribution in <a href="https://redirect.github.com/actions/setup-python/pull/669">actions/setup-python#669</a></li>
<li><a href="https://github.com/DimitriPapadopoulos"><code>@​DimitriPapadopoulos</code></a> made their first contribution in <a href="https://redirect.github.com/actions/setup-python/pull/650">actions/setup-python#650</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href="https://github.com/actions/setup-python/compare/v4...v4.7.0">https://github.com/actions/setup-python/compare/v4...v4.7.0</a></p>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/actions/setup-python/commit/61a6322f88396a6271a6ee3565807d608ecaddd1"><code>61a6322</code></a> Fix typos found by codespell (<a href="https://redirect.github.com/actions/setup-python/issues/650">#650</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/ea5b57fccc93aea0d77e6225efa19adaec3fce0d"><code>ea5b57f</code></a> Bump semver from 7.3.8 to 7.5.2 (<a href="https://redirect.github.com/actions/setup-python/issues/692">#692</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/014d32a83013b439dd2a147051d855831576a3ef"><code>014d32a</code></a> Bump tough-cookie and <code>@​azure/ms-rest-js</code> (<a href="https://redirect.github.com/actions/setup-python/issues/697">#697</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/c16c4b8d1828103eda022b2cade091238fe08311"><code>c16c4b8</code></a> Fix pipenv jobs (<a href="https://redirect.github.com/actions/setup-python/issues/699">#699</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/0d5da6a89a3aa5b4dbd48e38b0c9d678b0caa0e5"><code>0d5da6a</code></a> Read python version from pyproject.toml (fix <a href="https://redirect.github.com/actions/setup-python/issues/542">#542</a>) (<a href="https://redirect.github.com/actions/setup-python/issues/669">#669</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/3f824b7ca6388f5e27e362d31352e6456c8e3bfb"><code>3f824b7</code></a> remove python 2.7 from the tests (<a href="https://redirect.github.com/actions/setup-python/issues/687">#687</a>)</li>
<li>See full diff in <a href="https://github.com/actions/setup-python/compare/v4.6.1...v4.7.0">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4.6.1&new-version=4.7.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>_|_Bumps [coverallsapp/github-action](https://github.com/coverallsapp/github-action) from 2.2.0 to 2.2.1.
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/coverallsapp/github-action/commit/95b1a2355bd0e526ad2fd62da9fd386ad4c98474"><code>95b1a23</code></a> feat: add files option (<a href="https://redirect.github.com/coverallsapp/github-action/issues/185">#185</a>)</li>
<li><a href="https://github.com/coverallsapp/github-action/commit/12d23ccd512af6f292f5eaf42c191d64928b135c"><code>12d23cc</code></a> feat: add fail-on-error option (<a href="https://redirect.github.com/coverallsapp/github-action/issues/184">#184</a>)</li>
<li><a href="https://github.com/coverallsapp/github-action/commit/8e1cba00ac8bb526c6a1b96b810071687e5e8310"><code>8e1cba0</code></a> feat: add measure option (<a href="https://redirect.github.com/coverallsapp/github-action/issues/183">#183</a>)</li>
<li><a href="https://github.com/coverallsapp/github-action/commit/cb1c78cc8dd8522acce1a460c643e67515393ef6"><code>cb1c78c</code></a> docs: clarify coveralls repo permissions (<a href="https://redirect.github.com/coverallsapp/github-action/issues/182">#182</a>)</li>
<li><a href="https://github.com/coverallsapp/github-action/commit/3b7440a0fbc8822c731c93250c2c5506ca51a48f"><code>3b7440a</code></a> Update README.md (<a href="https://redirect.github.com/coverallsapp/github-action/issues/181">#181</a>)</li>
<li>See full diff in <a href="https://github.com/coverallsapp/github-action/compare/v2.2.0...v2.2.1">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=coverallsapp/github-action&package-manager=github_actions&previous-version=2.2.0&new-version=2.2.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>_|_The DH_check() function checks numerous aspects of the key or parameters
that have been supplied. Some of those checks use the supplied modulus
value even if it is excessively large.

There is already a maximum DH modulus size (10,000 bits) over which
OpenSSL will not generate or derive keys. DH_check() will however still
perform various tests for validity on such a large modulus. We introduce a
new maxium (32,768) over which DH_check() will just fail.

An application that calls DH_check() and supplies a key or parameters
obtained from an untrusted source could be vulernable to a Denial of
Service attack.

The function DH_check() is itself called by a number of other OpenSSL
functions. An application calling any of those other functions may
similarly be affected. The other functions affected by this are
DH_check_ex() and EVP_PKEY_param_check().

CVE-2023-3446 (low severity)_|_The DH_check() function checks numerous aspects of the key or parameters
that have been supplied. Some of those checks use the supplied modulus
value even if it is excessively large.

There is already a maximum DH modulus size (10,000 bits) over which
OpenSSL will not generate or derive keys. DH_check() will however still
perform various tests for validity on such a large modulus. We introduce a
new maxium (32,768) over which DH_check() will just fail.

An application that calls DH_check() and supplies a key or parameters
obtained from an untrusted source could be vulernable to a Denial of
Service attack.

The function DH_check() is itself called by a number of other OpenSSL
functions. An application calling any of those other functions may
similarly be affected. The other functions affected by this are
DH_check_ex() and EVP_PKEY_param_check().

CVE-2023-3446 (low severity)
_|_rhotates tables are placed to .text section which confuses tools such as BOLT.
Move them to rodata to unbreak and avoid polluting icache/iTLB with data._|_SRTP related functions aren't available when built with no-srtp.
_|_ossl_quic_wire_encode_pkt_hdr(): Assign ptrs only on static buf wpkt

Pointers can be invalidated when the underlying BUF_MEM grows.

quicapitest: Fix SSL_trace() test on big endian platforms

The structure member (of int type) is used as single byte value which works only on little endian platforms. Use the correct type._|_Modulus value written to wrong file handle in req command, resulting in invalid certificate file. Changed function and file handle used.

CLA: trivial

Fixes #21403

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Fixes #21335

The `EVP_PKEY_CTX_set0_rsa_oaep_label` and `EVP_PKEY_CTX_get0_rsa_oaep_label` functions have been fixed for usage with the legacy engine. OSSL params are now correctly passed and set in the context.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes Low severity CVE-2023-2975.
_|_As discussed, SSL_read in non-blocking mode should tick if we have no data to return.

Fixes #21365._|_Urgent due to CI breakage on FreeBSD._|_Urgent due to CI failure_|_
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_```
51faba5561 QUIC TXP: Handle non-inflight-eligible packets correctly
67cab10c20 QUIC ACKM: Don't record non-inflight packets in CC
403df59d26 QUIC TXP: Do not generate full-size packets when sending CC-excess probes
8562a19bac QUIC ACKM: RFC 9000 s. 13.2.1: max_ack_delay taken as 0 in INITIAL/HANDSHAKE
01e328b589 QUIC CHANNEL: Initialise max_ack_delay values properly
81c355ab50 QUIC ACKM: Clean up max_ack_delay tracking and separate TX and RX values
a902065ffc QUIC STATM: Move max_ack_delay tracking out of STATM
```_|_Otherwise this testcase won't work with no-ecx.

This fixes the no-ecx run-checker CI on push -> urgent.

_|_
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The implementation is not usable there at all.
Fixes #21301
_|_This is different from TLS where the encryption is done in place and so there is no need to cleanse the data to be sent.

Also cleanse the ring buffer in send and receive streams on release if the cleanse flag is set._|_Suggest urgent due to CI breakage. Partial fix for #21242.

Still not able to reproduce script 13 failures._|_Fixes #21305

_|_FIX: https://github.com/openssl/openssl/issues/21299

ret in ossl_config_int() only used to check return value of CONF_modules_load_file(), should set it to 1 if in UEFI system.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This PR fixed a wrong wbio pointer usage on SSL_get_error.
The bug will cause `SSL_get_error` to return `SSL_ERROR_SYSCALL` even after `BIO_set_retry_write` in some cases such as `BIO_CTRL_FLUSH`. Without this fix, when `BIO_CTRL_FLUSH`, if BIO writer gets a `WOULD_BLOCK` error, it calls `BIO_set_retry_write` and returns 0, it will not work and openssl will return a failure.

Previous review is in #20919 , I reopened this PR to trigger CLA checking._|_In TLSv1.2 we should not attempt to use a supported_group value that is
intended for use with TLSv1.3 - even if both the server and the client
support it, e.g. the ffdhe groups are supported by OpenSSL for TLSv1.3 but
not for TLSv1.2.

Fixes https://github.com/openssl/openssl/issues/21081

This is a backport of #21274 to the 3.1/3.0 branches_|_This is problematic on old compilers. It also avoids duplicating the read-only data.
_|_This fixes the below bug in the right way.

Instead of potentially failing weirdly in CONF_modules_load_file_ex() we just return success if the default config file is an empty string.

Fixes #21258
_|_In TLSv1.2 we should not attempt to use a supported_group value that is
intended for use with TLSv1.3 - even if both the server and the client
support it, e.g. the ffdhe groups are supported by OpenSSL for TLSv1.3 but
not for TLSv1.2.

Fixes https://github.com/openssl/openssl/issues/21081
_|_The pkeyutl app was truncating the input file for decryption leading to
incorrect results. This was probably ok historically when RSA was being
used for decryption which has short maximum sizes. This is not ok with SM2._|_Fixes #20753

We get the values for Apple Silicon from `sysctl`, so the `sigsetjmp()/probe()` dance isn't necessary there.

This matches what is done a bit higher up at line 344.

A test would require running something under `lldb`, so not providing one (sorry)

##### Checklist

(none apply)_|_The function BN_RECP_CTX_set did not check whether arg d is zero, in which case an early failure should be returned to the invoker. This is a similar fix to the cognate defect of CVE-2015-1794.

Fixes #21111

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This change installs `libcommon.a` and `libdefault.a` when building in `no-shared` mode. Without these the `libssl.a` and `libcrypto.a` archives are not particularly useful._|_Add parameter validation and error handling code to prevent potential security vulnerabilities or errors

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_When `ossl_namemap_stored()` returns NULL in
https://github.com/openssl/openssl/blob/6c0ecc2bce64cc86948a51f80f832b5e48a9ebea/crypto/evp/evp_fetch.c#L621-L629 then `ossl_namemap_doall_names()` will attempt to dereference it. This trivial change fixes that. I am fixing this because this actually lead to a crash in my environment._|_Fixes #21198

decoder objects were setting propq as NULL.
Added a set_ctx/settable_ctx to all decoders that should supply a property query parameter to internal functions.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Fixes #21198

Inside the decoder fetches were passing propq as NULL. The problem stems from lower level OSSL_DECODER objects only handling the libctx and using NULL as the propq. (This happens because we can normally get the libctx from the provctx, and that is what is passed down). This PR add a newctx_ex() method to the OSSL_DECODER object which passes an extra arg for the propq. It will use this new method if it exists, otherwise it uses the old newctx().
I considered using the set_ctx_params method but it is cleaner when implemented as a new_ex constructor.

This does not attempt to address the encoders passing a propq.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [ ] tests are added or updated
_|_When running `openssl speed -evp md5` the result shows `md5` as algorithm name. But when adding the option `-multi 2` it gives `evp` as algorithm name.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This tutorial only covers a single stream client at this stage. A future
PR will cover adding multi-stream support.

As well as the tutorial I've also added a QUIC server utility. This is not intended for installation and is a temporary test tool until we add s_server support in a later release.

I encountered some bugs in our QUIC implementation while I got this working, so those are also fixed:

- SSL_connect did not block (patch courtesy of @hlandau)
- Busy loop entered in the server because the ping deadline was defaulting to zero
- 1 second delay in the handshake because although we had stuff available to send the CC had TX allowance, we were still waiting until the next CC wakeup deadline (which is infinite for new reno).
_|_When a DER object with unknown contents comes all the way to
ossl_store_handle_load_result(), and it attempts to decode them as different
objects, the PKCS#12 decoding attempt would (almost) always prompt for a
passphrase, even if there isn't a MAC to verify it against in the PKCS#12
object.

This change checks if there is a MAC to verify against before attempting to
prompt for a passphrase, leading to less surprising behavior.
_|_As discussed at OTC. Blocker for 3.2. I kept and tweaked the documentation and the store itself._|_UEFI can only use the release version of openssl, lets cherry-pick these changes to openssl-3.0 and openssl-3.1branch.

cherry-pick from master branch.
https://github.com/openssl/openssl/commit/2c500578fc68871eca7fabc7ee36b4027891671b

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_UEFI can only use the release version of openssl, lets cherry-pick these changes to openssl-3.0 and openssl-3.1branch.

cherry-pick from master branch.
https://github.com/openssl/openssl/commit/2c500578fc68871eca7fabc7ee36b4027891671b

This patch is different from the original commit.
The original commit cannot directly cherry-pick to openssl3.0 branch due to conflict:
```
++<<<<<<< HEAD
 +    double d;
 +
 +    if (val == NULL || p == NULL )
++=======
+     if (val == NULL || p == NULL) {
+         err_null_argument;
++>>>>>>> e827ace265 (crypto/params: drop float for UEFI)
```


##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_3.0.x will need a change to the fips version line in the test (to >3.0.10)

Refer SP 800-131Ar2 table 2:
    https://csrc.nist.gov/publications/detail/sp/800-131a/rev-2/final

Fixes #21185

- [x] tests are added or updated
_|_Also use OSSL_NELEM instead of hardcoding array size.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_When determining the next tick deadline we cannot actually issue an ack if the CC will not let us, or the enc_level is not yet provisioned.

This avoids a bug where we can end up in a busy loop because the next event deadline is reported as "now" because we want to send an ack, but we can't actually send anything yet.

_|_Constructions like `$$cursor{whatever}` and `%$cursor{whatever}` were ambiguous
in some perl versions, and it's still better to use the arrow syntax for the
way we use them, i.e. they can both be replaced with `$cursor->{whatever}`.

Fixes #21152
Fixes #21172
_|_The previous test cases used string longer than 509 bytes , which is not supported by ISO C90.
Fix it in this PR by fulfilling test data by shorting string instead of using long string directly.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_* CMP: fix `OSSL_CMP_MSG_http_perform()` by adding option `OSSL_CMP_OPT_USE_TLS`
* `OSSL_CMP_CTX_new.pod`: remove overlap with `OSSL_HTTP_transfer.pod`; improve the latter
* `apps/cmp.c`: `-tls_used` may be implied by `-server https:...`; improve related checks and doc

Fixes #21120 

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is  added or updated
- [x] tests are added or updated
_|_Add pragmas to ignore overlength-string issues.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fix #21169 
_|_A few ERR_raise() calls in v3_purp.c use the wrong library. For example, in OpenSSL 3.1.1 we get

00000000:error:0580009E:x509 certificate routines:ossl_x509v3_cache_extensions:reason(158):crypto/x509/v3_purp.c:635:

instead of

00000000:error:1100009E:X509 V3 routines:ossl_x509v3_cache_extensions:invalid certificate:crypto/x509/v3_purp.c:635:_|_I recently discovered that with a default non-"no-deprecated" libcrypto build (i.e., the one that ships with Ubuntu 22.04 LTS), calls to RAND_poll don't reseed the DRBGs the way that calls to RAND_seed or RAND_add do.

I'm aware that the DRBGs will request and add entropy automatically, so manual reseeding isn't necessary.  However for applications that have reason (or requirement) to reseed during application-specific events, this brings RAND_poll in-line with the behavior of RAND_seed and RAND_add._|_If the client sends us a group in a key_share that is in our
supported_groups list but is otherwise not suitable (e.g. not compatible
with TLSv1.3) we reject it. We should not ask for that same group again
in a subsequent HRR.

Fixes https://github.com/openssl/openssl/issues/21157
_|_The leaf certificate in our certificate chain currently has an empty subject.
This was verifying fine always until we updated alpine linux to version with OpenSSL 3.0.8 (from 1.1.1q).
It is also still validating fine on debian linux with OpenSSL 3.0.8.

Root cause analysis indicated that following commit caused the issue: https://github.com/openssl/openssl/commit/72ded6f2a93085f536b4a820ab42b2da26fecf1c

Reason is the empty subject is now always seen as an issue and returns -2.  In both cases when empty subject is a or b.  Which of course invalidates the compare invariant: `"" < "anything"` and `"anything" < ""`.

We have a certificate chain that exactly triggers issue on alpine linux qsort that the correct certificate is not found anymore in verification.

##### Checklist
- [ ] tests are added or updated
_|_Also add missing prototype for rc4_md5_enc.

Fixes #21150 _|_Fixes further build issues for "strict" checks in `cygwin` (see https://github.com/openssl/openssl/pull/21006#issuecomment-1581836982).
_|_Bumps [coverallsapp/github-action](https://github.com/coverallsapp/github-action) from 2.1.2 to 2.2.0.
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/coverallsapp/github-action/commit/c7885c00cb7ec0b8f9f5ff3f53cddb980f7a4412"><code>c7885c0</code></a> chore: support explicit cli arguments (<a href="https://redirect.github.com/coverallsapp/github-action/issues/179">#179</a>)</li>
<li><a href="https://github.com/coverallsapp/github-action/commit/059e56d143348431aafb4917fc9843532d0b6ac5"><code>059e56d</code></a> docs: describe debug option</li>
<li>See full diff in <a href="https://github.com/coverallsapp/github-action/compare/v2.1.2...v2.2.0">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=coverallsapp/github-action&package-manager=github_actions&previous-version=2.1.2&new-version=2.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>_|_None of these are serious but fix them anyway.
_|_
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Fix OS Zoo CI failures including replacing obsolete runner images.
_|_Fixes #21123 _|_Add the copy of the omitted ASN1 public key method

Fixes [#21115](https://github.com/openssl/openssl/issues/21115)
_|_This should fix the recent CIFuzz regression

Urgent as CI fails otherwise.
_|_The DEPEND statement, when applied on files generated with GENERATE, may be used to specify script modules that the template to be generated from depends on.  In short, this sort of depend:

    DEPEND[generated]=util/perl/OpenSSL/something.pm

... would generate a perl run that has the inclusion directory `util/perl/OpenSSL` and `something` as the module to be loaded.  However, the package name for this module is `OpenSSL::something`, so to load it the way it's expected, the inclusion directory should be `util/perl`, and the module to be loaded should be specified as `OpenSSL/something.pm` (to be massaged into a proper module name by the build file template).

To allow this, we introduce a file syntax, where a single `|` is used as a directory separator, to delineate what part should be used as the inclustion directory, and which part the module name to be loaded should be derived from:

    DEPEND[generated]=util/perl|OpenSSL/something.pm

Fixes #21112
_|_This change is intended to provide some safety for occasional random failures that have appeared in 80-test_cmp_http
on NonStop x86 when run in a complex CI/CD Jenkins environment. This change also adds init_pint() to handle the
initialization of a pointer to int value.

Fixes #21083
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Backport of #21040 to 1.1.1._|_Also check for NULL pointer arguments in `SMIME_crlf_copy()`.

Fixes #21026_|_This backports the functional essence of #20971 to 3.0 and 3.1,
at least for all cases that I am aware of.


_|_`ossl_policy_level_add_node()` first adds the new node to the `level->nodes` stack, and then attempts to add extra data if `extra_data` is true. If memory allocation or adding the extra data to `tree->extra_data` fails, the allocated node (that has already been added to the `level->nodes` stack) is freed using `ossl_policy_node_free()`, which leads to a potential use after free.

Additionally, the tree's node count and the parent's child count would not be updated, despite the new node being added.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] ~~documentation is added or updated~~
- [ ] ~~tests are added or updated~~
_|_```
openssl pkcs12 -engine gost -export -inkey seckey.pem -in cert.pem -out user.pfx -keypbe gost89 -certpbe gost89 -macalg md_gost12_256
Engine "gost" set.
Enter Export Password:
Verifying - Enter Export Password:
00040D4CB27F0000:error:0308010C:digital envelope routines:inner_evp_generic_fetch:unsupported:../../../../openssl/crypto/evp/evp_fetch.c:373:Global default library context, Algorithm (md_gost12_512 : 107), Properties (<null>)
00040D4CB27F0000:error:0308010C:digital envelope routines:inner_evp_generic_fetch:unsupported:../../../../openssl/crypto/evp/evp_fetch.c:373:Global default library context, Algorithm (md_gost12_512 : 107), Properties (<null>)
00040D4CB27F0000:error:0308010C:digital envelope routines:inner_evp_generic_fetch:unsupported:../../../../openssl/crypto/evp/evp_fetch.c:373:Global default library context, Algorithm (GOST R 34.11-2012 with 256 bit hash : 101), Properties (<null>)
0
```_|_Fixes regression of RSA signatures for legacy keys caused by quering the provider for the algorithm id with parameters.

Legacy keys do not have a method that would create the algorithm id. So we revert to what was done in 3.0.7 and earlier versions for these keys.

Fixes #21008
_|_Fixes #21028 

The root cause is that the file entries targeted for rehash are not actually sorted.
Sort was skipped because the compare function was null.
So a compare function has been implemented to allow file entries to be sorted.

[Build]
Success

[Test]
_test file list_
- certA-1.pem
- certA-2.pem (same as certA-1.pem)
- certB-1.pem
- certB-2.pem (same as certB-1.pem)

_rehash results : before patch_
**(The result is from my local system. It will change depending on OS file system.)**
- 0a775a30.0 -> certA-1.pem
- 1001acf7.0 -> certB-**2**.pem

_rehash results : after patch_
- 0a775a30.0 -> certA-1.pem
- 1001acf7.0 -> certB-1.pem

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes: #21009 

Implemented custom nanosleep function as feature request raised in https://github.com/openssl/openssl/issues/21009#issue-1718461016
_|_SHLIB_EXT is a variable that exists on OpenSSL build file templates before
version 3.0, for which much of the logic for figuring out file names and
such was moved to the 'platform' set of routines.

But, it seems that one (now useless) reference remained on the VMS specific
descrip.mms.tmpl.  We replace it with an explicit '.EXE', which is the
default extension for shared libraries on VMS.
_|_Implements the cygwin-specific build remediation documented in https://github.com/openssl/openssl/issues/19531. Without this, "master" fails to build on cygwin.
_|_Fixes #20993

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The expression `if (a+b>c) a=c-b` is incorrect if `a+b` overflows. It should be replaced by `if (a>c-b) a=c-b`, which avoids the potential overflow and is much easier to understand. This pattern is the root cause of [CVE-2022-37454](https://github.com/advisories/GHSA-6w4m-2xhg-2658), a buffer overflow vulnerability in the "official" SHA-3 implementation.

It has been confirmed that the addition in [hkdf.c:534](https://github.com/openssl/openssl/blob/master/providers/implementations/kdfs/hkdf.c#L534) cannot overflow. So this is only a minor proposed change to avoid potentially vulnerable code patterns and to improve readability. More information: https://github.com/github/codeql/pull/12036#issuecomment-1466056959_|_The x86_64 port has been moving forward, there is now a C compiler
available (released in mid-February this year).

Furthermore, OpenSSL has had support for using the OpenVMS port of
Intel's `ias` for years, but not had any actual information about it.
It's about time that it's mentioned.
_|_Fix pkcs12 cli by changing macsaltlen parameter from non-argument type to positive integer type. Issue #20969 

CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
_|_This fixes an issue brought up on openssl-users:
https://www.spinics.net/lists/openssl-users/msg16255.html

Needless error messages like this:
```
..:error:0700006C:configuration file routines:NCONF_get_string:no value:crypto/conf/conf_lib.c:315:group=CA_default name=email_in_dn 
..:error:0700006C:configuration file routines:NCONF_get_string:no value:crypto/conf/conf_lib.c:315:group=CA_default name=rand_serial 
..:error:0700006C:configuration file routines:NCONF_get_string:no value:crypto/conf/conf_lib.c:315:group=CA_default name=default_days
```
remain in the error queue on success 
when for instance the following is given in the `[CA_default]` section of a typical OpenSSL CA config file:
```
default_startdate = 230501000000Z
default_enddate   = 240601000000Z
```

_|_For platforms using import libraries, the lack of this causes a
disjoint between the name of the DLL that's produced, and the
corresponding import library.

Fixes #20942 (follows up #20732)
_|_Fix: #20963

There are arm crypto related architecture declarations in the files crypto/modes/asm/aes-gcm-armv8-unroll8_64.pl and crypto/sm3/asm/sm3-armv8.pl,  and they will cause compile failure in older gcc compiler such as gcc4.9.4.
Change to fix the issue.
_|_This is an alternative to #20893

Additionally this fixes also a possible issue in UI_UTIL_read_pw:

When UI_new returns NULL, the result code would still be zero as if UI_UTIL_read_pw succeeded, but the password buffer is left uninitialized, with subsequent possible stack corruption or worse.
_|_They need to be explicitly added otherwise only x86_64 arch ones will be there which is incorrect.

The second commit applies only to master branch. The first also to 3.x branches._|_The crypto_ex_data code was always obtaining a write lock in all functions regardless of whether we were only reading EX_CALLBACK data or actually changing it. Changes to the EX_CALLBACK data are rare, with many reads so we should change to a read lock where we can.

We hit this every time we create or free any object that can have ex_data associated with it (e.g. BIOs, SSL, etc)

Partially fixes #20286
_|_When freeing the last reference to an EVP_PKEY there is no point in taking the lock for the key. It is the last reference and is being freed so must only be being used by a single thread.

This should not have been the source of any contention so its unclear to what extent this will improve performance. But we should not be locking when we don't need to.

Partially fixes #20286
_|_I believe it is a typo :)_|_The function RAND_get_rand_method() is called every time RAND_bytes() or RAND_priv_bytes() is called. We were obtaining a write lock in order to find the default random method - even though we rarely write. We change this to a read lock and only fallback to a write lock if we need to.

Partial fix for #20286
_|_We refactor ossl_provider_doall_activated() so that we only need to take a read lock instead of a write lock for the flag_lock. This should improve performance by avoiding the lock contention. We achieve this by protecting the activatecnt via atomics rather than via a lock and by avoiding the full provider activation/deactivation procedure where it is not needed.

Partial fix for #20286

_|_Fixes #20921
_|_This PR fixed a wrong wbio pointer usage on SSL_get_error.
The bug will cause `SSL_get_error` to return `SSL_ERROR_SYSCALL` even after `BIO_set_retry_write` in some cases such as `BIO_CTRL_FLUSH`. Without this fix, when `BIO_CTRL_FLUSH`, if BIO writer gets a `WOULD_BLOCK` error, it calls `BIO_set_retry_write` and returns 0, it will not work and openssl will return a failure.
_|_When running test_quicapi on master on a Fedora 38 with santizier, a stack use-after-free is reported:

```
75-test_quicapi.t ..
=================================================================
==28379==ERROR: AddressSanitizer: stack-use-after-return on address 0x03ffa22a2961 at pc 0x03ffa507384a bp 0x03fffb576d68 sp 0x03fffb576550
READ of size 8 at 0x03ffa22a2961 thread T0
    #0 0x3ffa5073849 in memcpy (/usr/lib64/libasan.so.8+0x73849) (BuildId: ce24d4ce2e06892c2e9105155979b957089a182c)
    #1 0x118b883 in tls_handle_alpn ssl/statem/statem_srvr.c:2221
    #2 0x111569d in tls_parse_all_extensions ssl/statem/extensions.c:813
    #3 0x118e2bf in tls_early_post_process_client_hello ssl/statem/statem_srvr.c:1957
    #4 0x118e2bf in tls_post_process_client_hello ssl/statem/statem_srvr.c:2290
    #5 0x113d797 in read_state_machine ssl/statem/statem.c:712
    #6 0x113d797 in state_machine ssl/statem/statem.c:478
    #7 0x10729f3 in SSL_do_handshake ssl/ssl_lib.c:4669
    #8 0x11cec2d in ossl_quic_tls_tick ssl/quic/quic_tls.c:717
    #9 0x11afb03 in ch_tick ssl/quic/quic_channel.c:1296
    #10 0x10cd1a9 in ossl_quic_reactor_tick ssl/quic/quic_reactor.c:79
    #11 0x10d948b in ossl_quic_tserver_tick ssl/quic/quic_tserver.c:160
    #12 0x1021ead in qtest_create_quic_connection test/helpers/quictestlib.c:273
    #13 0x102b81d in test_quic_write_read test/quicapitest.c:54
    #14 0x12035a9 in run_tests test/testutil/driver.c:370
    #15 0x1013203 in main test/testutil/main.c:30
    #16 0x3ffa463262b in __libc_start_call_main (/usr/lib64/libc.so.6+0x3262b) (BuildId: 6bd4a775904d85009582d6887da4767128897d0e)
    #17 0x3ffa463272d in __libc_start_main_impl (/usr/lib64/libc.so.6+0x3272d) (BuildId: 6bd4a775904d85009582d6887da4767128897d0e)
    #18 0x101efb9  (/root/openssl/test/quicapitest+0x101efb9) (BuildId: 075e387adf6d0032320aaa18061f13e9565ab481)
Address 0x03ffa22a2961 is located in stack of thread T0 at offset 33 in frame
    #0 0x10d868f in alpn_select_cb ssl/quic/quic_tserver.c:49
  This frame has 1 object(s):
    [32, 41) 'alpn' (line 50) <== Memory access at offset 33 is inside this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-use-after-return (/usr/lib64/libasan.so.8+0x73849) (BuildId: ce24d4ce2e06892c2e9105155979b957089a182c) in memcpy
Shadow bytes around the buggy address:
  0x03ffa22a2680: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x03ffa22a2700: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x03ffa22a2780: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x03ffa22a2800: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x03ffa22a2880: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
=>0x03ffa22a2900: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5[f5]f5 f5 f5
  0x03ffa22a2980: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x03ffa22a2a00: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x03ffa22a2a80: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x03ffa22a2b00: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
  0x03ffa22a2b80: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==28379==ABORTING
../../util/wrap.pl ../../test/quicapitest default ../../test/default.cnf ../../test/certs => 1
not ok 1 - running quicapitest
```

Fix this be making the protocols to select static constants and thereby moving them out of the stack frame of the callback function.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist

_|_Fixes #20899


_|_There is a possible stack corruption in case, when data->cb() returns len > 1024
I've faced it on windows x64 build.
I suppose, it is possible on others platforms.

Sequence:
1) ui_read creates buffer, doesn't call memset()
2) data->cb() calls PEM_def_callback()
3) PEM_def_callback() calls EVP_read_pw_string_min(), which doesn't fill buffer with any data.
4) PEM_def_callback() returns strlen() of uninitialized buffer (without null terminator). It is dangerous and can lead to the crash. Or it can return invalid size, which will be greater than buffer size.
5) In ui_read we tries to add a null terminator to the data out of our buffer.

Decided to initialize buffer in ui_read() and replace dangerous strlen with OPENSSL_strnlen().

I'm not such familiar with code, maybe EVP_read_pw_string_min should be updated, because EVP_read_pw_string_min returns 0, but doesn't set any data to the input buffer.
If someone point me to the better fix, I will appreciate.

Code to reproduce this issue
```

    std::string filename = "test.pem";
    std::string password = "password";
    {
        std::unique_ptr<EVP_PKEY, decltype(&::EVP_PKEY_free)> key(EVP_RSA_gen(2048), ::EVP_PKEY_free);

        std::unique_ptr<BIO, decltype(&::BIO_free)> out(BIO_new(BIO_s_file()), ::BIO_free);
        if (out != nullptr) {
            if (BIO_write_filename(out.get(), const_cast<char*>(filename.c_str())) > 0) {
                int size = PEM_write_bio_PrivateKey(out.get(), key.get(), EVP_aes_256_cbc(), nullptr, 0,
                    nullptr, const_cast<char*>(password.data()));
                std::cout << size << std::endl;
            }
        }
    }
    {
        // read with null password
        std::unique_ptr<BIO, decltype(&::BIO_free)> in(BIO_new(BIO_s_file()), ::BIO_free);
        if (in != nullptr) {
            if (BIO_read_filename(in.get(), filename.c_str()) > 0) {
                EVP_PKEY* pkey = PEM_read_bio_PrivateKey(in.get(), nullptr, nullptr, nullptr);
                std::cout << (pkey == nullptr) << std::endl;
            }
        }
    }
```

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_We actively use only the latest DCID received. And retire only
DCIDs requested by the peer to be retired.
    
Also changed the active_conn_id_limit to 2 as the minimum value allowed.

Adding test for this will be non-trivial but we will need it so setting `tests: deferred`.
I assume we can do something with the fault injector.
_|_FIX: https://github.com/openssl/openssl/issues/20889
Should check buffer size first when get ec pubkey param, if buffer size too-small, return -1 as error code.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_To my knowledge FIPS provider hasn't been certified as FIPS 140-3 (and on [NIST site](https://csrc.nist.gov/projects/cryptographic-module-validation-program/validated-modules/search) I can only find 140-2 certification), so this documentation is probably misleading. _|_
<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already
This PR fixes issue #20776 by replacing __attribute__((malloc)) with __attribute__((__malloc__)) in the include/openssl/macros.h file, as recommended by GCC documentation.


If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
_|_Fixes #20849
_|_This commit resolves an issue with corruption of session cache lists. There is an undocumented invariant maintained by SSL_SESSION_list_add and SSL_SESSION_list_remove that either a session has an owner and is in the linked list of that owning session, or is not. However duplication did not clear the owner.

Timeout management added in https://github.com/openssl/openssl/pull/8687 uses the owner pointer to update the list order, however if the session is a copy of the one in the cache, this logic is incorrect and leads to corruption of the list structures. The solution is to ensure duplicates have owner unset.

I also took the liberty of updating the documentation while I was at it.

##### Checklist

- [x] documentation is added or updated
- [x] tests are added or updated
_|_Fixes #20841

Not done for the FIPS provider because NIST SP-800-90Ar1, Sections 9.1 and 9.2 mandate that user supplied entropy not be treated as such.
.
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Relies on #20782 merging first.

- [x] documentation is added or updated
- [ ] tests are added or updated
_|_The fuzzer was creating a config file with large numbers of includes which are expensive to process. However this should not cause a security issue, and should never happen in normal operation so we can ignore it.

Fixes ossfuzz issue 57718.

_|_Fixes #20823 

Adding p>q check in `ossl_rsa_sp800_56b_generate_key()` function as mentioned in https://github.com/openssl/openssl/issues/20823#issue-1682767366.

CLA: trivial

_|_Today a colleague used the CMP client CLI with a PKCS#10 CSR input file, by mistake with a regular IR command rather than the intended P10CR command. Instead of getting a to-the-point high-level warning or error, he got a low-level error (`CMP_R_MISSING_PRIVATE_KEY`), which he interpreted wrongly.
He was not aware that in such cases the CSR is transformed from PKCS#10 to CRMF format, and then a signature-based proof of possession (POPO) is required by default, whereas he had not provided a private key needed for this.

This PR fixes the error messages and documentation of such cases, both at CLI and API level.

Doing so, I found and fixed an inconsistency when checking that the public key of a newly enrolled cert matches the key used for the enrollment request: if the latter key is just a public key (which can be the case only when no POPO is used and the server accepts this) taken from a previous cert (oldCert), then the check was skipped by mistake.
To this end, I introduced the internal helper function `ossl_cmp_ctx_get0_newPubkey()`.

On this occasion I noticed that the example using the Insta Demo CA does not work as specified in `openssl-cmp.pod.in` because the file reference to `insta.ca.crt` in  `apps/openssl.cnf` was wrong - fixed this as well.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_This is a replacement for #20790 and does the following:

- Documents that the min/max proto APIs don't do anything for QUIC objects at the moment
- Fixes an issue also fixed in #20790 where a number of version numbers were incorrectly identified as DTLS version numbers
- Adds the test from #20790 (updated for the newly agreed behaviour)_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->
fix #20828
##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_We initialise the record layer rstate variable to ensure the
SSL_rstate_string*() APIs return values that are consistent with
previous versions.

Fixes https://github.com/openssl/openssl/issues/20808

While I was at it I realised that the docs mentioned that "RD"/"read done" was a valid response from these functions - but in reality that never happens (and doesn't in 3.1 either). So I updated the docs to match reality, and also tweaked the QUIC implementation to more closely match what the TLS implementation does.
_|_If we are processing a hanshake fragment and we end up with a zero length record, then we still need to release it to avoid an infinite loop.

Fixes #20821
_|_
Fixes #20802 _|_Reasons:
- The patch was missing the linker flag /guard:cf As a result no binary with CFG was ever built
- /guard:cf is incompatible with NASM If the linker flag is added, the resulting binary fails with this exception: Unhandled exception at 0x00007FFFB8B93C90 (ntdll.dll) in openssl.exe: Indirect call guard check detected invalid control transfer.
_|_uses #pragma message instead of #warning with MSVC
Fixes issue https://github.com/openssl/openssl/issues/20805
_|_default_context_do_init may be never called and CRYPTO_THREAD_init_local inside it may be never called too. But corresponding CRYPTO_THREAD_cleanup_local is always called at cleanup stage. This lead to undefined behavior.

So, add flag to check that default_context_do_init will be called successfully or not.

Fix: #20697_|_When verifying or signing a CSR file with the -vfyopt option, a warning message similar to the following will appear:

  `Warning: CSR self-signature does not match the contents`

This happens especially when the SM2 algorithm is used and the distid parameter is added. Pass the vfyopts parameter to the do_X509_REQ_verify() function to eliminate the warning message.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->
fix #20796 

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Bumps [actions/setup-python](https://github.com/actions/setup-python) from 4.5.0 to 4.6.0.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href="https://github.com/actions/setup-python/releases">actions/setup-python's releases</a>.</em></p>
<blockquote>
<h2>Add allow-prereleases input</h2>
<p>In scope of this release we added a new input (<code>allow-prereleases</code>) to allow <a href="https://redirect.github.com/actions/setup-python/pull/414">falling back to pre-release versions of Python when a matching GA version of Python is not available</a></p>
<pre lang="yaml"><code>steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-python@v4
    with:
      python-version: 3.12
      allow-prereleases: true
</code></pre>
<p>Besides, we added such changes as:</p>
<ul>
<li>Fix bug to trim new line for PyPy version: <a href="https://redirect.github.com/actions/setup-python/pull/610">actions/setup-python#610</a></li>
<li>Added pip dependency file to generate hash from it: <a href="https://redirect.github.com/actions/setup-python/pull/604">actions/setup-python#604</a></li>
<li>Improved error handling for saving and restoring cache: <a href="https://redirect.github.com/actions/setup-python/pull/618">actions/setup-python#618</a></li>
<li>Add warning if cache paths are empty: <a href="https://redirect.github.com/actions/setup-python/pull/642">actions/setup-python#642</a></li>
</ul>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/actions/setup-python/commit/57ded4d7d5e986d7296eab16560982c6dd7c923b"><code>57ded4d</code></a> update <code>@​azure/storage-blob</code> (<a href="https://redirect.github.com/actions/setup-python/issues/655">#655</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/df6abcc733fa14327c82798d7708a84870433c17"><code>df6abcc</code></a> update xml2js (<a href="https://redirect.github.com/actions/setup-python/issues/652">#652</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/7a4f344e33a712c3d16d01bdb95be5ef34e8ab59"><code>7a4f344</code></a> Add warning for empty cache paths (<a href="https://redirect.github.com/actions/setup-python/issues/642">#642</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/d1244c8404095bc119fe30f1b9296fc644569ac0"><code>d1244c8</code></a> Remove ubuntu-18.04 from e2e (<a href="https://redirect.github.com/actions/setup-python/issues/641">#641</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/3091b37310257c35e28f059cf05d8c8c74250b17"><code>3091b37</code></a> Fix glob bug in package.json scripts section (<a href="https://redirect.github.com/actions/setup-python/issues/637">#637</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/dfa76f8d0df0f92390ab2d42e57c6537748ecc71"><code>dfa76f8</code></a> Update configuration files (<a href="https://redirect.github.com/actions/setup-python/issues/622">#622</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/03eb867e3d1d557bdb958602013c4b401deef7a0"><code>03eb867</code></a> Add error handling for saving and restoring cache (<a href="https://redirect.github.com/actions/setup-python/issues/618">#618</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/b41aaf9f0c19cdc253ff8d58a4c13ae91e94ccd2"><code>b41aaf9</code></a> Merge pull request <a href="https://redirect.github.com/actions/setup-python/issues/621">#621</a> from akv-platform/reusable-workflow</li>
<li><a href="https://github.com/actions/setup-python/commit/0ffa49cfcadde3e5646e772b051f4b67766aaa96"><code>0ffa49c</code></a> Add update-config-files.yml</li>
<li><a href="https://github.com/actions/setup-python/commit/ec365b4eba6e8fff05c772c50ea738054d9b52ef"><code>ec365b4</code></a> Add and configure ESLint and update configuration for Prettier (<a href="https://redirect.github.com/actions/setup-python/issues/617">#617</a>)</li>
<li>Additional commits viewable in <a href="https://github.com/actions/setup-python/compare/v4.5.0...v4.6.0">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4.5.0&new-version=4.6.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>_|_Ensure we can set OSSL_QUICV1_VERSION via the min/man protocol API functions. This also applies to the config file equivalents._|_Instead of using stat() to check if a file is a directory we just skip . and .. as a workaround.

This is a regression from #20312 _|_This was incorrectly removed in #20284
_|_More specifically, don't sort the stack when searching when it isn't sorted. This avoids a race condition.

Instead we linearly search the stack for the desired item.


Fixes #20135
_|_This function didn't prepare space to get the param string, which causes
the default_fixup_args() call to fail.

Fixes #20161
_|_According to docs, EVP_PKEY_get_int_param should return 1 on Success, and 0 on Failure. So, fix checking of this return value at check_curve

CLA: trivial_|_There is no point in sending that when min_proto_version is >= TLS1_3_VERSION. So we set that during SSL_CTX initialization and skip adding the SCSV.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Add options so that the FIPS provider is set to pedantic mode for testing purposes.

Kind of related to and branched from #20752 but not related to installation.

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Original author: Nevine Ebeid (Amazon)
Fixes: CVE-2023-1255

The buffer overread happens on decrypts of 4 mod 5 sizes. Unless the memory just after the buffer is unmapped this is harmless.
_|_fix https://github.com/openssl/openssl/pull/20498#discussion_r1168125677
_|_These typos caused failed propagation of the 'cflags' attribute from
Configurations/10-main.conf.

-----

This was figured out in #20718
_|_This is a fixup of #18930.

Preparing CMP support for central key generation,
I found that the return type of `OSSL_CRMF_CERTTEMPLATE_get0_publicKey()`
was not flexible enough - it should not be `const`,
and it does not need to be according to the structure decl in `crmf_local.h`:
```
struct ossl_crmf_certtemplate_st {
    [...]
    const X509_NAME *issuer;
    OSSL_CRMF_OPTIONALVALIDITY *validity;
    const X509_NAME *subject;
    X509_PUBKEY *publicKey;
    [...]
} /* OSSL_CRMF_CERTTEMPLATE */;
```

Luckily, this can still be fixed without an API break because the new function has not been released yet.

On this occasion, also added the missing related HISTORY entry in `OSSL_CRMF_MSG_get0_tmpl.pod`.
_|_This is an omission, it should have been in place a long time ago.

Fixes #20732
_|_CLA: trivial

Fixes #20716

Fix is to add provider unload functions to cleanup_tests(), more information is in issue description. Memory leaks in cmp_ tests were verified by running them directly in valgrind, e.g.

```
valgrind --leak-check=full --show-leak-kinds=all test/cmp_msg_test test/recipes/65-test_cmp_msg_data/new.key test/recipes/65-test_cmp_msg_data/server.crt test/recipes/65-test_cmp_msg_data/pkcs10.der default test/default.cnf
```

The issue description also mentions a memory leak in cmp_ctx_test. This was incorrect; this was an issue in 3.0.5 but is currently fixed in master._|_Fixes #20693

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Fixes #19580
_|_

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #20625
_|_Calling OPENSSL_init_crypto from inside a RUN_ONCE seems like a bad idea. This is especially bad if OPENSSL_init_crypto can recursively end up attempting to call the RUN_ONCE that we're already inside.

The initialisation in OPENSSL_init_crypto is already "run once" protected. There is no need to protect it "twice".

Fixes #20653

(I created this against the 3.1 branch so that @mouse07410 can easily try it out. It would need to be cherry-picked to master and 3.0)
_|_Fixes a "Incompatible function pointer types" error.

In prior versions, this was a warning, but is now an error.

The correct type for the function was taken from: https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/beginthread-beginthreadex

##### Checklist
n/a
_|_`openssl dgst -engine gost -list` doesn't show hashes added by gost-engine because they are not supported by EVP_MD_fetch and EVP_get_digestbyname should be used instead. Another example of this issue has been fixed in https://github.com/openssl/openssl/pull/12689
By the way, `openssl enc -engine gost -list` works correctly.

CLA: trivial
_|_Function EVP_PKEY_get_bn_param() uses temporary buffer (on stack or heap allocated) to store serialized bignum, but after deserializing it into BIGNUM*, the buffer is not erased and may contain sensitive data.

This change makes sure the buffer is erased if it was successfully filled before. Unfortunately, it does not distinguish between public and private key components, and will always erase the buffer.

Fixes https://github.com/openssl/openssl/issues/20626_|_It is possible that DTLS records are received out of order such that
records from the next epoch arrive before we have finished processing the
current epoch. We are supposed to buffer such records but for some reason
we only did that for handshake and alert records. This is incorrect since
it is perfectly possible for app data records to arrive early too.

Fixes https://github.com/openssl/openssl/issues/20597

This is a backport of https://github.com/openssl/openssl/pull/20628 for the 3.0 branch

For this backport I had to additionally bring back code for the test helper function `mempacket_swap_epoch` which is used by the test and exists in master/3.1, but did not exist in 3.0.

_|_It is possible that DTLS records are received out of order such that
records from the next epoch arrive before we have finished processing the
current epoch. We are supposed to buffer such records but for some reason
we only did that for handshake and alert records. This is incorrect since
it is perfectly possible for app data records to arrive early too.

Fixes https://github.com/openssl/openssl/issues/20597

This is a backport of #20628 for the 3.1 branch_|_As defined in the C standard:

> In all cases the argument is an int, the value of which shall be representable as an unsigned char or shall equal the value of the macro EOF.  If the argument has any other value, the behavior is undefined.

This is because they're designed to work with the int values returned by getc or fgetc; they need extra work to handle a char value.

If EOF is -1 (as it almost always is), with 8-bit bytes, the allowed inputs to the ctype.h functions are:

    {-1, 0, 1, 2, 3, ..., 255}.

However, on platforms where char is signed, such as x86 with the usual ABI, code like

    char *p = ...;
    ... isspace(*p) ...

may pass in values in the range:

    {-128, -127, -126, ..., -2, -1, 0, 1, ..., 127}.

This has two problems:

1. Inputs in the set {-128, -127, -126, ..., -2} are forbidden.

2. The non-EOF byte 0xff is conflated with the value EOF = -1, so even though the input is not forbidden, it may give the wrong answer.

Casting char inputs to unsigned char first works around this, by mapping the (non-EOF character) range {-128, -127, ..., -1} to {128, 129, ..., 255}, leaving no collisions with EOF.  So the above fragment needs to be:

    char *p = ...;
    ... isspace((unsigned char)*p) ...

This patch inserts unsigned char casts where necessary.  Most of the cases I changed, I compile-tested using -Wchar-subscripts -Werror on NetBSD, which defines the ctype.h functions as macros so that they trigger the warning when the argument has type char.  The exceptions are under #ifdef __VMS or #ifdef _WIN32.  I left alone calls where the input is int where the cast would obviously be wrong; and I left alone calls where the input is already unsigned char so the cast is unnecessary.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Introduced in #20535

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_It is possible that DTLS records are received out of order such that
records from the next epoch arrive before we have finished processing the
current epoch. We are supposed to buffer such records but for some reason
we only did that for handshake and alert records. This is incorrect since
it is perfectly possible for app data records to arrive early too.

Fixes https://github.com/openssl/openssl/issues/20597
_|_Fixes #20604 for branch 3.1

##### Checklist

(none apply)_|_##### Checklist

(none applicable)_|_Fixes #20604

##### Checklist

(none apply)_|_Fixed pkey amethod double decreases issue in engine framework.
Fixes: #20505 
_|_RSA verification failed when all loopargs[] share the same EVP_PKEY rsa_key.

Tested and reproduced on openssl-3.0 branch

$ apps/openssl speed -engine pka -async_jobs 8 rsa2048
Engine "pka" set.
Doing 2048 bits private rsa's for 10s: 46554 2048 bits private RSA's in 3.70s
RSA verify setup failure.  No RSA verify will be done.
20B0B281FFFF0000:error:0200008A:rsa routines:RSA_padding_check_PKCS1_type_1:invalid padding:crypto/rsa/rsa_pk1.c:75:
20B0B281FFFF0000:error:02000072:rsa routines:rsa_ossl_public_decrypt:padding check failed:crypto/rsa/rsa_ossl.c:606:
20B0B281FFFF0000:error:1C880004:Provider routines:rsa_verify:RSA lib:providers/implementations/signature/rsa_sig.c:833:
version: 3.0.9-dev
built on: Mon Mar 27 13:48:54 2023 UTC
options: bn(64,64)
compiler: gcc -fPIC -pthread -Wa,--noexecstack -Wall -O3 -DOPENSSL_USE_NODELETE -DOPENSSL_PIC -DOPENSSL_BUILDING_OPENSSL -DNDEBUG
CPUINFO: OPENSSL_armcap=0xbd

Tested w/ changes

$ apps/openssl speed -engine pka -async_jobs 8 rsa2048

Engine "pka" set.
Doing 2048 bits private rsa's for 10s: 49465 2048 bits private RSA's in 3.96s
Doing 2048 bits public rsa's for 10s: 333008 2048 bits public RSA's in 7.61s
version: 3.0.9-dev
built on: Mon Mar 27 13:48:54 2023 UTC
options: bn(64,64)
compiler: gcc -fPIC -pthread -Wa,--noexecstack -Wall -O3 -DOPENSSL_USE_NODELETE -DOPENSSL_PIC -DOPENSSL_BUILDING_OPENSSL -DNDEBUG
CPUINFO: OPENSSL_armcap=0xbd
                  sign    verify    sign/s verify/s
rsa 2048 bits 0.000080s 0.000023s  12491.2  43759.3
version: 3.0.9-dev
built on: Mon Mar 27 13:48:54 2023 UTC
options: bn(64,64)
compiler: gcc -fPIC -pthread -Wa,--noexecstack -Wall -O3 -DOPENSSL_USE_NODELETE -DOPENSSL_PIC -DOPENSSL_BUILDING_OPENSSL -DNDEBUG
CPUINFO: OPENSSL_armcap=0xbd
_|_Fixes #20613

This is a partial backport of #17417 to the 3.1 branch._|_Even though we check the leaf cert to confirm it is valid, we
later ignored the invalid flag and did not notice that the leaf
cert was bad.

Fixes: CVE-2023-0465

1.1.1 version of https://github.com/openssl/openssl/pull/20585_|_Even though we check the leaf cert to confirm it is valid, we
later ignored the invalid flag and did not notice that the leaf
cert was bad.

Fixes: CVE-2023-0465

3.0 version of https://github.com/openssl/openssl/pull/20585_|_Even though we check the leaf cert to confirm it is valid, we
later ignored the invalid flag and did not notice that the leaf
cert was bad.

Fixes: CVE-2023-0465

3.1 version of #20585
_|_Even though we check the leaf cert to confirm it is valid, we
later ignored the invalid flag and did not notice that the leaf
cert was bad.

Fixes: CVE-2023-0465
_|_CLA: trivial
The the provider, context duplication method for signature, key exchange, asymmetric cipher, and key encapsulation is optional. But if they are missing, we will get a segmentation fault in `EVP_PKEY_CTX_dup` because the are called without null pointer checking.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_no-ec and no-bulk both break the test.

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_The function was incorrectly documented as enabling policy checking.

Fixes: CVE-2023-0466

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
_|_The function was incorrectly documented as enabling policy checking.

Fixes: CVE-2023-0466

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
_|_The function was incorrectly documented as enabling policy checking.

Fixes: CVE-2023-0466

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
_|_The function was incorrectly documented as enabling policy checking.

Fixes: CVE-2023-0466

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
_|_The declaration in armcap.c was duplicate.

This resolves CI failures on cross-compile builds on ARM._|_The changes from the following commit should also apply to Visual Studio 2010
https://github.com/openssl/openssl/commit/2d46a44ff24173d2cf5ea2196360cb79470d49c7#r104867505

Fixes build errors: undefined symbol InterlockedOr64 on Windows 2003, Visual Studio 2010 for x86 target.

@mattcaswell @dnobori @paulidale @t8m _|_Fixes a regression from 3.0 from the obj creation refactoring.

Fixes #20555
_|_Similiar to the issue found in PR #20553 for DSA_sign(). ECDSA_sign() leaked memory if the signature was NULL when i2d_ECDSA_SIG was called.

Note that this does not affect the higher level EVP functions as they correctly handle NULL.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Related to #20268

DSA_sign() assumes that the signature passed in is related to DSA_size(). If q is negative then DSA_size() actually fails and returns 0.

A test that tries to allocate the signature buffer using DSA_size() and then pass it to DSA_sign() will then either.

(1) Have a signature buffer of NULL. In this case it was leaking data returned via i2d_DSA_SIG.

(2) Cause a seg fault because we created a buffer that was not large enough to hold the signature. As it already checked zero we also now check for negative values also.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_With less than C99 compilers, this macro isn't guaranteed to exist, and
the value passed to it is 32 bits, so explicitly ending it with 'UL' is
correct in all cases.  We simply leave it to the compiler to extend it
appropriately for uint64_t.
_|_Legacy PowerPC machines running Mac OS X 10.5 and earlier are unable to build OpenSSL 3.1 due to the inclusion of new PPC assembler code that is incompatible with the OS X assembler. Exclude the P10-specific AES-GCM and ChaCha assembler code from being built on OS X systems.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_<stdint.h> may not exist with pre-C99 compilers.  <openssl/e_os2.h> deals
with that, so include it instead.

Similarly, include "internal/numbers.h" rather than <limits.h>, to deal
with things that may be lacking in the latter.
_|_We want to add -mips2 or -mips3 only if the user hasn't already specified a mips version in CFLAGS. The existing test was a double-negative.

CLA: trivial

Fixes: https://github.com/openssl/openssl/issues/20214_|_In the internal `ossl_sleep_secs()`, we have a lot of machination to ensure
that we compensate for the fact that `sleep()` takes an `unsigned int`, not a
`uint64_t`, by sleeping the appropriate amount of chunks of seconds that can't
fit in an `unsigned int`.  We did forget to sleep the remaining seconds (the
remaining amount that does fit in an `unsigned int`), though, which means that
a simple call like `OSSL_sleep(2000)` wouldn't sleep at all.

Fixes #20524
_|_Fix use after free error.

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This limits the available digests that can be used by the Hash and HMAC DRBGs.
Outside of FIPS, there remains no restriction.

Refer to [FIPS 140-3 IG D.R](https://csrc.nist.gov/CSRC/media/Projects/cryptographic-module-validation-program/documents/fips%20140-3/FIPS%20140-3%20IG.pdf#%5B%7B%22num%22%3A359%2C%22gen%22%3A0%7D%2C%7B%22name%22%3A%22XYZ%22%7D%2C88%2C697%2C0%5D).

- [x] documentation is added or updated
- [x] tests are added or updated
_|_Added missing fix from the master branch.

Fixes #20518
_|_Regression from cherry-picking PR https://github.com/openssl/openssl/pull/20457

This is urgent as CI is broken on 3.1 and 3.0.
_|_While working on integrating QUIC into s_client I came across a number of different QUIC bugs. This PR collects all the fixes together and provides a single test which covers all of them. In particular it includes testing for QUIC in blocking mode which we didn't previously have.

The bugs fixed are:
- The QRX never set its libctx correctly
- The QTX never set its libctx correctly
- Seg fault calling SSL_shutdown()
- SSL_has_pending() did not work correctly
- SSL_ctrl wasn't correctly handled

I've also provided better errors for a couple of misconfiguration scenarios.
_|_Note: 3.1 and before do not require this fix.

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The makefile target was incorrect and wouldn't build the rsa_encrypt demo.


- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #20497 .

If merged, this PR should also be backported to 3.0 as this aligns the long-standing documentation for (the return value of) `EVP_PKEY(_get)_id` with its implementation (in the presence of provider-based EVP_PKEY algorithms). 
_|_fix: https://github.com/openssl/openssl/issues/20413
AES-GCM encryption error when plaintext length exceeds 512 bytes on arm64ilp32 big-endian program

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_fix: https://github.com/openssl/openssl/issues/20420

It is different that the SM2 private key PEM files generated by the version 1.1 and the version after 3.0, which the file generated by 1.1 is BEGIN as  "-----BEGIN EC PRIVATE KEY-----". To enable the version after 3.0 to support SM2 PEM private key file generated by 1.1 version, we have to special case SM2 when we encounter the EC type.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_OpenSSL 3.1.0 will be released soon so I tried to build it on all architectures and noticed build failure on aarch64.

```
[  208s] 	providers/libdefault.a providers/libcommon.a  -lz -ldl -pthread
[  208s] crypto/aes/libcrypto-shlib-bsaes-armv8.o: in function `ossl_bsaes_cbc_encrypt':
[  208s] /home/abuild/rpmbuild/BUILD/openssl-3.1/crypto/aes/bsaes-armv8.S:993:(.text+0xdd4): relocation truncated to fit: R_AARCH64_CONDBR19 against symbol `AES_cbc_encrypt' defined in .text section in /tmp/ccVvtSGQ.ltrans0.ltrans.o
[  208s] collect2: error: ld returned 1 exit status
[  208s] make[1]: *** [Makefile:5340: libcrypto.so.3] Error 1
```

It's same issue as reported #18813 and after applying patch 1efd8533e1c the build succeeds.

Above commit was backported into 3.0 branch but only partially (3f348a0f6c3). First hunk is missing and this is causing this failure in openssl-3.1.0-beta1 and also in openssl-3.1 so I cherry-picked missing part.

@mattcaswell would it be possible to merge it before OpenSSL 3.1.0 release date?_|_Refer #20470

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The default PBKDF2 iteration count was buried in the code.  It wasn't documented and wasn't included in the help.

- [x] documentation is added or updated
- [ ] tests are added or updated
_|_This file was only recently introduced and the missing header slipped through the review process.

Fixes #20461

_|_`EVP_PKEY_get_default_digest_name()` may return 1 with the returned digest
name `"UNDEF"`.  This case hasn't been documented, and the meaning has been
left undefined, until now.

Related to #20428
_|_"adrl" is a pseudo-instruction used to calculate an address relative to PC. It's not recognized by clang resulting in a compilation error. I've stumbled upon it when trying to integrate the bsaes-armv7 assmebly logic into FreeBSD kernel, which uses clang as it's default compiler. Note that this affect the build only if BSAES_ASM_EXTENDED_KEY is defined, which is not the default option in OpenSSL.

The solution here is to replace it with an add instruction. This mimics what has already been done in !BSAES_ASM_EXTENDED_KEY logic. Because of that I've marked this as trivial CLA._|_Fixes #20435
_|_CLA: trivial
In RSA, `(n,e)` and `(n,d)` identify public key and private key. Modulus `n` is the common part. So I updated `rsa_has()` to validate these pairs correctly. `OSSL_KEYMGMT_SELECT_KEYPAIR` is common part for both public and private key, so I changed it to check `n` of RSA and for `OSSL_KEYMGMT_SELECT_PUBLIC_KEY`, `e` is checked. Before this change, if `selection` was `OSSL_KEYMGMT_SELECT_PRIVATE_KEY` and only `e` and `d` was in the RSA structure, the function returns 1 while it was incorrect.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_When `cleanup_entropy()` is called to cleanup parent by calling provided `OSSL_FUNC_rand_clear_seed_fn` method, incorrect random context is passed to the method. So accessing that context creates a segmentation fault. Parent context should be passed rather than DRBG's own context.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This fixes two issues:

1.  in `crypto/bio/bss_dgram.c`, the `BIO_ADDR` fields were used directly in
    the call to `sendto()`.  Especially using `sizeof(addr)` to determine
    the size of the applicable sockaddr is fragile, as there are `sendto()`
    implementations that are very picky that the size match the indicated
    address family.
    
    It's better to use `BIO_ADDR_sockaddr()` and `BIO_ADDR_sockaddr_size()`,
    to ensure that the correct data is used.
2.  `test/bio_dgram_test.c` fails when an address family isn't supported on
    the platform it's run on.  Typically, there are still platform without
    IPv6 support.
    This is fixed by modifying the test so it's skipped when `BIO_bind()`
    fails.  Since `test/bio_dgram_test.c` isn't designed to test `BIO_bind()`
    specifically, this is sensible enough.
_|_The assignment of the result of EVP_get_digestbynid() did not happen which made the fallback not actually perform the fallback.

CLA: trivial

Please note that I found this using a static analysis tool I am developing at the moment. It could therefore be a false positive bug. I manually reviewed the case to be extra sure that it is a real bug.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Early data decryption is expected to fail sometimes. If it does we should
not leave spurious error entries on the queue.

Fixes https://github.com/openssl/openssl/issues/20377

This is a backport of #20401 for 3.1/3.0._|_A bad merge from #20208 into the 3.0 branch caused a build break.
_|_`include/internal/thread_arch.h  didn't indicate this, now it does.

This also invalidates `ossl_crypto_mem_barrier()`, which we isn't used
anywhere.  Reason for invalidation: it doesn't build with compilers
that don't support the GNU extension `__asm__`.
_|_The existing code forces all child DRBGs to reseed if their parent reseeds.  This means that a prediction resistant request (which reseeds the chain up to the primary DRBG) causes all public and private DRBGs to also reseed which is very inefficient (these two exist per thread after all).

This change avoids the forced reseed on parent reseed.  DRBGs will still reseed based on usage and time.

Fixes #20414

- [x] documentation is added or updated
- [x] tests are added or updated
_|_NIST SP 800-132 [\[1\]][1] section 5.1 says "[t]he length of the randomly-generated portion of the salt shall be at least 128 bits", which implies that the salt for PBKDF2 must be at least 16 bytes long (see also Appendix A.2.1).

The FIPS 140-3 IG [\[2\]][2] section 10.3.A requires that "the lengths and the properties of the Password and Salt parameters, as well as the desired length of the Master Key used in a CAST shall be among those supported by the module in the approved mode."

As a consequence, the salt length in the self test must be at least 16 bytes long for FIPS 140-3 compliance. Switch the self test to use the only test vector from RFC 6070 that uses salt that is long enough to fulfil this requirement. Since RFC 6070 does not provide expected results for PBKDF2 with HMAC-SHA256, use the output from [\[3\]][3], which was generated with python cryptography, which was tested against the RFC 6070 vectors with HMAC-SHA1.

 [1]: https://doi.org/10.6028/NIST.SP.800-132
 [2]: https://csrc.nist.gov/CSRC/media/Projects/cryptographic-module-validation-program/documents/fips%20140-3/FIPS%20140-3%20IG.pdf
 [3]: https://github.com/brycx/Test-Vector-Generation/blob/master/PBKDF2/pbkdf2-hmac-sha2-test-vectors.md

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] ~documentation is added or updated~
- [x] tests are added or updated
_|_Fixes #20424

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_We can easily find out the keytype which should significantly improve the performance of this function because we don't have to try every loaded decoder.

Partial fix for #20399
_|_Check the return from DSA_set0_key and generate an error on failure.
Technically a false positive since the function always returns success.

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_I have fix the issue #20145 with freeing memory of certStatus and changed the condition as asked in the issue.
I changed :
```cpp
/* consume certStatus into msg right away so it gets deallocated with msg */ 
if (!sk_OSSL_CMP_CERTSTATUS_push(msg->body->value.certConf, certStatus)) 
    goto err; 
```
Into : 
```cpp
/* consume certStatus into msg right away so it gets deallocated with msg */ 
if (sk_OSSL_CMP_CERTSTATUS_push(msg->body->value.certConf, certStatus) < 1) {
/*
 * It hasn't been consumed by the msg at this point of time,
 * so we should free certStatus */
    OSSL_CMP_CERTSTATUS_free(certStatus);
    goto err;
}

```_|_Bumps [coverallsapp/github-action](https://github.com/coverallsapp/github-action) from 1.1.3 to 1.2.3.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href="https://github.com/coverallsapp/github-action/releases">coverallsapp/github-action's releases</a>.</em></p>
<blockquote>
<h2>v1.2.3</h2>
<p>No release notes provided.</p>
<h2>v1.2.2</h2>
<p>Don't suppress filesystem errors when trying to open a coverage report file.</p>
<h2>v1.2.1: Update dependencies</h2>
<p>No release notes provided.</p>
<h2>v1.2.0: Add carryforward flags</h2>
<ul>
<li>[x] Add carryforward flags feature</li>
<li>[x] Update dependencies</li>
</ul>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/coverallsapp/github-action/commit/65affa9d85c09884b6051d6c1c7138d469d62b23"><code>65affa9</code></a> fix: allow overwrite service_job_id (<a href="https://github-redirect.dependabot.com/coverallsapp/github-action/issues/151">#151</a>)</li>
<li><a href="https://github.com/coverallsapp/github-action/commit/015205d442c9fea373866f2b930244734701900d"><code>015205d</code></a> ci: install ncc tool (<a href="https://github-redirect.dependabot.com/coverallsapp/github-action/issues/149">#149</a>)</li>
<li><a href="https://github.com/coverallsapp/github-action/commit/5129ab087001f30d31733a16dad35091335692ba"><code>5129ab0</code></a> ci: add ci</li>
<li><a href="https://github.com/coverallsapp/github-action/commit/4c363876b231622f38f0a9ed41dcc08a492e4147"><code>4c36387</code></a> fix: typo</li>
<li><a href="https://github.com/coverallsapp/github-action/commit/7e344aba25df941a6a4788c8e8da6a2059f44075"><code>7e344ab</code></a> docs: make flag-name unique for copy-paste from README (<a href="https://github-redirect.dependabot.com/coverallsapp/github-action/issues/119">#119</a>)</li>
<li><a href="https://github.com/coverallsapp/github-action/commit/eab71d16bdb48163d6e3d35669dee4ada4a37fa8"><code>eab71d1</code></a> fix: Throw read file sync error instead of throwing static error messages (<a href="https://github-redirect.dependabot.com/coverallsapp/github-action/issues/69">#69</a>)</li>
<li><a href="https://github.com/coverallsapp/github-action/commit/3bc383fed7154c9cfc21348ffef562cc2de48141"><code>3bc383f</code></a> fix: typo (<a href="https://github-redirect.dependabot.com/coverallsapp/github-action/issues/48">#48</a>)</li>
<li><a href="https://github.com/coverallsapp/github-action/commit/ad62194cc502f03fa86ded2415e8c7ad85fd38bb"><code>ad62194</code></a> docs: Fix GitHub CI to GitHub Actions (<a href="https://github-redirect.dependabot.com/coverallsapp/github-action/issues/72">#72</a>)</li>
<li><a href="https://github.com/coverallsapp/github-action/commit/6e4056ec13395d795b76f7c92403ecf5dad1cfdd"><code>6e4056e</code></a> fix: upgrade and use ncc (<a href="https://github-redirect.dependabot.com/coverallsapp/github-action/issues/147">#147</a>)</li>
<li><a href="https://github.com/coverallsapp/github-action/commit/0363cd28f449b7e5d3b6c6d269d31fe7c1201b68"><code>0363cd2</code></a> feat: add carryforward flags</li>
<li>Additional commits viewable in <a href="https://github.com/coverallsapp/github-action/compare/1.1.3...v1.2.3">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=coverallsapp/github-action&package-manager=github_actions&previous-version=1.1.3&new-version=1.2.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>_|_Early data decryption is expected to fail sometimes. If it does we should
not leave spurious error entries on the queue.

Fixes https://github.com/openssl/openssl/issues/20377

This PR is labelled for master. It also needs to be fixed in 3.1/3.0 as well but a slightly modified PR will be required for that. I'll wait for approval of this one before progressing that.
_|_While converting libssl in master to use OSSL_TIME we introduced a confusion between ms and seconds. This meant that ticket age was being miscalculated as 1000 times bigger than it actually was - leading to early data never being accepted because the ticket is too old.

We fix that and also clarify a nearby comment which might have been the source of the confusion.

Although we have extensive early_data tests this was never being caught because the tests run so quickly that the ticket age was always coming out as close to zero. 1000 times zero is still zero, so the tickets were still being accepted. We modify some of the tests to introduce some artificial age to exercise the age calculations better.

_|_
- [x] documentation is added or updated
- [x] tests are added or updated
_|_Coverage testing showed that ossl_ffc_params_fromdata() was not setting OSSL_PKEY_PARAM_FFC_DIGEST_PROPS.
Adding a negative test also showed that ossl_ffc_params_copy() did not do a shallow copy of the digest or digest property.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated

This is a bug fix that was discovered during coverage testing. The actual fix was separated into this PR so it can be merged to multiple branches._|_The actions for the branches don't trigger.

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Since GCC commit e154242724b084380e3221df7c08fcdbd8460674 the flag "-many" is sometimes not passed to the assembler. Use .machine "any" just like ecp_nistz256-ppc64 to prevent compile errors when built with some configurations of GCC.
_|_It turns out that my recently merged changes to  `cms_add0_cert.pod` made `find-doc-nits` unhappy.
Sorry that this went unnoticed and now causes unrelated CI failures in newly pushed PRs.
For this reason, I propose making the fix given here urgent.

As the error messages by `make doc-nits`:
```
/usr/bin/perl ./util/find-doc-nits -c -n -l -e
doc/man3/CMS_add0_cert.pod:1: Section missing in CMS_sign_ex()
doc/man3/CMS_add0_cert.pod:1: Section missing in CMS_sign()
doc/man3/CMS_add0_cert.pod:1: Section missing in CMS_verify()
doc/man3/CMS_add0_cert.pod:1: Section missing in CMS_verify()
```
are unclear and even misleading, such that it took me a while to understand what went wrong,
I propose the improvement of  `find-doc-nits`  given in the 2nd commit.
The error given will then read, e.g.,:
```
doc/man3/CMS_add0_cert.pod:1: Missing man section number (likely, 3) in L<CMS_verify()>
```

_|_The two places that call `ossl_ssl_init()` assume that no additional memory has been allocated when this fails; they subsequently free the QUIC_CONNECTION/SSL_CONNECTION via OPENSSL_free() without freeing any other resources.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_kbkdf_dup should use the appropriate type OSSL_FUNC_kdf_dupctx_fn.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- ~documentation is added or updated~
- ~tests are added or updated~
_|_`SSL_add_dir_cert_subjects_to_stack()` function always fails on Windows.
`SSL_add_file_cert_subjects_to_stack()` function fails on Windows when trying to open a directory as a file :
[https://github.com/openssl/openssl/blob/7e5505107aacdf58a4d0c00da90af4b7407c8d65/ssl/ssl_cert.c#L767-L768](https://github.com/openssl/openssl/blob/7e5505107aacdf58a4d0c00da90af4b7407c8d65/ssl/ssl_cert.c#L767-L768)

The following code shows this error. This PoC works in Linux but not Windows:
```c
#include <openssl/x509.h>
#include <openssl/ssl.h>
#include <openssl/safestack.h>

int main(int argc, char **argv) {
    int n, i;
    STACK_OF(X509_NAME) *ca_dn=sk_X509_NAME_new_null();
    (void)argc;
    SSL_add_dir_cert_subjects_to_stack(ca_dn, argv[1]);
    if((n=sk_X509_NAME_num(ca_dn))==0) {
        printf("No trusted certificates found\n");
        sk_X509_NAME_pop_free(ca_dn, X509_NAME_free);
        return 1; /* FAILED */
    }
    for(i=0; i<n; i++) {
        char *ca_name=X509_NAME_oneline(sk_X509_NAME_value(ca_dn, i), NULL, 0);
        printf("CA #%d: %s\n", i, ca_name);
        OPENSSL_free(ca_name);
    }
    sk_X509_NAME_pop_free(ca_dn, X509_NAME_free);
    return 0; /* OK */
}
```
My improved PR fixes this by skipping current, parent and other subdirectories in `SSL_add_dir_cert_subjects_to_stack()`._|_Fixes #20291 
<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_A colleague noticed that for `p10cr` transactions both the CMP client does not use the CertReqId specified in RFC 4210.
This is fixed here, ~extending also the mock server in order to check for the right value~
moving the check for the right value from the mock server to the core server implementation and extending it as needed.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_The logic for handling inconsistent use of `-rspin` etc., `-port`, `-server`, and `-use_mock_srv` options proved faulty.
This is fixed here, updating and correcting also the documentation and diagnostics of the involved options.

In particular, the case that `-rspin` (or `-rspout`. `reqin`, `-reqout`) does not provide enough message file names was not properly described and handled.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_This makes bn_correct_top use constant time code
if BN_FLG_CONSTTIME is set. Together with the
fact, that BN_bn2binpad is already constant time,
if this flag is set, this should eliminate the
timing oracle completely.

Use that to make BN_BLINDING_invert_ex not reveal
the leading zero limbs in the result._|_This makes bn_correct_top use constant time code
if BN_FLG_CONSTTIME is set. Together with the
fact, that BN_bn2binpad is already constant time,
if this flag is set, this should eliminate the
timing oracle completely.

Use that to make BN_BLINDING_invert_ex not reveal
the leading zero limbs in the result._|_This makes bn_correct_top use constant time code
if BN_FLG_CONSTTIME is set.  Together with the
fact, that BN_bn2binpad is already constant time,
if this flag is set, this should eliminate the
timing oracle completely.

Use that to make BN_BLINDING_invert_ex not reveal
the leading zero limbs in the result._|_Backport the parts of #19199 containing fixes for `CMS_add1_cert()`.

_|_We want to add -mips2 or -mips3 only if the user hasn't already specified a mips version in CFLAGS. The existing test was a double-negative.

CLA: trivial

Fixes: https://github.com/openssl/openssl/issues/20214
_|_This backports #20190 to 3.0 and 3.1, where it did not merge cleanly.
_|_This backports all recent improvements of the `check-format` tool (not only those in #19796) to 3.0 and 3.1, 
as suggested by https://github.com/openssl/openssl/pull/19796#issuecomment-1422780074.
_|_cf https://github.com/openssl/openssl/pull/20128#issuecomment-1423466180_|_This backports all recent improvements of the `check-format` tool (not only those in #19796) to 3.0 and 3.1, 
as suggested by https://github.com/openssl/openssl/pull/19796#issuecomment-1422780074.
_|_According to the documentation and my analysis tool ASN1_item_i2d() can return a negative value on error, but this is not checked. Fix it by changing the error check condition.

CLA: trivial

Please note that I found this using a static analysis tool I am developing at the moment. It could therefore be a false positive bug. I manually reviewed the case to be extra sure that it is a real bug.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_According to the documentation and my analysis tool RSA_public_decrypt() can return -1 on error, but this is not checked. Fix it by changing the error condition.

CLA: trivial

Please note that I found this using a static analysis tool I am developing at the moment. It could therefore be a false positive bug. I manually reviewed the case to be extra sure that it is a real bug.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->
This is showing up as a non-checked-in/not-ignored file._|__umul128() is x86_64 (x64) only, while __umulh() works both on x64 and ARM64

fixes #20234
<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
_|_It add supports for verifying that it's been signed by a CA, and checks the CRL and OCSP status

Can find CVE-2022-4203 and CVE-2023-0286
_|__umul128 is unavailable for ARM64 when building using Visual Studio, causing a linker failure when attempting to build for VC-WIN64-ARM. This limits the use of _umul128 to AMD64 builds.

This applies to both OpenSSL 3.0 and OpenSSL 1.1.1.

CLA: trivial_|_This PR fixes #20161.

It does that by addressing the following issues:
- `ctx->p2` is `NULL` and is passed by value instead of by address to `OSSL_PARAM_get_utf8_string`. As a result, `get_string_internal` returns `0`, leading to failure. By passing `ctx->p2` by address, `get_string_internal` will allocate the needed string and make `ctx->p2` point to it. Also, worth noting that the next call to `OBJ_sn2nid` in `fix_ec_paramgen_curve_nid` expects a `const char *` as argument, which means that `ctx->p2` is expected to be a `char *`.
- `ctx->ctrl_cmd` is `0` in `evp_pkey_ctx_setget_params_to_ctrl`, As a result, the next call to `EVP_PKEY_CTX_ctrl` will fail: it calls `pkey_ec_ctrl`, and since `ctx->ctrl_cmd` is `0`, it fails with `-2` and raises `EVP_R_COMMAND_NOT_SUPPORTED`. By setting it to `EVP_PKEY_CTRL_EC_PARAMGEN_CURVE_NID` in `fix_ec_paramgen_curve_nid`, the call to `EVP_PKEY_CTX_ctrl` will succeed as expected._|_Two key 3DES only sets two keys and the random generation errors out if fewer than three keys are required.  It shouldn't.

Fixes #20212

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Unlike gcc, the clang assembler has issues with the maximum value of the literal in the `ldr REG, #VALUE` pseudo-instruction (where the assembler places the value into a literal pool and generates a PC-relative load from that pool) when used with Neon registers.

Specifically, while dN refers to 64-bit Neon registers, and qN refers to 128-bit Neon registers, clang assembly only supports a maximum of 32-bit loads to either with this instruction.

Therefore restrict accordingly to avoid breakage when building with clang.

clang appears to support the correct maximums with the scalar registers xN etc.

This will prevent the kind of breakage we saw when #19914 was merged (which has since been fixed by #20202) - assembly authors will need to manually apply the literal load, as is done in #20202.

None of the Arm assembler code uses this pseudo-instruction anyway, as it doesn't seem to avoid duplication of constants.

##### Checklist
(none apply)
_|_Allocate memory for a new SSL session.
If any of these steps fail,
free the key memory and the tmpsess object
before returning 0 to prevent a memory leak.

Fixes: #20110

CLA: trivial_|_This is a backport of #19222 as motivated by https://github.com/openssl/openssl/pull/19222#issuecomment-1248204946.
It also includes the fixup done in #19981.
 _|_This PR backports the fixes to a number of pipelining bugs that were resolved in master recently to 3.1/3.0. It also adds a new test for the pipelining code which would have caught these issues.

It is mostly a backport of PR #19456, plus an additional fix which was included in a much larger commit in master (https://github.com/openssl/openssl/commit/c6186792b98e93cf2d5d2a9fb85e4aeab31db890) related to moving the pipelining code into the new record layer that exists there.

Fixes #20197_|_BIO_set_accept_name() can return error values -1 and 0 according to my analysis tool and the documentation. Documentation says a value of 1 indicates success. Currently, only an error value != 0 is checked which erroneously interprets a -1 error return value as success. Fix it by changing the check condition.

CLA: trivial

Please note that I found this using a static analysis tool I am developing at the moment. It could therefore be a false positive bug. I manually reviewed the case to be extra sure that it is a real bug.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_It turned out that the  `-reqin` option of the CMP CLI had two bugs, fixed here:
* the last `-reqin` file argument was not actually used, which covered a further bug:
* the `recipNonce` in the server response was not used in the next request.

Fixing the latter requires a new helper function at API level: `OSSL_CMP_MSG_update_recipNonce`.

On this occasion further corrected and slightly extended the related CLI and API docs.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_Fix https://github.com/openssl/openssl/pull/19914#issuecomment-1413360822_|_Commit 50ccc176da8644be079eccc4523c261e34f7b293 (PR #14074) broke reporting of duplicate prototypes due to an overlooked typo._|_inclusing quic/quic_local.h from ssl/ssl_lib.c presented another challenge
for the current VMS C.  Since ssl/quic/quic_local.h in turn includes
../ssl_local.h, we compensated for with the usual whack-a-mole in
Configurations/descrip.mms.tmpl.

As far as my personal tests go, this seems to be the last fix of this sort,
so far.
_|_BIO_set_md() can return an error value <= 0 according to my analysis tool and the documentation. But only an error value == 0 is currently checked. Fix it by changing the check condition.

CLA: trivial

Please note that I found this using a static analysis tool I am developing at the moment. It could therefore be a false positive bug. I manually reviewed the case to be extra sure that it is a real bug.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_BIO_dup_state() returns an error code <= 0 according to my analysis tool and the documentation. Currently only == 0 is checked. Fix it by changing the check condition.

CLA: trivial

Please note that I found this using a static analysis tool I am developing at the moment. It could therefore be a false positive bug. I manually reviewed the case to be extra sure that it is a real bug.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_These aren't currently checked when they are called in cipher_aes_gcm_hw_armv8.inc, but they are declared as returning as size_t the number of bytes they have processed, and the aes_gcm_*_*_kernel (unroll by 4) versions of these do return the correct values.

##### Checklist

(none applicable)_|_With more thorough testing I found several bugs in CMP error situations, fixed here.
To add test cases I had to generalize the internal error injection function `ossl_cmp_mock_srv_set_send_error()`,
which I renamed for consistency with related functions to `ossl_cmp_mock_srv_set_sendError()`.

In this occasion, also fix glitches in the internal documentation of these functions,
two mistakes in related code comments in `cmp_ctx.c`, 
and a potential crash in `test_get_libctx()`, which I noticed while 
preparing #20187, which came up while extending the tests.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_This macro returns an errorcode <= 0 according to the documentation and my tool, but only < 0 is checked. Other callers that check the return value perform this check correctly. Fix it by changing the check to <= 0.

CLA: trivial

Please note that I found this using a static analysis tool I am developing at the moment. It could therefore be a false positive bug. I manually reviewed the case to be extra sure that it is a real bug.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_During key generation RSA, EC and DSA have extra tests that run in FIPS mode All 3 algorithms have a pairwise test, EC & DSA also run a KAT test.

This test uses the self test callback to force an error during each of the extra pairwise and KAT tests.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_CMS_SharedInfo_encode() can also return a negative error value, but this is not checked in the current check, only the zero error return value is covered. A previous PR [1] fixed the other caller's check of CMS_SharedInfo_encode in this file, but it seems like this place was missed. Fix it by changing the check to <= 0.

[1] https://github.com/openssl/openssl/pull/12628/commits/a752fc4da5e1dfd5b3a730d95272c2e2b0c48f1a

CLA: trivial

Please note that I found this using a static analysis tool I am developing at the moment. It could therefore be a false positive bug. I manually reviewed the case to be extra sure that it is a real bug.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_That function is a wrapper around evp_cipher_param_to_asn1_ex() which can return 0 as an error value via its ret <= 0 check [1]. Furthermore, all other callers of this function check against <= 0 instead of < 0 and this is also in line with what the documentation tells us. Fix the incomplete check by changing it to <= 0 as well.

CLA: trivial

[1] https://github.com/openssl/openssl/blob/114d99b46bfb212ffc510865df317ca2c1542623/crypto/evp/evp_lib.c#L164-L165

Please note that I found this using a static analysis tool I am developing at the moment. It could therefore be a false positive bug. I manually reviewed the case to be extra sure that it is a real bug.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_default_check() can return a zero value to indicate an internal error in one condition for the PRE_CTRL_STR_TO_PARAMS state. This state can be reached from the default_fixup_args() function which does not check for a zero value. All other callers of default_check() in that file do check for a zero return value. Fix it by changing the check to <= 0.

CLA: trivial

Please note that I found this using a static analysis tool I am developing at the moment. It could therefore be a false positive bug. I manually reviewed the case to be extra sure that it is a real bug.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_If the user specifies an alternative build file than the default, this alternative is recorded in $config{build_file}, not $target{build_file}. Therefore, the former should be used, leaving the latter as a mere default.

This is a bug.

-----

This is #20173 backported to 1.1.1_|_If the user specifies an alternative build file than the default, this
alternative is recorded in $config{build_file}, not $target{build_file}.
Therefore, the former should be used, leaving the latter as a mere default.

This is a bug.  While fixing it, document it better too.
_|_Fix issue #20063.
CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_It was reported that a regression had been incurred by #14128:
the default certificate confirmation callback no more verified the newly enrolled cert,
while this still should be done if a trust store has been provided to this function.

This issue should have captured to some extent by an existing test case,
but the expected failure happend for not the right reason: 
it was due to a cert file not being present rather than the intended cert being expired.

While fixing this, also I added corresponding tests and to this end had to update the test server credentials
and remove a workaround in the test configuration (which so far simply had disabled cert expiration checks).
Also made the doc of the callback function and of the related `-out_trusted` CLI option a little more precise.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_X509V3_add1_i2d() can return both -1 and 0 as an error code. This check only checked for 0. Change it into <= 0 to also catch the -1 error code.

CLA: trivial

Please note that I found this using a static analysis tool I am developing at the moment. It could therefore be a false positive bug. I manually reviewed the case to be extra sure that it is a real bug.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Point out that CLI options must be given before the final file/URI arg.
So far, they were silently ignored, as well as any extra args.
Also fix in the `storeutl` doc that there is only one URI arg. 

On this occasion, also improve APPS `load_key_certs_crls()` diagnostics on not finding expected types of contents.

Fixes #20144.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_Fixes #20084

In the 3.0 provider implementation the generic code that handles IV's only allows a 12 byte IV. Older code intentionally added the ability for the IV to be truncated.
As this truncation is unsafe, the documentation has been updated to state that this in no longer allowed. The code has been updated to produce an error when the iv length is set to any value other than 12.

NOTE: It appears that this additional padding may have originated from the code which uses a 12 byte IV, that is then passed to CHACHA which zero pads it to 16 bytes.

Note that legacy behaviour in e_chacha20_poly1305.c has not been updated.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_QUIC TLS was sending some ciphersuites twice in the ClientHello. This
was due to us declaring some TLSv1.3 ciphersuites in the list intended to
describe the TLSv1.2 ciphersuites supported by the SSL_METHOD.
_|_... after it was broken for almost 5 years,
since the first 1.1.1 release.
Note: The last working version was 1.1.0l release.

Fixes #20073

backport of #20146 to 1.1.1 branch._|_... after it was broken for almost 5 years,
since the first 1.1.1 release.
Note: The last working version was 1.1.0l release.

Fixes #20073

This is for master/3.1/3.0 branches,
1.1.1 will need an extra PR due to whitespace merge conflicts.
Manual tests on @ValdikSS 's padlock hardware were successful._|_This reverts commit e787c57c538d0922004e49a10be0d403af773272.

The current CI host system is Ubuntu 22.04, which ships with QEMU 6.2. This QEMU release is too old for the required RISC-V extensions. We would need at least QEMU 7.1 (Aug 2022) for this patch.

Let's revert the patch.

See https://github.com/openssl/openssl/pull/20107

CC: @t8m _|_If no-module or no-shared is used, the symbols from libcrypto should not be duplicated in legacy.a

Also the BIGNUM functions are currently not needed in legacy.a at all.

Fixes #20124
_|_Fixing Coverity 1520505 and 1520506.

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Backport of #20076 to 1.1.1.

The by_dir certificate/CRL lookup code uses an OPENSSL_STACK to track how many sequentially numbered CRL files have been loaded for a given X509_NAME hash which is being requested. This avoids loading already loaded CRL files and repeated stat() calls.

This OPENSSL_STACK is searched using sk_find, however this mutates the OPENSSL_STACK unless it is known to be sorted. This operation therefore requires a write lock, which was not taken.

Fix this issue by sorting the OPENSSL_STACK whenever it is mutated. This guarantees no mutation will occur during sk_find. This is chosen over taking a write lock during sk_find as retrieving a CRL by X509_NAME is assumed to be a hotter path than the case where a new CRL is installed.

Also optimise the code by avoiding creating the structure to track the last CRL file sequence number in the circumstance where it would match the initial value, namely where no CRL with the given hash is installed._|_EVP_CIPHER_asn1_to_param() returns a value <= 0 in case of an error, and a value greater than 0 in case of success. Two callsites only check for < 0 instead of <= 0. The other callsites perform this check correctly. Change the two callsites to <= 0. Additionally correctly handle a zero return value from EVP_CIPHER_get_asn1_iv as success.

Fixes: #20116

CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This is a false positive, but changing the condition so the code appears live seems safer than removing the check.

Fixes Coverity 1520485
_|_Current master don't link in my old VS config, it complains for missing `sprintf` definition.

Fix two typos



##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_RISC-V already has a couple of routines to accelerate cryptographic calculations using ISA extensions. Let's add a cross-compile target that allows the CI to test this code.

The new defined machine is a rv64gc machine with
* all Bitmanip extensions (Zb*)
* all Scalar Crypto extensions (Zk*)

This selection matches the supported RISC-V extensions in OpenSSL.

See also #20091.

Note, that this PR is untested (only GitHub workflow changes)._|_This adds locking to various global OSSL_STACK instances which are used unsafely with sk_find (and really, probably in  a quite non-thread-safe way in general).

This may be too conservative from a performance perspective, as it needs to obtain a global write lock to access some fairly infrequently changing data. It is likely we can relax some of the write locks into read locks via ensuring everything is sorted... something to think about. Though even with read locks we have had cache contention issues in the past. It would also be nice to measure the effect of this code once we have performance measurement infrastructure._|_Fixes #20084

This is a provider related bug. The generic code to test the ivlen enforces a size of 12 bytes. A special flag was added to allow the generic code to do a different check. i.e. ivlen <= 12 The code to do the zero padding already existed.

A test that does the zero padding was added to a data driven evp_test.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Some ciphers/protocol versions have an explicit IV. We need to make sure we
have sufficient room for it in the underlying buffer.

This is a backport of #20085.

This fixes a regression introduced by #19585 and should be merged before any 1.1.1t is released.
_|_Some ciphers/protocol versions have an explicit IV. We need to make sure we
have sufficient room for it in the underlying buffer.

This is a backport of #20085.

This fixes a regression introduced by #19585 and should be merged before any 1.1.1t is released.
_|_Some ciphers/protocol versions have an explicit IV. We need to make sure we
have sufficient room for it in the underlying buffer.

This is a backport of #20085.

This fixes a regression introduced by #19517 and should be merged before any 3.0.8 is released.
_|_Some ciphers/protocol versions have an explicit IV. We need to make sure we
have sufficient room for it in the underlying buffer.

This is a backport of #20085.

This fixes a regression introduced by #19517 and should be merged before any 3.0.8 is released.
_|_Some ciphers/protocol versions have an explicit IV. We need to make sure we
have sufficient room for it in the underlying buffer.

This fixes a regression introduced during the record layer refactor.
_|_Byte swapping code incorrectly uses the number of AES rounds to swap expanded AES key, while swapping only a single dword in a loop, resulting in swapped key and partially swapped expanded keys, breaking AES encryption and decryption on VIA Padlock hardware.

This commit correctly sets the number of swapping loops to be done.

Fixes #20073

CLA: trivial
_|_The by_dir certificate/CRL lookup code uses an OPENSSL_STACK to track how many sequentially numbered CRL files have been loaded for a given X509_NAME hash which is being requested. This avoids loading already loaded CRL files and repeated stat() calls.

This OPENSSL_STACK is searched using sk_find, however this mutates the OPENSSL_STACK unless it is known to be sorted. This operation therefore requires a write lock, which was not taken.

Fix this issue by sorting the OPENSSL_STACK whenever it is mutated. This guarantees no mutation will occur during sk_find. This is chosen over taking a write lock during sk_find as retrieving a CRL by X509_NAME is assumed to be a hotter path than the case where a new CRL is installed.

Also optimise the code by avoiding creating the structure to track the last CRL file sequence number in the circumstance where it would match the initial value, namely where no CRL with the given hash is installed.

Unsure about how we should test this.

Have identified more unsafe use of sk_find which will need further work. This should cherry-pick cleanly to 3.1 and 3.0._|_The other implementations of i2r return 0 in case of an error, but i2r_ADMISSION_SYNTAX() returns -1. That means the check on i2r does not catch the error. Change it to return 0 like the others do.

Fixes: #20066

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_CPACF does not support pre-hashing.  This was considered correctly for Ed25519ph, but not for Ed448ph which lead to errors in the test_evp suite (test vector 20 - pre-hashing without context string).  Fix this by using the non-accelerated version of Ed448 also if no context string is provided, but pre-hashing is performed.

Signed-off-by: Juergen Christ <jchrist@linux.ibm.com>

No new tests needed since this fixes a bug discovered by existing test cases (test_evp vector 20).

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->
_|_In EC key generation, if allocation of struct ec_gen_ctx fails, values provided by parameters are copied into the context at represented by a NULL pointer.  To fix this, prevent copy if allocation fails.

Signed-off-by: Juergen Christ <jchrist@linux.ibm.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

Not sure if you have tests for memory allocation failures.  I could not find any (and I assume it is far from trivial to write these tests).

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] tests are added or updated
_|_Fix misleading text for `X509_V_ERR_INVALID_PURPOSE`
and an omission in doc of `X509_VERIFY_PARAM_clear_flags()`.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [ ] tests are added or updated
_|_Bumps [actions/setup-python](https://github.com/actions/setup-python) from 4.4.0 to 4.5.0.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href="https://github.com/actions/setup-python/releases">actions/setup-python's releases</a>.</em></p>
<blockquote>
<h2>Fix cache issue for Poetry projects located in subfolders</h2>
<p>In scope of this release we fixed cache issue for Poetry projects located in subfolders (<a href="https://github-redirect.dependabot.com/actions/setup-python/issues/446">actions/setup-python#446</a>). Besides that we updated json5 version from 2.2.0 to 2.2.3 (<a href="https://github-redirect.dependabot.com/actions/setup-python/pull/579">actions/setup-python#579</a>).</p>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/actions/setup-python/commit/d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435"><code>d27e3f3</code></a> Fix outdated ref to actions/setup-python@v3 in doc (<a href="https://github-redirect.dependabot.com/actions/setup-python/issues/581">#581</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/dec86ecf4e7508d3930ae42abcdc575f35ea490d"><code>dec86ec</code></a> Bump json5 from 2.2.0 to 2.2.3 (<a href="https://github-redirect.dependabot.com/actions/setup-python/issues/579">#579</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/4dcd67678fa3503efac0834f974a48946bcc8037"><code>4dcd676</code></a> Update CODEOWNERS (<a href="https://github-redirect.dependabot.com/actions/setup-python/issues/576">#576</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/8b89ef08a08c1818d354fdb6c8af1ae93a2acb01"><code>8b89ef0</code></a> Use correct Poetry config when collecting Poetry projects (<a href="https://github-redirect.dependabot.com/actions/setup-python/issues/447">#447</a>)</li>
<li>See full diff in <a href="https://github.com/actions/setup-python/compare/v4.4.0...v4.5.0">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4.4.0&new-version=4.5.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>_|_It turned out that it was not a good idea of mine in #18656 to delete in  `cmp.c` output files beforehand -
this way, for instance, a cert file to be updated would be deleted prematurely before the update is produced.

It just carved this fix out of #19948 and added a to-the-point test case.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_Fixes #20031, in the way correctly suggested here.
_|_This allows calls with s==NULL and len==0 to be safe.  It probably already
was, but address sanitizers could still complain.

This fixes the underlying problem detected in #20011
_|_This patch is to fix #19902. 

All the chacha20 test cases passed based on this patch in big-endian environment emulated by qemu-aarch64_be.
_|_Likewise for the related ECX key exchanges.
NIST is mandating this until FIPS 186-5 is finalised.

They are blocking things until this is addressed.
_|_The condition evaluation in #if conditions does not tolerate this if the macro is not defined.

Fixes #19628
_|_A zero BIGNUM contains zero bytes, while OSSL_PARAMs with an INTEGER (or
UNSIGNED INTEGER) data type are expected to have at least one data byte
allocated, containing a zero.  This wasn't handled correctly.

Fixes #20011
_|_Unfortunately the rsaz_exp_x2.c is slightly different in 3.0 in that it still needs the ALIGN64 macro.

This fixes CI failure on 3.0 so it is urgent.
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Fixes: #19996

CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_There was a check that the unquoted property value would start with an
alphabetic character.  This goes against the spec in property(7), which
says this:

    UnquotedString ::= [^{space},]+

The fix is to simply remove that precondition and leave it to parse_unquoted()
to do its job.
_|_Unsetting the __power_set macro as this would cause core-dump if hardware acceleration(incore-crypto) is not enabled on AIX operating system.

Here are the logs -

```
# schedo -o allow_vmx
allow_vmx = 0

# openssl version
OpenSSL 3.0.7 1 Nov 2022 (Library: OpenSSL 3.0.7 1 Nov 2022)

# openssl speed -evp aes-256-gcm
Doing AES-256-GCM for 3s on 16 size blocks: Illegal instruction(coredump)

# dbx /usr/bin/openssl core
Type 'help' for help.
[using memory image in core]
reading symbolic information ...warning: no source compiled with -g


Illegal instruction (illegal opcode) in aes_p8_set_encrypt_key at 0xd3c417f0 ($t1)
0xd3c417f0 (aes_p8_set_encrypt_key+0x50) 7c2018ce            lvx   vr1,r0,r3
(dbx) where
aes_p8_set_encrypt_key(??, ??, ??) at 0xd3c417f0
evp_do_ciph_ctx_getparams(0x2005c948, 0xd4002560, 0x20) at 0xd3ca6ee4
cipher_generic_init_internal(0x2005c948, 0xd4002560, 0x20, 0x0, 0x0, 0x0, 0x1) at 0xd3ee0da4
ossl_cipher_generic_einit(0x2005c948, 0xd4002560, 0x20, 0x0, 0x0, 0x0) at 0xd3ee0e60
evp_cipher_init_internal(0x2005c8a8, 0x20037c48, 0x0, 0xd4002560, 0x0, 0x1, 0x0) at 0xd3ca8f8c
EVP_CipherInit_ex(0x2005c8a8, 0x20037c48, 0x0, 0xd4002560, 0x0, 0x1) at 0xd3ca9720
drbg_ctr_init(0x2005c178) at 0xd3e54474
drbg_ctr_set_ctx_params(0x2005c178, 0x2ff22020) at 0xd3e548a4
drbg_ctr_instantiate_wrapper(0x2005c178, 0x0, 0x0, 0x0, 0x0, 0x2ff22020) at 0xd3e54964
evp_rand_instantiate_locked(0x2005c078, 0x0, 0x0, 0x0, 0x0, 0x2ff22020) at 0xd3cb0f1c
EVP_RAND_instantiate(0x2005c078, 0x0, 0x0, 0x0, 0x0, 0x2ff22020) at 0xd3cb0fd4
rand_new_drbg(0xf158c1a8, 0x2005bf28, 0x100, 0xe10) at 0xd3cad5a0
RAND_get0_primary(0xf158c1a8) at 0xd3cad990
RAND_get0_private(0xf158c1a8) at 0xd3cadd2c
RAND_priv_bytes_ex(0xf158c1a8, 0x20051aa8, 0x20, 0x0) at 0xd3cade20
EVP_CIPHER_CTX_rand_key(0x2005a858, 0x20051aa8) at 0xd3cabdd4
speed_main(0x0, 0x2ff229f0) at 0x1007c5b0
do_cmd(0x20030258, 0x3, 0x2ff229e4) at 0x10000980
main(0x3, 0x2ff229e4) at 0x100011c8
(dbx)

````

If I unset the __power_set macro, above issue was not seen.

How to recreate this issue ?

1. Check for incore crypto.
     _schedo -o allow_vmx_
2. If allow_vmx's value is set to 1, disable it by setting it to 0.
     _schedo -ro allow_vmx=0_
3. Run openssl speed command to exploit hardware acceleration capabilities.
     _openssl speed -evp aes-256-gcm_
4. You will see coredump.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_CPACF does not directly support xofs.  Emulate this by using single block operations on an empty input block.

Fixes: affc070aabc9 ("s390x: Optimize kmac")

Signed-off-by: Juergen Christ <jchrist@linux.ibm.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist

_|_Fixes #19975 in the obvious way.
Also a related potential crash in `CMS_decrypt_set1_password()`.

The point is that that the input might have an unexpected content type, so a guard is needed at both places where `ec` is obtained using `ossl_cms_get0_env_enc_content(cms)`.

Note that in `CMS_decrypt_set1_pkey_and_peer()`  there was no such `ec != NULL` guard in
```
    if (ris != NULL)
        debug = ec->debug;
```
maybe because it is implied here by `ris != NULL`.
Still I added it there, too, to be on the safe side._|_Backport of commit 624efd2
_|_Resolves #17092 (?)

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Resolves #17092 (?)

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Bumps [actions/setup-python](https://github.com/actions/setup-python) from 4.3.1 to 4.4.0.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href="https://github.com/actions/setup-python/releases">actions/setup-python's releases</a>.</em></p>
<blockquote>
<h2>Add support to install multiple python versions</h2>
<p>In scope of this release we added support to <a href="https://github-redirect.dependabot.com/actions/setup-python/pull/567">install multiple python versions</a>. For this you can try to use this snippet:</p>
<pre lang="yaml"><code>    - uses: actions/setup-python@v4
      with:
        python-version: |
            3.8
            3.9
            3.10
</code></pre>
<p>Besides, we changed logic with throwing the error for GHES if cache is unavailable to warn (<a href="https://github-redirect.dependabot.com/actions/setup-python/pull/566">actions/setup-python#566</a>).</p>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/actions/setup-python/commit/5ccb29d8773c3f3f653e1705f474dfaa8a06a912"><code>5ccb29d</code></a> Install multiple python versions (<a href="https://github-redirect.dependabot.com/actions/setup-python/issues/567">#567</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/c3e033939cccc2ea50f0194cbc59de6fc5265be6"><code>c3e0339</code></a> Update action to use reusable workflows (<a href="https://github-redirect.dependabot.com/actions/setup-python/issues/569">#569</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/206e984b94c0532e57811bc170b0832bc4515975"><code>206e984</code></a> refactor: Use early return pattern to avoid nested conditions (<a href="https://github-redirect.dependabot.com/actions/setup-python/issues/566">#566</a>)</li>
<li>See full diff in <a href="https://github.com/actions/setup-python/compare/v4.3.1...v4.4.0">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4.3.1&new-version=4.4.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>_|_This fixes regression from #19882

As this is a CI breakage, this is an urgent fix.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
_|_Adding tests to #18704,
* I found a bug, which can lead to double free, in the internal function used to implement `OSSL_trace_set_channel()`, fixed here.
* I also found a severe omission in the related documentation, and fixed it here by stating that 
on success `OSSL_trace_set_channel()` it takes ownership of the `bio` parameter.


_|_This is backport of the #19917 PR to 3.0 branch with necessary adjustments and added cherry-pick of the testcase.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Fixes #19907
Fixes #19921 

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated

Only the 80-test_cms.t fix applies to 3.1 branch. The other test is not present on 3.1 branch.
_|_Fixes #9205

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Otherwise mkerr.pl always resets the strings to the original names based on the reason identifiers.

This is alternative to #19940.
_|_The SSLV3 alert text is not a directly derived from the name of the alert. Instead, the "sslv3" text is replaced with "ssl/tls".

When doing a `make update` with modified/added errors in the ssl directory, that error text reverts to the default, and looks like an unintentional change which needs to be undone before merging.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
_|_This change is necessary to pass new ACVP tests and to
fix the CI failure in FIPS provider compat CI

It is a partial cherry-pick from 211c47ca1b1ac129dcee59d383cae44e36532bb9.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated

The PR is urgent to fix the CI failure: https://github.com/openssl/openssl/actions/runs/3715481748/jobs/6300703946
_|_Fixes #19934

The existing code was looking for the digest size, and then returned zero.

The example code in EVP_KDF-SS.pod has been corrected to not use a digest for KMAC

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Due to the logic flaw, possible test failures
in this test case might be ignored.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_This is needed to fix CI on master branch. Proposing as urgent fix.

_|_Fixes #19909

I have enforced a maximum bound still but it is much higher. Note also that TLS13 still uses the 2048 buffer size.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_If an error occurs during a flush on a BIO_f_cipher() then in some cases
we could get into an infinite loop. We add a check to make sure we are
making progress during flush and exit if not.

This issue was reported by Octavio Galland who also demonstrated an
infinite loop in CMS encryption as a result of this bug.

The security team has assessed this issue as not a CVE. This occurs on
encryption only which is typically processing trusted data. We are not
aware of a way to trigger this with untrusted data.

Backport of https://github.com/openssl/openssl/pull/19918 for 1.1.1.
_|_If an error occurs during a flush on a BIO_f_cipher() then in some cases
we could get into an infinite loop. We add a check to make sure we are
making progress during flush and exit if not.

This issue was reported by Octavio Galland who also demonstrated an
infinite loop in CMS encryption as a result of this bug.

The security team has assessed this issue as not a CVE. This occurs on
encryption only which is typically processing trusted data. We are not
aware of a way to trigger this with untrusted data.

Backport of #19918 for 3.1/3.0. Almost identical except a minor change in 80-test_cms.t._|_If an error occurs during a flush on a BIO_f_cipher() then in some cases
we could get into an infinite loop. We add a check to make sure we are
making progress during flush and exit if not.

This issue was reported by Octavio Galland who also demonstrated an
infinite loop in CMS encryption as a result of this bug.

The security team has assessed this issue as not a CVE. This occurs on
*encryption* only which is typically processing trusted data. We are not
aware of a way to trigger this with untrusted data._|_The trace code assumes all categories are present and
the category numbers are equal to the index in the table.
    
Fixes #19915

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_In the file ssl/record/methods/ssl3_meth.c, the function ssl3_mac has the following code：

```
t = EVP_MD_CTX_get_size(hash);
if (t < 0)
    return 0;
md_size = t;
npad = (48 / md_size) * md_size;
```

The variable md_size is used as a divisor. Since the code explicitly checks whether u is negative, I think it should also avoid the case when md_size=0 to prevent divide by zero bugs._|_Fixes #19911

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->
_|_If x and y are all NULL, then it is unnecessary to do subsequent operations.
Therefore, this PR adds two checks for the return of BN_CTX_get() in time._|_This is needed to resolve the CI failure as seen here: https://github.com/openssl/openssl/actions/runs/3674967856/jobs/6213824141

Alternative to #19892_|_This is a backport of #19681 to `openssl-3.0` as per openssl/technical-policies#60.

- Cherry-pick was mostly clean, only `CHANGES.md` required manual intervention, as expected.
- To ease review, I collected the changes in the documentation as a fixup commit in a9c2d1ee224653d43ec5a2dbdab3000e5947fd55


Fixes #16595 

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This testcase does not work anymore after PR #13817 was merged.
_|_Since the fips provider version isn't frozen at 3.0.0, and the first planned release with the fix in the fips provider is in 3.2.0, we need to skip all the tests that expect implicit rejection in all versions below 3.2.0

Fixup for #13817

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [X] tests are added or updated
_|_Fix-up to f3090fc7

Define `OSSL_SIGNATURE_PARAM_NONCE_TYPE` as `nonce-type` (rather than `nonce_type`) so that it is consistent with the documentation.

See the following documentation files:

`doc/man7/EVP_SIGNATURE-DSA.pod`
`doc/man7/EVP_SIGNATURE-ECDSA.pod`
`doc/man7/provider-signature.pod`


<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
_|_The internal error reason is confusing and indicating an error in OpenSSL and not a configuration problem.

Fixes #19867

I am proposing this as a bug fix to be backported to 3.0 because the current error reason is actually causing reports as #19867.
_|_The previous fix was incorrect because we have module as disablable and not modules. Besides even no-module instead of no-shared does not really fix the issue.

The correct fix is to enable-ubsan along the asan otherwise the leak is not detected with the current clang version present in the CI images._|_Fixes #19858

During decryption, the last ciphertext is not fed to next block correctly when the number of input blocks is exactly 4. Fix this and add the corresponding test cases.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_##### Checklist
- [x] tests are added or updated

##### Description

Building with `CC=gcc ./config -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DPEDANTIC -Wall -Werror -pedantic` fails since the following test cases are excluded when `FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION` is defined:

 - test_validate_msg_signature_srvcert_missing
 - test_validate_msg_mac_alg_protection_wrong
 - test_validate_msg_mac_alg_protection_missing

Guard the test case function definition by the corresponding preprocessor conditionals:

```c
#ifndef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION
...
    ADD_TEST(test_validate_msg_signature_srvcert_missing);
#endif
...
#ifndef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION
    ADD_TEST(test_validate_msg_mac_alg_protection_missing);
    ADD_TEST(test_validate_msg_mac_alg_protection_wrong);
...
#endif
```

```
Command line (with current working directory = .):

    /usr/bin/perl ./Configure --banner=Configured --debug enable-asan enable-ubsan enable-comp -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -DPEDANTIC -Wall -Werror -pedantic

Perl information:

    /usr/bin/perl
    5.34.1 for aarch64-linux-thread-multi

Enabled features:

    afalgeng
    argon2
    aria
    asan
    asm
    async
    autoalginit
    autoerrinit
    autoload-config
    bf
    blake2
    bulk
    cached-fetch
    camellia
    capieng
    cast
    chacha
    cmac
    cmp
    cms
    comp
    ct
    default-thread-pool
    deprecated
    des
    dgram
    dh
    dsa
    dso
    dtls
    dynamic-engine
    ec
    ec2m
    ecdh
    ecdsa
    engine
    err
    filenames
    gost
    idea
    legacy
    loadereng
    makedepend
    md4
    mdc2
    module
    multiblock
    nextprotoneg
    ocb
    ocsp
    padlockeng
    pic
    pinshared
    poly1305
    posix-io
    psk
    rc2
    rc4
    rdrand
    rfc3779
    rmd160
    scrypt
    secure-memory
    seed
    shared
    siphash
    siv
    sm2
    sm3
    sm4
    sock
    srp
    srtp
    sse2
    ssl
    ssl-trace
    static-engine
    stdio
    tests
    thread-pool
    threads
    tls
    ts
    ubsan
    ui-console
    whirlpool
    tls1
    tls1-method
    tls1_1
    tls1_1-method
    tls1_2
    tls1_2-method
    tls1_3
    dtls1
    dtls1-method
    dtls1_2
    dtls1_2-method

Disabled features:

    acvp-tests          [cascade]        OPENSSL_NO_ACVP_TESTS
    brotli              [default]        OPENSSL_NO_BROTLI
    brotli-dynamic      [default]        OPENSSL_NO_BROTLI_DYNAMIC
    buildtest-c++       [default]        
    winstore            [not-windows]    OPENSSL_NO_WINSTORE
    crypto-mdebug       [default]        OPENSSL_NO_CRYPTO_MDEBUG
    devcryptoeng        [default]        OPENSSL_NO_DEVCRYPTOENG
    ec_nistp_64_gcc_128 [default]        OPENSSL_NO_EC_NISTP_64_GCC_128
    egd                 [default]        OPENSSL_NO_EGD
    external-tests      [default]        OPENSSL_NO_EXTERNAL_TESTS
    fips                [default]        
    fips-securitychecks [cascade]        OPENSSL_NO_FIPS_SECURITYCHECKS
    fuzz-afl            [default]        OPENSSL_NO_FUZZ_AFL
    fuzz-libfuzzer      [default]        OPENSSL_NO_FUZZ_LIBFUZZER
    ktls                [default]        OPENSSL_NO_KTLS
    md2                 [default]        OPENSSL_NO_MD2 (skip crypto/md2)
    msan                [default]        OPENSSL_NO_MSAN
    quic                [default]        OPENSSL_NO_QUIC
    rc5                 [default]        OPENSSL_NO_RC5 (skip crypto/rc5)
    sctp                [default]        OPENSSL_NO_SCTP
    tfo                 [default]        OPENSSL_NO_TFO
    trace               [default]        OPENSSL_NO_TRACE
    unit-test           [default]        OPENSSL_NO_UNIT_TEST
    uplink              [no uplink_arch] OPENSSL_NO_UPLINK
    weak-ssl-ciphers    [default]        OPENSSL_NO_WEAK_SSL_CIPHERS
    zlib                [default]        OPENSSL_NO_ZLIB
    zlib-dynamic        [default]        OPENSSL_NO_ZLIB_DYNAMIC
    zstd                [default]        OPENSSL_NO_ZSTD
    zstd-dynamic        [default]        OPENSSL_NO_ZSTD_DYNAMIC
    ssl3                [default]        OPENSSL_NO_SSL3
    ssl3-method         [default]        OPENSSL_NO_SSL3_METHOD

Config target attributes:

    AR => "ar",
    ARFLAGS => "qc",
    CC => "gcc",
    CFLAGS => "-Wall -O0 -g",
    CXX => "g++",
    CXXFLAGS => "-Wall -O0 -g",
    HASHBANGPERL => "/usr/bin/env perl",
    RANLIB => "ranlib",
    RC => "windres",
    asm_arch => "aarch64",
    bn_ops => "SIXTY_FOUR_BIT_LONG RC4_CHAR",
    build_file => "Makefile",
    build_scheme => [ "unified", "unix" ],
    cflags => "-pthread",
    cppflags => "",
    cxxflags => "-std=c++11 -pthread",
    defines => [ "OPENSSL_BUILDING_OPENSSL" ],
    disable => [  ],
    dso_ldflags => "",
    dso_scheme => "dlfcn",
    enable => [ "afalgeng" ],
    ex_libs => "-ldl -pthread",
    includes => [  ],
    lflags => "",
    lib_cflags => "",
    lib_cppflags => "-DOPENSSL_USE_NODELETE",
    lib_defines => [  ],
    module_cflags => "-fPIC",
    module_cxxflags => undef,
    module_ldflags => "-Wl,-znodelete -shared -Wl,-Bsymbolic",
    perl_platform => "Unix",
    perlasm_scheme => "linux64",
    shared_cflag => "-fPIC",
    shared_defflag => "-Wl,--version-script=",
    shared_defines => [  ],
    shared_ldflag => "-Wl,-znodelete -shared -Wl,-Bsymbolic",
    shared_rcflag => "",
    shared_sonameflag => "-Wl,-soname=",
    shared_target => "linux-shared",
    thread_defines => [  ],
    thread_scheme => "pthreads",
    unistd => "<unistd.h>",

Recorded environment:

    AR = 
    BUILDFILE = 
    CC = 
    CFLAGS = 
    CPPFLAGS = 
    CROSS_COMPILE = 
    CXX = 
    CXXFLAGS = 
    HASHBANGPERL = 
    LDFLAGS = 
    LDLIBS = 
    OPENSSL_LOCAL_CONFIG_DIR = 
    PERL = 
    RANLIB = 
    RC = 
    RCFLAGS = 
    WINDRES = 
    __CNF_CFLAGS = 
    __CNF_CPPDEFINES = 
    __CNF_CPPFLAGS = 
    __CNF_CPPINCLUDES = 
    __CNF_CXXFLAGS = 
    __CNF_LDFLAGS = 
    __CNF_LDLIBS = 

Makevars:

    AR              = ar
    ARFLAGS         = qc
    CC              = gcc
    CFLAGS          = -Wall -O0 -g -Wall -Werror -pedantic
    CPPDEFINES      = FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION PEDANTIC
    CPPFLAGS        = 
    CPPINCLUDES     = 
    CXX             = g++
    CXXFLAGS        = -Wall -O0 -g -Wall -Werror -pedantic
    HASHBANGPERL    = /usr/bin/env perl
    LDFLAGS         = 
    LDLIBS          = 
    PERL            = /usr/bin/perl
    RANLIB          = ranlib
    RC              = windres
    RCFLAGS         = 
```_|_Bumps [actions/setup-python](https://github.com/actions/setup-python) from 4.3.0 to 4.3.1.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href="https://github.com/actions/setup-python/releases">actions/setup-python's releases</a>.</em></p>
<blockquote>
<h2>Improve error handling and messages</h2>
<p>In scope of this release we added improved error message to put operating system and its version in the logs (<a href="https://github-redirect.dependabot.com/actions/setup-python/pull/559">actions/setup-python#559</a>). Besides, the release</p>
<ul>
<li>fixes issue about <a href="https://github-redirect.dependabot.com/actions/setup-python/issues/518">specifying architecture for pypy-nightly on Windows</a> with related <a href="https://github-redirect.dependabot.com/actions/setup-python/pull/520">pull request</a>.</li>
<li>improves error handling for Http Errors (<a href="https://github-redirect.dependabot.com/actions/setup-python/pull/511">actions/setup-python#511</a>).</li>
<li>updates minimatch (<a href="https://github-redirect.dependabot.com/actions/setup-python/pull/558">actions/setup-python#558</a>).</li>
</ul>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/actions/setup-python/commit/2c3dd9e7e29afd70cc0950079bde6c979d1f69f9"><code>2c3dd9e</code></a> Add OS info to the error message (<a href="https://github-redirect.dependabot.com/actions/setup-python/issues/559">#559</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/76bbdfadd7792e54db5b82bd04a77913663d4dd6"><code>76bbdfa</code></a> Update minimatch (<a href="https://github-redirect.dependabot.com/actions/setup-python/issues/558">#558</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/1aafadcfb96443dc8b2c66d464369fad6ead5571"><code>1aafadc</code></a> Caching projects that use setup.py (<a href="https://github-redirect.dependabot.com/actions/setup-python/issues/549">#549</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/b80efd6bc5dcdc82c015d69ecd3e39320d0095e6"><code>b80efd6</code></a> Update to latest <code>actions/publish-action</code> (<a href="https://github-redirect.dependabot.com/actions/setup-python/issues/546">#546</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/5cddb278857fec730853802fad5126d9d78895d5"><code>5cddb27</code></a> Recommend setting python-version (<a href="https://github-redirect.dependabot.com/actions/setup-python/issues/545">#545</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/47c4a7af1d72897a511c975c95a5335bb6329dec"><code>47c4a7a</code></a> fix(ci): run <code>.github/workflows/workflow.yml</code> on ubuntu-20.04 (<a href="https://github-redirect.dependabot.com/actions/setup-python/issues/535">#535</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/af57b6499414c9dd25c305c7c008a5109c5a188f"><code>af57b64</code></a> Extend docu regarding rate limit issues. (<a href="https://github-redirect.dependabot.com/actions/setup-python/issues/510">#510</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/4818a5a1535387fb9d6e71f7ace82ad3b405804b"><code>4818a5a</code></a> Handle download HTTP error (<a href="https://github-redirect.dependabot.com/actions/setup-python/issues/511">#511</a>)</li>
<li><a href="https://github.com/actions/setup-python/commit/8bcd2560e267a43fbd8ff66c50da8a61825a0782"><code>8bcd256</code></a> Add architecture input check for PyPy for Windows platform (<a href="https://github-redirect.dependabot.com/actions/setup-python/issues/520">#520</a>)</li>
<li>See full diff in <a href="https://github.com/actions/setup-python/compare/v4.3.0...v4.3.1">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4.3.0&new-version=4.3.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>_|_Fixes #18145
_|_Partial cherry-pick of #19724.

Rather than computing the PSS salt length again in core using ossl_rsa_ctx_to_pss_string, which calls rsa_ctx_to_pss and computes the salt length, obtain it from the provider using the OSSL_SIGNATURE_PARAM_ALGORITHM_ID param to handle the case where the interpretation of the magic constants in the provider differs from that of OpenSSL core.

Add tests that verify that the rsa_pss_saltlen:max, rsa_pss_saltlen:<integer> and rsa_pss_saltlen:digest options work and put the computed digest length into the CMS_ContentInfo struct when using CMS. Do not add a test for the salt length generated by a provider when no specific rsa_pss_saltlen option is defined, since that number could change between providers and provider versions, and we want to preserve compatibility with older providers.

Signed-off-by: Clemens Lang <cllang@redhat.com>

Reviewed-by: Dmitry Belyavskiy <beldmit@gmail.com>
Reviewed-by: Tomas Mraz <tomas@openssl.org>
(Merged from https://github.com/openssl/openssl/pull/19724)

(cherry picked from commit 5a3bbe1712435d577bbc5ec046906979e8471d8b)

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_This is needed to cleanly cherry-pick #19729 to `openssl-3.1`,
adapting two references to the meanwhile renamed function `OSSL_CMP_CTX_set0_trusted{Store,}` like done in #19859.
_|_Fuzz checker CI: Use more generic include dir for fuzzer includes.

Cross compiles CI: Disable stringop-overflow warning on s390x and m68k

Run-checker merge CI: Replace no-shared with no-modules
_|_This fixes name mismatch on cherry-picking #19729 to 3.0.
If needed to do this way, should be urgent._|_storeutl wants to enforce the use of issuer and serial together, however the current code prevents to use them together and returns an error if only one of them is specified.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_commond ` LD_LIBRARY_PATH= openssl rsa -aes256 -passout stdin <<< "xxxxxx”` will get pass(fun` app_get_pass()`) from stdin first, and then load key(fun `load_key()`). but it unbuffer stdin before load key, this will cause the load key to fail. 

now unbuffer stdin before get pass, this will solve https://github.com/openssl/openssl/issues/19835

CLA: trivial_|_commond ` LD_LIBRARY_PATH= openssl rsa -aes256 -passout stdin <<< "xxxxxx”` will get pass(fun` app_get_pass()`) from stdin first, and then load key(fun `load_key()`). but it unbuffer stdin before load key, this will cause the load key to fail. 

now unbuffer stdin before get pass, this will solve https://github.com/openssl/openssl/issues/19835_|_We cannot dynamically load the legacy provider into an application
that is linked statically to libcrypto as this causes
a double loading of libcrypto (one static and one dynamic) and
on NonStop this leads to a segfault in atexit().

Fixes #17537
_|_Similar to #19322, but for the 3.1 branch._|_The KTLS test uses a TLSv1.2 cipher that uses ECDHE

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [X] tests are added or updated
_|_Fixes #19838

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes an overflow in SSL_get_shared_ciphers().
The return type of strlen() is size_of. If the length of c->name is over 2^31, the strcpy() in Ln.3236 will trigger a overflow. Furthermore, SSL_get_shared_ciphers is an exported functions. This represents a security issue for end user code that calls this function directly.

_|_Fixes #19825.
_|_A spurious printf was added to evp_test.c - probably for debugging purposes. This actually causes runtime errors in some cases because the name being printed can be NULL.

Fixes #19814

_|_It seems these APIs have negative return values and should not be checked by the unary operator.

Thank you for taking time to review.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_`evp_do_ciph_ctx_setparams` can return negative values.
`EVP_PKEY_get_int_param` does not have negative return values.
`EVP_CIPHER_CTX_get_original_iv` and `EVP_CIPHER_CTX_get_updated_iv` have negative reutrn values.

Thanks for taking time to review.


##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes https://github.com/openssl/openssl/issues/19812_|_Hi, dear maintainers. I found some inaccurate description in documents and patched them. Thanks for taking time to review.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [ ] tests are added or updated
_|_According to documentation [^1], the BUILD_METADATA from VERSION.dat should
be prefixed with a plus sign when used.  It is given this treatment in
Configure, but not in all other scripts that use VERSION.dat directly.
This change fixes that.
_|_Fixes #19810

We support `speed -mlock` option on Linux and Windows only, include the sys/mman.h only for Linux.
_|_The code path for this resource leak indicates that this is a false positive (if you look at the callers).
Rather than ignoring the warning an extra check has been added, in case future callers do the wrong thing.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated

There are no additional tests as this is a false positive.
_|_* fix detection of function body start
* detection of `#ifdef __cplusplus` used in header files
* fix statistics on whitespace and nesting issues

_|_Build breaking rebase mistake.

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_When investigating daily CI failure for no-chacha and no-poly1305 builds I've realized there is some inefficiency in the HPKE seal/open functions.
_|_This ports #19681 to `master`.

They differ exclusively for the CHANGES.md (same entry text, different position): in `master` we describe directly the differences from 3.0 to 3.2, skipping 3.1 altogether.

Fixes #16595 

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_`pthread_cancel()` and associated functions are not supported on Android. Therefore we do not call any of these functions when compiling for Android targets.

Fixes #19559

I've tested that this compiles using my local Android NDK - but I don't have a way of running the tests on Android in my local set up.

It's actually unclear why we need to call `pthread_setcancelstate()` or `pthread_setcanceltype()` at all since we never call `pthread_cancel()` anyway. An alternative fix might be simply to delete these lines altogether. Perhaps @ckalina has a view on that.
_|_CID 1517043 and 1517038: (Forward NULL) - Removed redundant check that is already done by the caller. It was complaining that it checked for ctlen == NULL and then did a goto that used this *ctlen.

CID 1517042 and 1517041: (Forward NULL) - Similar to above for ptlen in hpke_aead_dec()

CID 1517040: Remove unneeded logging. This gets rid of the warning related to taking the sizeof(&)

CID 1517039: Check returned value of  RAND_bytes_ex() in hpke_test

CID 1517038: Check return result of KEM_INFO_find() in OSSL_HPKE_get_recomended_ikmelen. Even though this is a false positive, it should not rely on the internals of other function calls.

Changed some goto's into returns to match OpenSSL coding guidelines. Removed Raises from calls to _new which fail from malloc calls.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated

Tests already exist. Most of these are false positives (first 2 were related to dead code)_|_Fixes #18631

The store lock does not prevent concurrent access to the property cache, because there are multiple stores.

We drop the newly created entry and use the exisiting one if there is one already.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Test for #19736

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_This is a follow-up of #19205, adding test cases as requested.

_|_The `OSSL_NELEM` changes merged recently broke the QUIC TXP PR. Since the CI had already run for QUIC TXP, this was not caught.

Urgent to fix build breakage._|_This is needed for building with `-march=i386 no-threads`, on platforms where libatomic is not available (djgpp, specifically).  The implementation now falls back to `CRYPTO_atomic_add()`, which performs plain lock-free addition in a `no-threads` build.

Needed for: #19307

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->
_|_Just a small typo fix._|_This is an initial version of a fuzzer for the quic client. I've been running it on top of #19734, but there are still some issues.

In ossl_quic_do_handshake() it doesn't get passed:
```
    if (BIO_ADDR_family(&qc->init_peer_addr) == AF_UNSPEC)
        /* Peer address must have been set. */
        return QUIC_RAISE_NON_NORMAL_ERROR(qc, ERR_R_PASSED_INVALID_ARGUMENT, NULL);
```

It's my  understanding that the BIO_s_dgram_mem() doesn't support that yet. Commenting that out doesn't really help much, it still doesn't seem to be able to complete a handshake, and it's currently unclear to me what needs to happen.

The (TLS) client fuzzer did just 1 big write with all the data from the fuzzer, I've changed that to multiple writes. That seems to have a very small change, but it's still not really doing anything. Can it handle that it receive an answer to a packet before the packet has been sent?

The following 2 asserts, as used in the (TLS) client fuzzer, fail:
```
    OPENSSL_assert(SSL_set_min_proto_version(client, 0) == 1);
    OPENSSL_assert(SSL_set_cipher_list(client, "ALL:eNULL:@SECLEVEL=0") == 1);
```_|_This is an initial version of a fuzzer for the quic client. I've been running it on top of #19734, but there are still some issues.

In ossl_quic_do_handshake() it doesn't get passed:
```
    if (BIO_ADDR_family(&qc->init_peer_addr) == AF_UNSPEC)
        /* Peer address must have been set. */
        return QUIC_RAISE_NON_NORMAL_ERROR(qc, ERR_R_PASSED_INVALID_ARGUMENT, NULL);
```

It's my  understanding that the BIO_s_dgram_mem() doesn't support that yet. Commenting that out doesn't really help much, it still doesn't seem to be able to complete a handshake, and it's currently unclear to me what needs to happen.

The (TLS) client fuzzer did just 1 big write with all the data from the fuzzer, I've changed that to multiple writes. That seems to have a very small change, but it's still not really doing anything. Can it handle that it receive an answer to a packet before the packet has been sent?

The following 2 asserts, as used in the (TLS) client fuzzer, fail:
```
    OPENSSL_assert(SSL_set_min_proto_version(client, 0) == 1);
    OPENSSL_assert(SSL_set_cipher_list(client, "ALL:eNULL:@SECLEVEL=0") == 1);
```_|_Not sure why it was there but certainly it is not needed. With 3.0 and above `no-gost` just disables the GOST support in libssl.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Cherry-pick from: https://github.com/openssl/openssl/pull/17547

When compiling openssl for tianocore compiling abs_val() and pow_10()
fails with the following error because SSE support is disabled:

crypto/bio/bio_print.c:587:46: error: SSE register return with SSE disabled

Fix that by using EFIAPI calling convention when compiling for UEFI.

EDK2 not support openssl-3.0, need fix it in openssl-1.1.1 also._|_There is no reason preventing this API to support SM2, which gives us a simple method to do SM2 key gen.


<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [ ] tests are added or updated
_|_Otherwise the alloca can cause an exception.

Issue reported by Jiayi Lin.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_This test had commands that assumes that runner_loop() is used to perform
the tests.  These tests still run fine because Unix accepts braces in file
names, but other operating systems might not.
_|_Do not accept password-based protection if signature-based is expected and no secret is available and 
do not accept signature-based protection if password-based is expected and no trust anchors available.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_Follow up of PR#19690

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
_|_CID 1516955 : Null pointer deref (REVERSE_INULL)
CID 1516954 : Null pointer deref (REVERSE_INULL)
CID 1516953 : RESOURCE_LEAK of child

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_<stdint.h> is C99, which means that on older compiler, it can't be included.
We have code in <openssl/e_os2.h> that compensates.
_|_Fixes #19691
_|_If PKCS8_pkey_set0 fails, the memory in rk need to be clear freed otherwise it is owned by the PKCS8_PRIV_KEY_INFO.

This was found by my error injection patch #18355 together with the new asn1 corpora #19669
see https://github.com/openssl/openssl/pull/19669#issuecomment-1316365655

this was already fixed in master/3.0 some 6 months ago._|_The values don't match those in include/openssl/sslerr.h

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Prevent weird hick-ups like:
```
Unmatched parentheses at include/openssl/asn1.h line 520

make[1]: *** [Makefile:4757: util/libcrypto.num] Error 255
make[1]: *** Waiting for unfinished jobs....
make: *** [Makefile:3387: build_sw] Error 2
```
during builds in case header files in `include/openss/` happen to have `\r\n` at line ends, 
which can happen when a `git clone` or `git checkout` gets the line end conversion wrong,
which can happen easily (by default?) on Windows Subsystem for Linux (WSL).

The issue can reproduced easily also on 'real' Linux by
```
unix2dos include/openssl/asn1.h.in
make -s -j
```

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Originally the code to im/export the EC pubkey was meant to be consumed only by the im/export functions when crossing the provider boundary.
Having our providers exporting to a COMPRESSED format octet string made sense to avoid memory waste, as it wasn't exposed outside the provider API, and providers had all tools available to convert across the three formats.

Later on, with #13139 deprecating the `EC_KEY_*` functions, more state was added among the params imported/exported on an EC provider-native key (including `OSSL_PKEY_PARAM_EC_POINT_CONVERSION_FORMAT`, although it did not affect the format used to export `OSSL_PKEY_PARAM_PUB_KEY`).

Finally, in #14800, `EVP_PKEY_todata()` was introduced and prominently exposed directly to users outside the provider API, and the choice of COMPRESSED over UNCOMPRESSED as the default became less sensible in light of usability, given the latter is more often needed by applications and protocols.

This commit fixes it, by using `EC_KEY_get_conv_form()` to get the point format from the internal state (an `EC_KEY` under the hood) of the provider-side object, and using it on `EVP_PKEY_export()`/`EVP_PKEY_todata()` to format `OSSL_PKEY_PARAM_PUB_KEY`.
The default for an `EC_KEY` was already UNCOMPRESSED, and it is altered if the user sets `OSSL_PKEY_PARAM_EC_POINT_CONVERSION_FORMAT` via `EVP_PKEY_fromdata()`, `EVP_PKEY_set_params()`, or one of the more specialized methods.

For symmetry, this commit also alters `ec_pkey_export_to()` in `crypto/ec/ec_ameth.c`, part of the `EVP_PKEY_ASN1_METHOD` for legacy EC keys: it exclusively used COMPRESSED format, and now it honors the conversion format specified in the `EC_KEY` object being exported to a provider when this function is called.

Fixes #16595 ("EVP_PKEY_todata exporting compressed EC public key")


##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixup for e8f1d76b50204d87a0ef7f6879eb1dd507a54368.

Fixes on-push CI failure on 3.1 branch. Marking urgent.
_|_Fixes #19673

_|_The providers indication should always indicate that this is not a legacy request.
This makes a check for engines redundant as the default return is that legacy is ok if there are no explicit providers.

Fixes #19662
_|_"openssl version -c" may create undefined behavior in the shift:

`crypto/info.c:42:50: runtime error: left shift of 4275712515 by 32 places cannot be represented in type 'long long int'`
_|_Fixes #19601

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Add missing test if make_ocsp_response failed.
This bug exist in openssl-1.* and openssl3.*
CLA: trivial_|_Followup from #19635 found by @slontis 

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_This updates a few certificates that were set to expire from 2035 to 2041, so just +/- 3 years around the magic year 2038_|_This reverts commit 9aa4be691f5c73eb3c68606d824c104550c053f7.

Fixes #19643
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->
There were no verification if fdopen returns NULL because it failed and then the FILE pointer was passed to fgets even though it could be NULL.
Fixes #19542

_|_EVP_PKEY_eq() is used to check, among other things, if a certificate public key corresponds to a private key. When the private key belongs to a provider that does not allow to export private keys this currently fails as the internal functions used to import/export keys ignored the selection given (which specifies that only the public key needs to be considered) and instead tries to export everything.

This patch allows to propagate the selection all the way down including adding it in the cache so that a following operation actually looking for other selection parameters does not mistakenly pick up an export containing only partial information.

- [x] Add new tests
- [x] Documentation updates

Fixes  #19637_|_Otherwise the powerbufLen can overflow.

Issue reported by Jiayi Lin.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated

Same as #19632 but for 1.1.1 - as this is security related although not an exploitable security issue we might want this on 1.1.1._|_The github rest calls are now under `.rest`.

The FIPS changed label is not being properly set now so marking urgent.
_|_We did not use libctx when generating the safe prime DH parameters.

It needs to be passed via BN_CTX.
_|_Otherwise the powerbufLen can overflow.

Issue reported by Jiayi Lin.
_|_We had two different macros for calculating the potential growth due to encryption. The macro we use for allocating the underlying buffer should be the same one that we use for reserving bytes for encryption growth.

Also if we are adding the MAC independently of the cipher algorithm then the encryption growth will not include that MAC so we should remove it from the amount of bytes that we reserve for that growth. Otherwise we might exceed our buffer size and the WPACKET_reserve operation will fail.

This is a backport of #19622 for 3.1/3.0.
<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_We had two different macros for calculating the potential growth due to encryption. The macro we use for allocating the underlying buffer should be the same one that we use for reserving bytes for encryption growth.

Also if we are adding the MAC independently of the cipher algorithm then the encryption growth will not include that MAC so we should remove it from the amount of bytes that we reserve for that growth. Otherwise we might exceed our buffer size and the WPACKET_reserve operation will fail.

This is urgent because it was included as part of #19516 which I over-enthusiastically merged when unfortunately there was a CI failure (unfortunately ready-to-merge was automatically applied anyway). There will need to be a backport because #19517 was previously merged to 3.0/3.1._|_Fixes #19589
##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Fixes #19520

The existing stream-based ZLIB compression does not close out the stream properly. This is incompatible with RFC1950.
Add a one-shot ZLIB compression method (as used with Brotli and Zstd) to do certificate compression.

This was found by tlsfuzzer.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The FIPS provider in master & 3.1 cannot pass the tests present in a 3.0 build.

This is a result of the removal of triple DES from the provider. The future removal of PKCS #1 v1.5 padding will exacerbate the failures further.

Fixes #19601

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_[RFC8879](https://datatracker.ietf.org/doc/html/rfc8879)
defines `CertificateCompressionAlgorithm` as a two-octet-wide enum:
```
       enum {
           zlib(1),
           brotli(2),
           zstd(3),
           (65535)
       } CertificateCompressionAlgorithm;
```

OpenSSL is reading them as one-octet-wide values though,
so that yet-unallocated values like 770 (0x302) or 16385 (0x4001)
are considered valid algorithms and result in compression negotiated and used.

@tmshort, please also double-check the width in other places,
I only gave it a cursory look.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_NOTE: Not Configurations/unix-Makefile.tmpl, as that was done 4 years
ago, in commit a23f03166e0ec49ac09b3671e7ab4ba4fa57d42a.

So far assembly modules were intended to be built as .pl->.S->.{asmext}
followed by .{asmext}->.o.  This posed a problem in build_all_generated
rule if it was executed on another computer, and also turned out to be
buggy, as .S was also translated to .{asmext} on Windows and VMS.
Both issues are fixed by changing the rule sequence to .pl->.S and then
.S->.s->.o, with the added benefit that the Windows and VMS build file
templates are more in sync with unix-Makefile.tmpl and slightly simpler.

Fixes #19594
_|_Fixes #19584
_|_This is a backport of #19517 to the 1.1.1 branch. Even though this is not a security defect per se, I would consider it hardening and therefore suitable for cherry-pick to 1.1.1.

Stitched ciphersuites can grow by more during encryption than the code allowed for. We fix the calculation and add an assert to check we go it right.

Note that this is not a security issue. Even though we can overflow the amount of bytes reserved in the WPACKET for the encryption, the underlying buffer is still big enough.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_##### Checklist
- [x] documentation is added or updated
- [x] tests are added or updated

CLA: trivial
_|_This should be trivially cherry-pickable to older branches - we just drop the updates of yml files or file chunks that aren't there.

If the cherry pick is more complicated, I'll create another PR._|_Not possible to hit but good to address.

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Properly handle the case where there is pending write data and we want
to send an alert.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_This is a development remnant, which should have been remove when finalized.

Fixes #19546
_|_In the ideal scenario, performance can reach up to 2.2X. But in single block input or CFB/OFB mode, CBC encryption, performance could drop about 50%.

Perf data on Kunpeng-920 2.6GHz hardware, before and after optimization:

Before:
type 16 bytes 64 bytes 256 bytes 1024 bytes 8192 bytes 16384 bytes
SM4-CTR 75318.96k 79089.62k 79736.15k 79934.12k 80325.44k 80068.61k
SM4-ECB 80211.39k 84998.36k 86472.28k 87024.93k 87144.80k 86862.51k
SM4-GCM 72156.19k 82012.08k 83848.02k 84322.65k 85103.65k 84896.43k
SM4-CBC 77956.13k 80638.81k 81976.17k 81606.31k 82078.91k 81750.70k
SM4-CFB 78078.20k 81054.87k 81841.07k 82396.38k 82203.99k 82236.76k
SM4-OFB 78282.76k 82074.03k 82765.74k 82989.06k 83200.68k 83487.17k

After:
type    16 bytes  64 bytes   256 bytes  1024 bytes 8192 bytes 16384 bytes
SM4-CTR 35678.07k 120687.25k 176632.27k 177192.62k 177586.18k 178295.18k
SM4-ECB 35540.32k 122628.07k 175067.90k 178007.84k 178298.88k 178328.92k
SM4-GCM 34215.75k 116720.50k 170275.16k 171770.88k 172714.21k 172272.30k
SM4-CBC 35645.60k 36544.86k  36515.50k  36732.15k  36618.24k  36629.16k
SM4-CFB 35528.14k 35690.99k  35954.86k  35843.42k  35809.18k  35809.96k
SM4-OFB 35563.55k 35853.56k  35963.05k  36203.52k  36233.85k  36307.82k

Signed-off-by: Xu Yizhou <xuyizhou1@huawei.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

_|_These two patches fix
 - a leak on PEM_write_bio_PrivateKey_traditional error patch (easily detectable with valgrind or address sanitizer).
 - check if EVP_PKEY is NULL and avoids segfault

Found by this (simplified) testcase:
```
#include <openssl/bio.h>
#include <openssl/pem.h>
#include <openssl/evp.h>

int main(int arc, char **argv)
{
	EVP_PKEY *pkey = NULL;
	EVP_PKEY_CTX *genctx = NULL;
	BIO *bio = NULL;

	bio = BIO_new_fp(stdout, BIO_NOCLOSE);
	if (!bio) {
		printf("BIO_new_fp failed\n");
		goto out;
	}

	genctx = EVP_PKEY_CTX_new_from_name(NULL, "ED448", NULL);
	if (!genctx) {
		printf("EVP_PKEY_CTX_new_from_name failed\n");
		goto out;
	}

	if (EVP_PKEY_keygen_init(genctx) != 1) {
		printf("EVP_PKEY_keygen_init failed\n");
		goto out;
	}

	if (EVP_PKEY_generate(genctx, &pkey) != 1) {
		printf("EVP_PKEY_generate failed\n");
		goto out;
	}

	/* Check leak in traditional output */
	PEM_write_bio_PrivateKey(bio, pkey, NULL, NULL, 0, 0, NULL);
	PEM_write_bio_PrivateKey_traditional(bio, pkey, NULL, NULL, 0, 0, NULL);

	/* Try pkey = NULL */
	PEM_write_bio_PrivateKey(bio, NULL, NULL, NULL, 0, 0, NULL);
	PEM_write_bio_PrivateKey_traditional(bio, NULL, NULL, NULL, 0, 0, NULL);

out:
	EVP_PKEY_CTX_free(genctx);
	EVP_PKEY_free(pkey);
	BIO_free_all(bio);

	return 0;
}
```

- [x] tests are added or updated
_|_Detected with -Werror.
Now the build and all tests pass through with asan, ubsan, -O2 and -Werror on gcc-11 and gcc-12.

Then we could add -Werror on all known compilers.

##### Checklist
- [x] tests are added or updated
_|_Fix #19524.

Looks like there's no test for cases of RSA and EC, please advice if I need to add test for this patch. Thanks.

A similar fix is also needed for 1.1.1, please let me know if this one looks good so I can backport.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_|uclen| is created from three byte values, so this seems a bit redundant, but if it makes coverity happy

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Stitched ciphersuites can grow by more during encryption than the code allowed for. We fix the calculation and add an assert to check we go it right.

Note that this is not a security issue. Even though we can overflow the amount of bytes reserved in the WPACKET for the encryption, the underlying buffer is still big enough.

Testing this is difficult. I would argue that the addition of the ossl_assert is sufficient for this. Adding a similar assert to 3.1 HEAD, but without the fix is enough to make the existing test suite fail.

This is a backport to 3.1/3.0 of one of the commits from #19516
<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The calculation of the maximum DTLS record overhead was incorrect which means that we could exceed the MTU in some situations. We fix the calculation to take account of more sources of record overhead. We ignore potential overheads due to expansion after compression. At the time we make the calculation we don't know how long the record will be yet. However we can't accurately calculate the expansion without knowing that length. Just using a fallback expansion value for the worst case scenario doesn't help because that value is too high and is bigger than our fallback MTU size.

Testing this was tricky. The best solution I've come up with is to add an assert into statem_dtls.c to verify that we never exceed the MTU. Without the fix in dtls_get_max_record_overhead() this causes the existing test suite to fail. With the fix the test suite still passes.

While investigating this problem I spotted and fixed a different but related problem in tls_common.c. We calculates the maximum amount of growth we might expect to see during an encryption operation and reserve that many bytes in the WPACKET. Unfortunately the calculation was wrong which means that the encryption can overflow the amount of bytes reserved for it. In practice this isn't really an issue because the underlying buffer is still sufficiently large. 
_|_Moving it one level up so it does not confuse CI.
_|_For some reason when I tried this before it worked. So retrying this again to see if it still works.
Not sure why it decided to fail once merged yet.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated_|_Fixes #19498

However the private key part is not optional which was mishandled by the legacy routine.

It would be nice to have a test for this however this needs an algorithm where the public key part is not there in the PKCS#8 file and is not autocomputed on import as done for EC keys.

oqsprovider tests will test it in future.
_|_Fixes #19488

Use the correct OSSL_PKEY_PARAM_RSA CRT names fior the self tests. The invalid names cause CRT parameters to be silently ignored.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [ ] tests are added or updated
_|_This backports #18639 and #19450 to the openssl-3.0 branch.

If it's fine with you folks, I'd like to do the same to 1.1.1 too, as ultimately these compilers are being used by distros, so we want to know if something breaks._|_Fixes CI regression on 3.0 branch from a cherry-picked commit.

Urgent to fix CI._|_There can be errors in the queue from previous tests and we look at it to verify we do not add spurious errors in these testcases.

Fixes #19477

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_We were taking a read lock. It should have been a write lock.

Fixes #19474

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Compiling with clang, --strict-warnings and enable-zlib-dynamic resulted in a compilation failure. This fixes it.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated

Currently `ossl_crypto_thread_native_terminate` is not required (neither for Argon2), remove it._|_The recent record layer refactor left SSL_alloc_buffers() and SSL_free_buffers() as no-ops. We make them work again.

While we are making changes to OSSL_RECORD_METHOD functions, we also remove a couple that were no-ops and never called.
_|_This test was disabled during the record write record layer refactor. We can now enable it again.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_With egd as the rand source the reseed after fork confuses the egd.

Fixes #19396

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Fixes #19437

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Back again with some more CI improvements!_|_Because dup_bio_err() can return a BIO chain when 'OPENSSL_SYS_VMS' is defined, it is better to use BIO_free_all() to release rather BIO_free()._|_In dup_bio_out() & dup_bio_err(), if BIO_new_fp() fails, we should just return NULL and do not need to further create other filter BIOs._|_While working on #19439 I noticed that there were multiple deprecation warnings for various out of date github actions. This dependabot job will automatically bump actions versions when new tags are created for the actions you consume._|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [X] tests are added or updated
_|_Links OpenSSL properly for the pyca test suite and prints more verbose information about the shared objects if people need to debug it again in the future._|_Multiple concurrent joins with a running thread suffer from a race condition that allows concurrent join calls to perform concurrent arch specific join calls, which is UB on POSIX, or to concurrently execute join and terminate calls.

As soon as a thread T1 exists, one of the threads that joins with T1 is selected to perform the join, the remaining ones await completion. Once completed, the remaining calls immediately return. If the join failed, another thread is selected to attempt the join operation.

Forcefully terminating a thread that is in the process of joining another thread is not supported.

Common code from thread_posix and thread_win was refactored to use common wrapper that handles synchronization.

This should fix the timeout encountered while executing threads test (likely due to test_thread_native_multiple_joins).

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_BN_CTX_end()-->BN_STACK_pop() may cause a null pointer reference.
Fixes #19428
_|_For some reason, parenthesis were added 8 years ago in commit a787c2590e468585a1a19738e0c7f481ec91b762. This essentially removed the \. and $ constructs from the middle branches. Hence a file called e.g. cert.key would accidentally match the (cer) rule.

CLA: trivial_|_Fixes #19396

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Finer grained error records for provider load/init failures

When a provider is activated, these three cases would record that the
provider init function failed (implying that it was called):

-   failure to load the provider module (in case it's a dynamically
    loadable module)
-   the init function not being present (i.e. being NULL)
-   the init function being called and returning an error indication
    (i.e. returning a false value)

This is confusing.

Separating the three cases so that they record different errors will
make it easier to determine causes of failure.
_|_Fixes #19410
_|_It was linking to the system openssl, not the version of openssl that we were trying to test.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_See Issue #19388.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_This is a backport of #19317 but for the 3.0 branch. It is essentially the same. There are differences in the 14-curves.cnf file - but this is an auto-generated file.
_|_Also avoid misleading users in the demo by use of the alias name.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_This partially reverts commit 30eba7f35983a917f1007bce45040c0af3442e42.
This is legitimate use of the stack functions and no error should be reported apart from the NULL return value.

Fixes #19389

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Fixes #19371

running config with 'enable-sctp' gave compiler errors._|_This happens rarely, but only because very few CI runs use the exotic CPU type that is necessary to execute anything within rsaz_exp_x2.c and enable UBSAN at the same time.

```
crypto/bn/rsaz_exp_x2.c:562:20: runtime error: load of misaligned address 0x612000022cc6 for type 'uint64_t' (aka 'unsigned long'), which requires 8 byte alignment 0x612000022cc6: note: pointer points here
 84 a3 78 e0 8e 8d  4a a5 51 9c 57 d0 d6 41  f3 26 d1 4e e1 98 42 b5  3a 9f 04 f1 73 d2 1d bf  73 44
             ^
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior crypto/bn/rsaz_exp_x2.c:562:20 in ../../util/wrap.pl ../../fuzz/server-test ../../fuzz/corpora/server => 1 not ok 2 - Fuzzing server
```

see for instance here:
https://github.com/bernd-edlinger/openssl/actions/runs/3228554288/jobs/5284801258_|_…call was successful"

This reverts commit 9249a34b076df9a9d55ab74ab465d336980cae6a. Fixes #19388

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This reverts commit 748df1874f0488ce0c86b6d2d083921abb34b1e3.
Fixes #19388

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_It turns out that initialization of `ctx->end_time` was missing for revocation and general message transactions, which mislead the timeout checks and error reporting.

Also fix related documentation.


_|_This is the 3.0 version of the fix.
    
Fixes #17995
Fixes #18578

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_This builds upon the test case from @bernd-edlinger in #18024.

The fix for 3.0 will need to be a separate PR as it won't merge cleanly.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Fixes openssl#19133

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [ ] tests are added or updated
_|_Also ASN1_OBJECT_free() never needs to be called on objects returned from OBJ_nid2obj().

Fixes #19138
_|_Run checker does a `no-chacha` build and tests fail because it can't be fetched.  This makes those tests pass again.

This was picked up by the daily run-checker tests.

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Apple LLVM has a different version numbering scheme than upstream LLVM.
That makes for quite a bit of confusion.

https://en.wikipedia.org/wiki/Xcode#Toolchain_versions to the rescue,
they have collected quite a lot of useful data.

This change is concentrated around the `$avx512ifma` flag

Fixes #16670 for the master branch
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [ ] tests are added or updated
_|_Apple LLVM has a different version numbering scheme than upstream LLVM.
That makes for quite a bit of confusion.

https://en.wikipedia.org/wiki/Xcode#Toolchain_versions to the rescue,
they have collected quite a lot of useful data.

This change is concentrated around the `$avx512ifma` flag

Fixes #16670 for OpenSSL 3.0
_|_Legacy EVP_PKEY_CTX objects did not support the "group" parameter for X25519 and X448.  The translation of this parameter resulted in an error.  This caused errors for legacy keys and engines.

Fix this situation by adding a translation that simply checks that the correct parameter is to be set, but does not actually set anything.  This is correct since the group name is anyway optional for these two curves.

Fixes #19313

Signed-off-by: Juergen Christ <jchrist@linux.ibm.com>

I could not find any tests for the translation.  Please provide me a hint where to search for these tests.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] tests are added or updated
_|_The way it was implemented didn't play well with perl's join(), so it's
reimplemented a bit differently.
_|_update rsa_set_ctx_params() so that the digest function used in the MGF1 construction is set correctly.

Fixes #19290

Testing:
scaro-axway gave code to reproduce the defect in the github issue. The code is supposed to set the rsa-oaep hash function to SHA2-256 and mgf1 hash function to SHA1.  Here is the code:

```c
  #include <openssl/evp.h>
  #include <openssl/core_names.h>
  #include <openssl/rsa.h>
  #include <stdio.h>

  void main(int argc, char **argv)
  {
    EVP_PKEY *key = EVP_RSA_gen(1024);
    EVP_PKEY_CTX *keyCtx = EVP_PKEY_CTX_new_from_pkey(0, key, 0);

    { // Set params
        int padding = RSA_PKCS1_OAEP_PADDING;
        OSSL_PARAM params[4];
        params[0] = OSSL_PARAM_construct_int(OSSL_SIGNATURE_PARAM_PAD_MODE, & padding);
        params[1] = OSSL_PARAM_construct_utf8_string(OSSL_ASYM_CIPHER_PARAM_OAEP_DIGEST,
                                                     SN_sha256, 0);
        params[2] = OSSL_PARAM_construct_utf8_string(OSSL_ASYM_CIPHER_PARAM_MGF1_DIGEST,
                                                     SN_sha1, 0);
        params[3] = OSSL_PARAM_construct_end();

        EVP_PKEY_encrypt_init_ex(keyCtx, params);
    }
    { // Read params
        OSSL_PARAM params[3];
        char       oaepmd[30] = { '\0' };
        char       mgf1md[30] = { '\0' };

        params[0] = OSSL_PARAM_construct_utf8_string(OSSL_ASYM_CIPHER_PARAM_OAEP_DIGEST,
                                                     oaepmd, sizeof(oaepmd));
        params[1] = OSSL_PARAM_construct_utf8_string(OSSL_ASYM_CIPHER_PARAM_MGF1_DIGEST,
                                                     mgf1md, sizeof(mgf1md));
        params[2] = OSSL_PARAM_construct_end();

        EVP_PKEY_CTX_get_params(keyCtx, params);
        printf("oaep = %s / mgf1 = %s\n", oaepmd, mgf1md);
    }
  }
```

before this commit:

```
  openssl/tmp$ make -B && ./issue-19290
  gcc -Wall -g -O0 -I../include -c issue-19290.c -o issue-19290.o
  gcc -Wall -g -O0 -I../include issue-19290.o ../libcrypto.a -o issue-19290
  oaep = SHA2-256 / mgf1 = SHA2-256
```

after this commit:

```
  openssl/tmp$ make -B && ./issue-19290
  gcc -Wall -g -O0 -I../include -c issue-19290.c -o issue-19290.o
  gcc -Wall -g -O0 -I../include issue-19290.o ../libcrypto.a -o issue-19290
  oaep = SHA2-256 / mgf1 = SHA1
```
<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #19334
_|_Fixes #19331
_|_VMS linking complains a lot about multiply defined symbols unless told
otherwise, especially when shareable images are involved.  For example, this
involves the legacy provider, where there are overriding implementations of
certain ERR functions.

To quiet the linker down, we need to say that symbols should be searched
selectively in shareable images.

However, that's not quite enough.  The order in which the VMS linker
processes files isn't necessarily top to bottom as given on the command line
or the option file(s), which may result in some symbols appearing undefined,
even though they are.  To remedy that, it's necessary to explicitly include
all object files and object libraries into a cluster, thus ensuring that
they will be processed first.  This allows the search for remaining symbol
references to be done in the as desired in the shareable images that follow.

-----

This corrects another failure to build on VMS
_|_This resolves all errors that occur with `--strict-warnings`.  See individual commit messages for details.

Needed for #19307.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->
_|_The IRIX mips64-cpu, n32-abi configurations include SIXTY_FOUR_BIT in bn_ops, but it is missing from mips64*-linux-*abin32 (which OpenSSL calls "linux-mips64").  This causes heap corruption when verifying TLS certificates (which tend to be RSA-signed) with openssl 1.1.1q:

```
nix@oak:~$ /nix/store/4k04dh6a1zs6hxiacwcg4a4nvxvgli2j-openssl-mips64el-unknown-linux-gnuabin32-1.1.1q-bin/bin/openssl s_client -host www.google.com -port 443free(): invalid pointer
Aborted
```

and a slightly different failure with current HEAD:

```
nix@oak:~$ /nix/store/9bqxharxajsl9fid0c8ls6fb9wxp8kdc-openssl-mips64el-unknown-linux-gnuabin32-1.1.1q-bin/bin/openssl s_client -host www.google.com -port 443
Connecting to 142.250.180.4
CONNECTED(00000003)
Fatal glibc error: malloc assertion failure in sysmalloc: (old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)
Aborted
```

Applying this patch and recompiling produces the expected output instead of a crash.

Note that Gentoo (and to my knowledge all other other distributions which support mips64n32) use the `linux-generic32` configuration, which uses only 32-bit arithmetic (rather than full 64-bit arithmetic) and lacks assembler implementations for the SHA hash functions:

  https://gitweb.gentoo.org/repo/gentoo.git/tree/dev-libs/openssl/files/gentoo.config-1.0.2#n102

For support in nixpkgs we would like to use the full 64-bit integer registers and perlasm routines, so I'm submitting this upstream as well.

Fixes #19319_|_We should never send or accept a key share group that is not in the
supported groups list or a group that isn't suitable for use in TLSv1.3.

Currently if we put a TLSv1.2 group at the top of the groups list, but we only request TLSv1.3, then the supported groups list will only include TLSv1.3 groups, but the key_share will use a TLSv1.2 group. This results in the server failing with an invalid parameter alert.

server:
````
openssl s_server  -tls1_3
````
client:
````
openssl s_client -tls1_3 -groups prime192v1:P-256 -cipher DEFAULT:@SECLEVEL=1
````

This PR is based on #19315 and includes those commits - hence this PR is draft. I will take it out of draft once #19315 has been merged._|_BN_check_prime() is supposed to return 0 for a composite number and -1 on error. Properly translate the return value of the internal function ossl_bn_miller_rabin_is_prime(), where 0 means an error.

The confusion prevented BN_GENCB callbacks from aborting the primality test or key generation routines utilizing this.

This patch applies to 3.0 and master.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_We use memset() instead.

This fixes Compiler ZOO CI failures on older clang versions._|_Problem is observed when running `quic_record_test` on Windows.
The test would lead to calling `safe_mul_time()` with `b = 0` and MSVC runtime would raise the divide by 0 exception.

CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
_|_WIN32 defines `how` options for `shutdown()` in their own way.
This fix defines `SHUT_RD` and `SHUT_RD` based on WIN32 equivalents.

CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
_|_Since `OPENSSL_malloc()` and friends report `ERR_R_MALLOC_FAILURE`, and at least handle the file name and line number they are called from, there's no need to report `ERR_R_MALLOC_FAILURE` where they are called directly, or when `SSLfatal()` and `RLAYERfatal()` is used, the reason `ERR_R_MALLOC_FAILURE` is changed to `ERR_R_CRYPTO_LIB`.

There were a number of places where `ERR_R_MALLOC_FAILURE` was reported even though it was a function from a different sub-system that was called.  Those places are changed to report `ERR_R_{lib}_LIB`, where `{lib}` is the name of that sub-system.
Some of them are tricky to get right, as we have a lot of functions that belong in the ASN1 sub-system, and all the `sk_` calls or from the CRYPTO sub-system.

Some extra adaptation was necessary where there were custom `OPENSSL_malloc()` wrappers, and some bugs are fixed alongside these changes.
Most notably, `CRYPTO_secure_malloc()` has been changed to also raise `ERR_R_MALLOC_FAILURE` when appropriate.

This is an alternative to #19072

_|_If a custom EVP_CIPHER object has been passed to EVP_CipherInit() then it
should be used in preference to a fetched cipher.

We also fix a possible NULL pointer deref in the same code for digests.

If the custom cipher passed to EVP_CipherInit() happens to use NID_undef
(which should be a discouraged practice), then in the previous
implementation this could result in the NULL cipher being fetched and
hence NULL encryption being unexpectedly used.

CVE-2022-3358

Fixes #18970

Note that this has been assessed as a low severity security issue. As per our policy, since it is low, it is being fixed in public and will be included in the next release.

We also fix a bug where the cleanup function for an EVP_CIPHER was not always being called when it should, which was highlighted by writing the test for the original issue._|_If a custom EVP_CIPHER object has been passed to EVP_CipherInit() then it
should be used in preference to a fetched cipher.

We also fix a possible NULL pointer deref in the same code for digests.

If the custom cipher passed to EVP_CipherInit() happens to use NID_undef
(which should be a discouraged practice), then in the previous
implementation this could result in the NULL cipher being fetched and
hence NULL encryption being unexpectedly used.

CVE-2022-3358

Fixes #18970

Note that this has been assessed as a low severity security issue. As per our policy, since it is low, it is being fixed in public and will be included in the next release.

We also fix a bug where the cleanup function for an EVP_CIPHER was not always being called when it should, which was highlighted by writing the test for the original issue._|_This fixes regression from commit 8e39049.

Fixes #19297
_|_Fixes openssl#19185

The same code related to format checking is on several places, maybe it would be better to have just one place, `bio.h.in` and not undef macro `ossl_bio__attr__` there.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Managed to reproduce the test segfault. This appears to be the cause of the CI failures._|_- OpenSSL::config: determine the MSVC target architecture by asking cl
- OpenSSL::config: Fix VMS guesses
- OpenSSL::config: Fix trivial bugs

Please read the commit messages for details.

Fixes #19281, and more.
_|_Fixes Compiler ZOO CI test failures and the stochastic test_bio_dgram failure.

Urgent as these are CI failures.
_|_Fixes https://github.com/openssl/openssl/issues/19279

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] tests are added or updated
_|_The IKM was not respected by the s390x specific implementations of X25519 and X448 keygen.  This caused test failures and wrong results if the PCC instruction was actually available and supported X25519 and/or X448.

Fixes: 78c44b05945b ("Add HPKE DHKEM provider support for EC, X25519 and X448.")
Signed-off-by: Juergen Christ <jchrist@linux.ibm.com>
_|_Carved out of #19271.

This is a fixup of #19096.
I wonder why the
```
test/trace_api_test.c:70:13: error: function declaration isn't a prototype [-Werror=strict-prototypes]
   70 | static void put_trace_output()
      |             ^~~~~~~~~~~~~~~~
test/trace_api_test.c:78:12: error: function declaration isn't a prototype [-Werror=strict-prototypes]
   78 | static int test_trace_channel()
      |            ^~~~~~~~~~~~~~~~~~
cc1: all warnings being treated as errors
```
got unnoticed, which occurs when configuring with `--strict-warnings -std=gnu90`.
_|_More adaptations are needed for sources in ssl/, which all include
`ssl/ssl_local.h`.
_|_Fix two Coverity resource leak issues: CID 1515538 & 1515540.


- [ ] documentation is added or updated
- [x] tests are added or updated
_|_I tried cross-compiling the current `master` branch for djgpp and ran into some
errors.  This patch set aims to solve those.

On each commit I specified `CLA: trivial`, since they are small tweaks and do
not introduce any new features.  Only build errors are fixed.

Remaining issues:
* `test/rsa_complex.c` does not compile due to missing header `<complex.h>`.
* Linking is only possible when compiled with `-march=i486` or better, due to
  missing atomic instructions on i386 (these are compiled to libatomic calls,
  which are also missing).  Is it safe to define `-DOPENSSL_DEV_NO_ATOMICS`
  here, given that we have no (native) pre-emptive threads?

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->
_|_Address the insufficient IPAddressFamily checking #18526 

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Adding extensions is fragile, with the TLSEXT_TYPE entry needing to be located at TLSEXT_IDX in the array.

This adds a test to ensure extensions are in the correct order.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [X] tests are added or updated
_|_Fixes #19267._|_Fixes openssl#19003

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_While talking about the QUIC record layer, I noticed that I didn't impose any limit on the number of deferred datagrams we buffer. This could allow a malicious peer to deliberately avoid sending packets which would cause the next EL to become ready, then send us an infinite number of packets we can't yet decrypt. This fixes that and allows a limit to be imposed.
_|_If we can't construct the ticket don't send one. This requires a change
to the TLS state machine to be able to a handle a construction function
deciding not to send a message after all.

Fixes #18977

This is a backport of #18990 to the 3.0 branch. It does not include the commit from that PR which introduces a new enum because that change is probably too invasive for 3.0._|_Newly computed traffic secrets are now logged upon key update.
Straight forward code change.

One point for discussion however:
- SERVER_APPLICATION_LABEL (and CLIENT_APPLICATION_LABEL respectively) have a _0 postfix for the intial traffic key
- Should this postfix be incremented on key update? If so, there probably is the need for a new ssl variable, tracking the number of key updates - as this is no knowledge the tls13_key_update method currently has (or needs)

[Tests]
Test suites run fine under windows 32/64.
I was unable too find any tests directed at the entire callback / logging feature, so not sure were to start._|_The BIO_ctrl_(w)pending() functions did not check for negative returns of underlying BIO_ctrl() call and cast it to size_t.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
_|_
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_
- [x] tests are added or updated
_|_Fixes #19227

The documentation incorrectly said stdin should be hexadecimal. Code incorrectly switched to FORMAT_TEXT when using stdin.
Documentation and code updated to reflect reality.

##### Checklist
- [x] documentation is added or updated

_|_Fixes openssl#19162.

I revisited the code and it looks that `sk_SSL_CIPHER_value` should not return `NULL`. But these checks with assert make it more obvious. 

There are other places that iterate over all ciphers' indexes, but they are more internal, so probably no need to add these checks.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_It turns out that my recent implementation of `CMS_EnvelopedData_decrypt()` in #18301 was somewhat mislead
* by the `set1_` part of the function name `CMS_decrypt_set1_password()` and 
* mostly by the fact that all the `CMS_decrypt*()` functions were insufficiently documented.

The reviewers did not notice presumably for the same reason(s).
Both the function and the docs are fixed by this PR, pointing out the potential pitfall.

The catch is that all `CMS_decrypt*()` functions do not only set/use decryption credentials 
but actually attempt decryption (unless `CMS_decrypt()` is called with a NULL `pkey` argument)
and this will fail if not just the right type of decryption key (symmetric or asymmetric) is provided.

BTW, this CMS API is (needlessly) limited in case the recipient does not know which decryption credential to use, which may be asymmetric and/or symmetric. So it could be helpful to provide both, in case it is unclear which type of encryption the peer used.

In the original implementation of `CMS_EnvelopedData_decrypt()` I had assumed that both types of decryption keys can be provided at the same time, but this not only lead to the error(s) quoted here:
```
...:CMS routines():crypto/cms/cms_smime.c:776: ERROR: no matching recipient
...:OSSL_CRMF_ENCRYPTEDKEY_get1_pkey():crypto/crmf/crmf_lib.c:717: ERROR: error decrypting encryptedkey
...:ossl_cmp_certresponse_get1_cert_key():crypto/cmp/cmp_msg.c:1102: ERROR: failed extracting central gen key
...:get1_cert_key_status():crypto/cmp/cmp_client.c:457: ERROR: certificate not found:; cannot extract certificate from response
...
```
but also to a tricky memory leak:
```
=================================================================
==1366017==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 48 byte(s) in 1 object(s) allocated from:
    #0 0x7f03d5997e8f in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145
    #1 0x7f03d54312a4 in CRYPTO_malloc crypto/mem.c:196
    #2 0x7f03d5330f59 in ossl_cms_RecipientInfo_pwri_crypt crypto/cms/cms_pwri.c:378
    #3 0x7f03d532b40d in CMS_RecipientInfo_decrypt crypto/cms/cms_env.c:1016
    #4 0x7f03d5336c1a in CMS_decrypt_set1_password crypto/cms/cms_smime.c:831
    #5 0x7f03d5801295 in CMS_EnvelopedData_decrypt crypto/crmf/crmf_lib.c:983
    #6 0x7f03d57ff750 in OSSL_CRMF_ENCRYPTEDKEY_get1_pkey crypto/crmf/crmf_lib.c:714
    #7 0x7f03d5819d2a in ossl_cmp_certresponse_get1_cert_key crypto/cmp/cmp_msg.c:1096
    #8 0x7f03d5821709 in get1_cert_key_status crypto/cmp/cmp_client.c:455
    #9 0x7f03d5822325 in cert_response crypto/cmp/cmp_client.c:578
    #10 0x7f03d5823241 in OSSL_CMP_exec_certreq crypto/cmp/cmp_client.c:726
    ...

SUMMARY: AddressSanitizer: 48 byte(s) leaked in 1 allocation(s).
```
which is fixed - hopefully in a sufficient way - by this PR, too._|_
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Otherwise, further `OSSL_CMP_exec_GENM_ses()` calls go wrong.

_|_Fixes #19212
_|_In perl, this may be ambiguous:

    fn (expr1), expr2

Is the comma (which may be `=>` just as well in this case) a separator
between arguments to `fn`, or is it the comma operator, separating the
expressions `fn(expr1)` and `expr2`?  It appears that in this particular
case, perl takes the existing parentheses to mean the latter.  When the
former was intended, extra parentheses are required.

Fixes #19209
_|_So far, there was no clarity at which stage a request went wrong, in particular, already on request construction or during the transaction/transmission.
Moreover, for `genm`/`genp` exchanges the client could not distinguish whether something went wrong or the server responded with an empty list of `InfoTypeAndValue`.

On this occasion, replace magic constants by mnemonic ones.
Update doc accordingly.

Update: also fix handling of unset or missing `failInfo` PKI status information_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

 fix https://github.com/openssl/openssl/issues/19196
_|_This PR is to address the CI failures when running 3.0.x against the validated 3.0.0 FIPS provider.
Adding additional test cases is separate.

Fixes #19171

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_It makes little sense to forbid adding a cert that was already present
and just causes trouble in case multiple cert sources are combined.

(Side note: After correcting this, the error reason `CMS_R_CERTIFICATE_ALREADY_PRESENT` becomes unused. Yet for strict API compatibility I think we cannot remove it.)

Update doc accordingly and remove the wrong statement that a CRL must not be added twice. 

On this occasion also add checks on failing cert/CRL up_ref calls and improve coding style._|_Properly fallback to the default implementation on CPUs missing necessary instructions.

Fixes #19163
_|_In `include/internal/sockets.h` it says that you can disable IPv6, and only defines `OPENSSL_USE_IPV6` (to 0 or 1) if it's not already defined.

The codebase generally then checks `#if OPENSSL_USE_IPV6`.

However, test_bio_dgram uses `#if defined(OPENSSL_USE_IPV6)` which means it tries to test IPv6 even if it's explicitly configured out with -DOPENSSL_USE_IPV6=0 (`#if defined(OPENSSL_USE_IPV6)` is always true).

This fixes that.

Change-Id: Ie1641c9dd654f27f3bdca186517df5599ad1059b
_|_This reverts the adaptations to ~`generate_crypto_objects`~ `Configurations/unix-Makefile.tmpl` (except for additions to `.PHONY`) that were done by commit 89c39bd8f6528ad268c1c0d0c9e196ba4396941b in #15224.

This ~is supposed to fix~ most likely fixes #19087.
_|_This is supposed to fix #19087, as discussed there._|_We automatically dropped Initial keys when receiving a Handshake packet, but did this regardless of whether the packet was successfully decrypted and authenticated. Per the RFC, we should only drop Initial keys when successfully processing a Handshake packet._|_In ssl_cipher_process_rulestr(), if rule_str ended in a "-", "l" was incremented one byte past the end of the buffer.  This resulted in an out-of-bounds read when "l" is dereferenced at the end of the loop.  The trivial fix is to only increment "l" if the last byte read is not a NUL.

CLA: trivial
_|_Fixes #19156._|_Derivation via ecx-methods did not properly set the length.  Make the code more similar to common code and set the length property.

Signed-off-by: Juergen Christ <jchrist@linux.ibm.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Fix the gcc build warning from conf_sap.c:
variable flags set but not used [-Wunused-but-set-variable] 
variable appname set but not used [-Wunused-but-set-variable] 
variable filename set but not used [-Wunused-but-set-variable]

Signed-off-by: Gang Chen <gang.c.chen@intel.com>

_|_Coverity is being pretty silly here but adding the explicit pointer checks will stop a crash if something goes badly awry and is probably good practice.

Fixes Coverity 1513706 - 1513709

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_The 'struct in_pktinfo' doesn't have a 'ipi_spec_dst' field on windows
OS which break cygwin builds of OpenSSL.

Signed-off-by: Tristan Lelong <tlelong@google.com>
_|_This fixes the build failure seen here: https://ci.buildbot.openssl.org/#/builders/11/builds/2_|_Use binary mode when opening a file.

Partially fixes #18017.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_In multi-mode, speed fork()s off several children but does not wait for them.
On Linux, this leads to wrong accounting information of getrusage used by
tools to extract running time and page faults.

Wait for every children and check the return code and termination signal.

Signed-off-by: Juergen Christ <jchrist@linux.ibm.com>
_|_This is a variant of #18879 for 3.0 and master, rebasing that PR from 1.1.1.

On this occasion, I added a further commit that to add some NULL parameter checks and improve coding style in `crypto/x509/{x509_req,x_all}.c`._|_Fixes #18183.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_As requested in https://github.com/openssl/openssl/pull/14833#issuecomment-1228069310, this ~is an extension of #14833 with a further commit that~ replaces 
all `ERR_raise(ERR_LIB_FOO, ERR_R_MALLOC_FAILURE)` calls
by `ERR_raise(ERR_LIB_FOO, ERR_R_CRYPTO_LIB)`.

It does this change also for `SSLfatal()` and `RLAYERfatal()` calls ~, `ECerr()`, `EVPerr()`,~ as well as for the (legacy engine) `CAPIerr()` and `ATTICerr()`  calls.

On this occasion, it also adapts remnant `ECerr()` and `EVPerr()` calls in `crypto/` to `ERR_raise()`._|_When a server responds to a second TLSv1.3 ClientHello it is required to
set the legacy_record_version to 0x0303 (TLSv1.2). The client is required
to ignore that field even if it is wrong. The recent changes to the read
record layer in PR #18132 made the record layer stricter and it was
checking that the legacy_record_version was the correct value. This
caused connection failures when talking to buggy servers that set the
wrong legacy_record_version value.

We make us more tolerant again.

Fixes #19051
_|_The default cross compiler (gcc 9.4.0) for ppc64le on Ubunut 20.04 seems
buggy and causes a seg fault in sslapitest. This doesn't impact any other
CI cross compile platforms and does not seem to impact the gcc 10.3.0 cross
compiler.

We just drop the optimisation level on that platform.
_|_
- [x] documentation is added or updated
- [ ] tests are added or updated
_|_There was a copy & paste error in the definition of the
rlayer_skip_early_data callback. The return type is supposed to
be "int" but it was defined as a pointer type. This was causing
test failures on some platforms.

Fixes #19037

_|_**Back port to 3.0 because it fixes an error in test-test.**

test: placate Clang's --Wbitwise-instead-of-logical

```
test/test_test.c:58:9: note: cast one or both operands to int to silence this warning
test/test_test.c:58:9: error: use of bitwise '|' with boolean operands [-Werror,-Wbitwise-instead-of-logical]
    if (!TEST(1, TEST_uint_eq(3u, 3u))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
test/test_test.c:58:9: note: cast one or both operands to int to silence this warning
```

Originally the fix for #18639

Fixes #19024

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_PR #19031 updated options that that were listed as commands, these
options were already in openssl-list.pod.in, so they are redundant
in openssl.pod.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes make doc-nits issue caused by PR#19031.

Urgent because the check-docs CI build is broken.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
_|_The problem is an `int` to `size_t` conversion where the `int` could be negative.
Changing the variable to `int` addresses things.  The less equal to zero check was already there._|_Leak sanitizer reports following leak for ssl-test-new subtest
4-tlsv1_2-both-compress:

==335733==ERROR: LeakSanitizer: detected memory leaks
Direct leak of 17728 byte(s) in 1 object(s) allocated from:
    #0 0x3ff9fbba251 in malloc (/usr/lib64/libasan.so.8+0xba251)
    #1 0x3ff9f71744f in tls_do_uncompress ssl/record/methods/tls_common.c:868
    #2 0x3ff9f7175bd in tls_default_post_process_record ssl/record/methods/tls_common.c:896
    #3 0x3ff9f715ee7 in tls_get_more_records ssl/record/methods/tls_common.c:773
    #4 0x3ff9f712209 in tls_read_record ssl/record/methods/tls_common.c:958
    #5 0x3ff9f6ef73f in ssl3_read_bytes ssl/record/rec_layer_s3.c:1235
    #6 0x3ff9f776165 in tls_get_message_header ssl/statem/statem_lib.c:1198
    #7 0x3ff9f74709b in read_state_machine ssl/statem/statem.c:624
    #8 0x3ff9f74709b in state_machine ssl/statem/statem.c:478
    #9 0x3ff9f662e61 in SSL_do_handshake ssl/ssl_lib.c:4430
    #10 0x100c55d in do_handshake_step test/helpers/handshake.c:775
    #11 0x100c55d in do_connect_step test/helpers/handshake.c:1134
    #12 0x100e85b in do_handshake_internal test/helpers/handshake.c:1544
    #13 0x1011715 in do_handshake test/helpers/handshake.c:1738
    #14 0x101d1a7 in test_handshake test/ssl_test.c:543
    #15 0x1027875 in run_tests test/testutil/driver.c:370
    #16 0x1008393 in main test/testutil/main.c:30
    #17 0x3ff9cc2b871 in __libc_start_call_main (/usr/lib64/libc.so.6+0x2b871)
    #18 0x3ff9cc2b94f in __libc_start_main_alias_2 (/usr/lib64/libc.so.6+0x2b94f)
    #19 0x100864f  (/code/openssl/test/ssl_test+0x100864f)
Direct leak of 17728 byte(s) in 1 object(s) allocated from:
    #0 0x3ff9fbba251 in malloc (/usr/lib64/libasan.so.8+0xba251)
    #1 0x3ff9f71744f in tls_do_uncompress ssl/record/methods/tls_common.c:868
    #2 0x3ff9f7175bd in tls_default_post_process_record ssl/record/methods/tls_common.c:896
    #3 0x3ff9f715ee7 in tls_get_more_records ssl/record/methods/tls_common.c:773
    #4 0x3ff9f712209 in tls_read_record ssl/record/methods/tls_common.c:958
    #5 0x3ff9f6ef73f in ssl3_read_bytes ssl/record/rec_layer_s3.c:1235
    #6 0x3ff9f776165 in tls_get_message_header ssl/statem/statem_lib.c:1198
    #7 0x3ff9f74709b in read_state_machine ssl/statem/statem.c:624
    #8 0x3ff9f74709b in state_machine ssl/statem/statem.c:478
    #9 0x3ff9f662e61 in SSL_do_handshake ssl/ssl_lib.c:4430
    #10 0x100c55d in do_handshake_step test/helpers/handshake.c:775
    #11 0x100c55d in do_connect_step test/helpers/handshake.c:1134
    #12 0x1010b09 in do_handshake_internal test/helpers/handshake.c:1550
    #13 0x1011715 in do_handshake test/helpers/handshake.c:1738
    #14 0x101d1a7 in test_handshake test/ssl_test.c:543
    #15 0x1027875 in run_tests test/testutil/driver.c:370
    #16 0x1008393 in main test/testutil/main.c:30
    #17 0x3ff9cc2b871 in __libc_start_call_main (/usr/lib64/libc.so.6+0x2b871)
    #18 0x3ff9cc2b94f in __libc_start_main_alias_2 (/usr/lib64/libc.so.6+0x2b94f)
    #19 0x100864f  (/code/openssl/test/ssl_test+0x100864f)
SUMMARY: AddressSanitizer: 35456 byte(s) leaked in 2 allocation(s).

Fix this by freeing the SSL3_RECORD structure inside the OSSL_RECORD_LAYER.

Signed-off-by: Juergen Christ <jchrist@linux.ibm.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

_|_To avoid reports like: #19028
_|_#19004 back ported to 3.0
_|_#19004 back ported to 1.1.1

_|_Add test/timing_load_creds

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_
tasn_add was added after 3.0 was released and isn't available.
This prevents builds from working, so urgent.

The change to tsan_store still achieves the goal of this original fix.
_|_Fixes: #18992

The patch moves the notify check to after the no time check

CLA: trivial
_|_Various TLS time_t use fixes for problems that will happen when the low 32 bits of time_t rolls over.

I've flagged this for all supported branches but it might be better to refactor master to use OSSL_TIME instead of persisting with time_t.  That's too much change for 3.0 and 1.1.1.
_|_The current code has issues when `sizeof(long) <> sizeof(size_t)`.  The two types are assumed to be interchangeable and them being different will cause crashes and endless loops.

This fix limits the maximum chunk size for many of the symmetric ciphers to 2³⁰ bytes.  This chunk size limits the amount of data that will be encrypted/decrypted in one lump.  The code internally handles blocks of data later than the chunk limit, so this will present no difference to the caller.  Any loss of efficiency due to limiting the chunking to 1 Gbyte rather than more should be insignificant.

Fixes Coverity issues: 1508498, 1508500 - 1508505, 1508507 - 1508527, 1508529 - 1508533, 1508535 - 1508537, 1508539, 1508541 - 1508549, 1508551 - 1508569, 1508571 - 1508582.

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Second version: just the relevant parts of e0e338c8c50c226efc92fe79c788c9cdc03fc01f

Out of range values could possibly be returned due to a lack of range checking.
Very unlikely to be exploitable for our provider because sensible values are
returned for all ciphers.

Also fixed the defaulting code so that the cipher's IV length is returned if
the cipher ctx doesn't support getting.

Fixes #18947
_|_First version all of b30b45b7247d056b569e2b5139f8b503d36e646c and e0e338c8c50c226efc92fe79c788c9cdc03fc01f (i.e. align 3.0 with master).

Out of range values could possibly be returned due to a lack of range checking.
Very unlikely to be exploitable for our provider because sensible values are
returned for all ciphers.

Also fixed the defaulting code so that the cipher's IV length is returned if
the cipher ctx doesn't support getting.

Fixes #18947
_|_If we can't construct the ticket don't send one. This requires a change
to the TLS state machine to be able to a handle a construction function
deciding not to send a message after all.

Fixes #18977

This fix is for master only. It's probably too invasive to be suitable for backport to 3.0/1.1.1. I think I can create a version for those branches without the last commit that introduces the new return type - which should hopefully much restrict the amount of code touched._|_This is a backport of #18868 to the 1.1.1 branch.

If app data is received before a Finished message in DTLS then we buffer
it to return later. The function SSL_pending() is supposed to tell you
how much processed app data we have already buffered, and SSL_has_pending()
is supposed to tell you if we have any data buffered (whether processed or
not, and whether app data or not).

Neither SSL_pending() or SSL_has_pending() were taking account of this
DTLS specific app data buffer._|_This is a backport of #18868 to the 3.0 branch.

If app data is received before a Finished message in DTLS then we buffer
it to return later. The function SSL_pending() is supposed to tell you
how much processed app data we have already buffered, and SSL_has_pending()
is supposed to tell you if we have any data buffered (whether processed or
not, and whether app data or not).

Neither SSL_pending() or SSL_has_pending() were taking account of this
DTLS specific app data buffer.
_|_The documentation was misleading in that it suggests that the `OPENSSL_MALLOC_FD` environment variable will record information about all allocations. While this is true it doesn't record the most useful information that you might expect such as the requested size of the allocation! It is mainly for use in conjunction with `OPENSSL_MALLOC_FAILURES`, and reports information about what chance an allocation has of failing.

Additionally we fix the return codes for the `CRYPTO_mem_debug_push()` and `CRYPTO_mem_debug_pop()` functions. Those 2 functions historically only ever returned 0 or 1. In OpenSSL 3.0 they were made no-ops and the documentation says they always return 0. In fact they were returning -1. If any application was actually using these functions then it may appear that they were actually successful (e.g. -1 could be interpreted as "true")._|_Port of #18874 to the `master` branch. Fixes #18744 in `master` branch.
_|_Port of #18874 to the `openssl-3.0` branch. Fixes #18744 in `openssl-3.0` branch._|_s390x GHASH assembler implementation assumed it was called from a
gcm128_context structure where the Xi paramter to the ghash function was
embedded in that structure.  Since the structure layout resembles the paramter
block required for kimd-GHASH, the assembler code simply assumed the 128 bytes
after Xi are the hash subkey.

This assumption was broken with the introduction of AES-GCM-SIV which uses the
GHASH implementation without a gcm128_context structure.  Furthermore, the
bytes following the Xi input parameter to the GHASH function do not contain
the hash subkey.  To fix this, we remove the assumption about the calling
context and build the parameter block on the stack.  This requires some
copying of data to and from the stack.  While this introduces a performance
degradation, new systems anyway use kma for GHASH/AES-GCM.

Finally fixes #18693 for s390x.

Signed-off-by: Juergen Christ <jchrist@linux.ibm.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

_|_* fix crash in `check_transactionID_or_nonce()` on `actual` being `NULL`
* correct handling of fallback subject in `OSSL_CMP_CTX_setup_CRM()` and its doc


_|_The s390x provides its custom implementation for the creation of the
ed448 and ed25519 signatures. Unfortunately it does not set the size.
Users that rely of this return parameter end up with wrong values and
will compare wrong sizes of signature.

Set the proper size of the returned signature on success. Set an error
if the signing operation fails.

Fixes: #18912
Signed-off-by: Sebastian Andrzej Siewior <sebastian@breakpoint.cc>_|_This backports one of the commits of #13841.
I forgot to backport this bug fix to 1.1.1.
So I got a test failure on my external CMP tests with OpenSSL 1.1.1.
_|_Thanks Matt for pointing on it

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_As EVP_CIPHER_CTX_get_iv_length indicates failure with -1, this error
should be processed. Also the result of this function shouldn't be
assigned to an unsigned variable.

Reviewed-by: Paul Dale <pauli@openssl.org>
Reviewed-by: Tomas Mraz <tomas@openssl.org>
Reviewed-by: Hugo Landau <hlandau@openssl.org>
(Merged from https://github.com/openssl/openssl/pull/18891)

Signed-off-by: Dmitry Belyavskiy <beldmit@gmail.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #18911

`BSWAP`x/`GETU`xx are no-ops on big-endian. Change the byte swapper.
Fix big-endian issues in the `mulx_ghash()` function

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_So far, error result of `X509_STORE_CTX_set_default()` was not checked in `pk7_smime.c` and the error code was misleading in in `x509_vfy.c`.
This PR also adds error information which purpose name could not be found.

As the bugs fixed are minor and `ERR_raise_data()` is not available in 1.1.1., I do not suggest backporting to 1.1.1.
_|_BTW, why is this undocumented function available at all? It appears unused._|_
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_If there is no timer available to seed the stochastic flushing, revert to a global seed that gets updated each flush.
This is mitigating the possibility that the cache flushing could be manipulated by an attacker to cause a DoS.
Such an attack is purely theoretical at the moment.

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #18690

In some circumstances, it's possible that when using an external
database for the session cache, that pulling in an entry from that
cache to the internal cache will cause the newly added entry to
be deleted from the internal cache. This is likely to happen when
the internal cache is set to have a small size, and the newly added
entry's timeout places it at the end of the cache list.

This could be fixed by updating the timestamp of the session (via
`SSL_SESSION_set_time()` or `SSL_SESSION_set_timeout()`) before
adding to the cache. But that may not be desireable.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [X] tests are added or updated
_|_The default that pkcs12 -export uses is SHA256 and not SHA1.

##### Checklist
- [x] documentation is added or updated
_|_Fixes #18896
_|_If the public key is not set on the key, return error instead of crash.

Also clarify documentation in regards to EC key parameters and clarify that EVP_PKEY_fromdata ignores parameters that are unknown or incorrect for given selection.

Also added fallback to OSSL_PKEY_PARAM_ENCODED_PUBLIC_KEY on key import.
    
Fixes #18495

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_Fixes #18898

Urgent because the CI is broken.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_…fallback DEP works fine there. XLC should be unaffected.

CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_As EVP_CIPHER_CTX_get_iv_length indicates failure with -1, this error
should be processed. Also the result of this function shouldn't be
assigned to an unsigned variable.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Directories and file names with spaces require quoting...  again

Fixes #18880
_|_If `X509_REQ` is created by `PEM_read_X509_REQ` and only the attribute is changed, it is not exported as intended by `PEM_write_X509_REQ` Because the non-updated `enc` is used.
This patch turns on the modified flag when an attribute change occurs.

To reproduce:
1. Create a CSR file with extensions.
```
Certificate Request:
    Data:
        Version: 1 (0x0)
        Subject: C = KR, ST = dkfs, L = kdslf, O = klsdfjkldfjsd, OU = kdlfsjfdskl, CN = kfldsjdfs
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                RSA Public-Key: (2048 bit)
                Modulus:
                    00:c8:25:ae:fe:f2:a7:9a:54:c8:ce:6f:1f:d6:10:
                    0d:b7:7c:e2:0b:fe:c3:bc:68:f0:86:52:45:50:2b:
                    d5:f4:82:b8:3d:ab:85:14:0b:4e:6c:b7:00:12:e6:
                    9e:a8:98:29:32:b6:c2:a1:85:10:4c:93:68:d2:4e:
                    4e:04:df:e3:4f:53:da:ea:da:67:30:ee:d2:6b:15:
                    74:55:f2:7a:43:1c:1a:02:18:62:98:14:6f:b7:1d:
                    49:d4:e5:60:db:ca:80:43:34:28:c9:aa:79:fe:38:
                    5f:34:66:2f:53:d5:b5:6e:05:14:6e:97:c2:cb:d3:
                    1f:76:80:a0:bf:f9:86:96:02:00:4a:ac:6c:4d:ab:
                    1b:59:46:46:bd:46:53:9f:02:ca:45:86:6d:95:75:
                    ec:51:41:25:48:11:3d:72:b1:05:22:0c:61:b4:74:
                    2e:b0:09:1e:99:cb:2a:fd:e0:9e:3f:c4:96:85:c0:
                    24:0d:db:50:ca:74:74:5c:e2:b7:23:9f:12:e1:01:
                    24:39:6e:86:63:6b:1c:51:18:2d:ec:32:03:03:28:
                    85:b4:3e:56:42:fd:d0:2c:36:ab:f6:14:89:2b:8e:
                    55:a9:0a:63:29:3e:33:ce:a8:25:ca:55:8c:a6:6d:
                    56:47:f3:9d:88:31:82:60:fd:1e:5f:12:71:65:47:
                    1d:e1
                Exponent: 65537 (0x10001)
        Attributes:
        Requested Extensions:
            X509v3 Basic Constraints: critical
                CA:FALSE
            X509v3 Extended Key Usage: 
                TLS Web Server Authentication, TLS Web Client Authentication, Code Signing, E-mail Protection
            X509v3 Key Usage: 
                Digital Signature, Non Repudiation, Key Encipherment
    Signature Algorithm: sha256WithRSAEncryption
         06:85:a4:ff:19:a0:63:5e:ed:69:99:37:20:3d:ab:1f:c7:86:
         e2:d9:98:70:ca:0e:b3:21:52:66:99:f6:b1:06:22:a7:9d:40:
         7a:56:e4:1e:73:e8:e5:de:96:7f:e6:31:09:e3:5d:17:a5:4f:
         3d:ac:93:de:d7:4c:bc:1b:1c:db:d4:c9:2e:a9:f3:d1:81:8c:
         e1:60:97:af:51:59:d4:12:81:41:ba:b6:7b:c0:a1:f7:4d:87:
         b0:a5:12:aa:11:94:0b:5d:23:4a:b8:19:e8:ba:80:3e:c5:5c:
         59:b5:e7:41:21:b8:8a:2c:c4:39:5b:0c:29:92:62:cc:d6:8a:
         b8:11:27:9c:f8:09:4d:21:88:54:ea:ff:97:70:a3:43:57:06:
         a5:01:ed:64:d9:b5:7f:2d:ff:a2:05:e8:81:46:6d:7c:01:52:
         02:df:bb:04:91:e5:3f:2f:84:2f:71:b5:54:6d:0e:b2:f7:98:
         bf:c6:1e:b8:1f:03:71:7e:9f:1c:2d:b6:2e:5e:d1:e3:a8:27:
         71:de:ed:74:12:ce:44:b5:90:79:15:04:ff:a3:09:b7:8e:2d:
         6c:4f:e0:f8:62:56:a9:3b:f2:a6:12:60:84:95:58:2b:d6:c4:
         c5:48:63:f6:5c:4f:3c:e4:c0:b9:25:81:94:eb:1c:11:a8:22:
         84:37:d4:03
-----BEGIN CERTIFICATE REQUEST-----
MIIDEjCCAfoCAQAwbjELMAkGA1UEBhMCS1IxDTALBgNVBAgMBGRrZnMxDjAMBgNV
BAcMBWtkc2xmMRYwFAYDVQQKDA1rbHNkZmprbGRmanNkMRQwEgYDVQQLDAtrZGxm
c2pmZHNrbDESMBAGA1UEAwwJa2ZsZHNqZGZzMIIBIjANBgkqhkiG9w0BAQEFAAOC
AQ8AMIIBCgKCAQEAyCWu/vKnmlTIzm8f1hANt3ziC/7DvGjwhlJFUCvV9IK4PauF
FAtObLcAEuaeqJgpMrbCoYUQTJNo0k5OBN/jT1Pa6tpnMO7SaxV0VfJ6QxwaAhhi
mBRvtx1J1OVg28qAQzQoyap5/jhfNGYvU9W1bgUUbpfCy9MfdoCgv/mGlgIASqxs
TasbWUZGvUZTnwLKRYZtlXXsUUElSBE9crEFIgxhtHQusAkemcsq/eCeP8SWhcAk
DdtQynR0XOK3I58S4QEkOW6GY2scURgt7DIDAyiFtD5WQv3QLDar9hSJK45VqQpj
KT4zzqglylWMpm1WR/OdiDGCYP0eXxJxZUcd4QIDAQABoF8wXQYJKoZIhvcNAQkO
MVAwTjAMBgNVHRMBAf8EAjAAMDEGA1UdJQQqMCgGCCsGAQUFBwMBBggrBgEFBQcD
AgYIKwYBBQUHAwMGCCsGAQUFBwMEMAsGA1UdDwQEAwIF4DANBgkqhkiG9w0BAQsF
AAOCAQEABoWk/xmgY17taZk3ID2rH8eG4tmYcMoOsyFSZpn2sQYip51AelbkHnPo
5d6Wf+YxCeNdF6VPPayT3tdMvBsc29TJLqnz0YGM4WCXr1FZ1BKBQbq2e8Ch902H
sKUSqhGUC10jSrgZ6LqAPsVcWbXnQSG4iizEOVsMKZJizNaKuBEnnPgJTSGIVOr/
l3CjQ1cGpQHtZNm1fy3/ogXogUZtfAFSAt+7BJHlPy+EL3G1VG0OsveYv8YeuB8D
cX6fHC22Ll7R46gncd7tdBLORLWQeRUE/6MJt44tbE/g+GJWqTvyphJghJVYK9bE
xUhj9lxPPOTAuSWBlOscEagihDfUAw==
-----END CERTIFICATE REQUEST-----
```
2. Compile and run this C code. This code removes the requested extensions and save as `edited.csr`
```C
#include <stdio.h>
#include <openssl/crypto.h>
#include <openssl/x509v3.h>
#include <openssl/pem.h>
#include <openssl/err.h>

int main()
{
        /*
        FILE *f = fopen("privekey.key","rb");
        EVP_PKEY *privkey = NULL;
        if(PEM_read_PrivateKey(f,&privkey,NULL,NULL) == NULL)
                printf("error\n");
        fclose(f);
        */

        FILE *f = fopen("test.csr","rb");
        X509_REQ *req = NULL;
        if(PEM_read_X509_REQ(f,&req,NULL,NULL) == NULL)
                printf("x509 req error\n");
        fclose(f);

        int attr_len = X509_REQ_get_attr_count(req);
        printf("count : %d\n",attr_len);

        X509_REQ_delete_attr(req,0);

        attr_len = X509_REQ_get_attr_count(req);
        printf("count : %d\n",attr_len);

        /*
        if(X509_REQ_sign(req,privkey,NULL) == 0)
                printf("sign error\n");
        */

        f = fopen("edited.csr","wb");
        PEM_write_X509_REQ(f,req);
        fclose(f);
        return 0;
}
```
3. edited.csr still has `Requested Extensions`
<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->_|_The CMS_dataFinal result is important as signature may fail, however, it
is ignored while returning success from CMS_final.

The SMIME_crlf_copy result is returned while it is ignored in the rest
of the openssl code.

Prefer the CMS_dataFinal result.

This is regression from openssl-1.

Blame finds c1669f41ei as root cause of regression.

Signed-off-by: Alon Bar-Lev <alon.barlev@gmail.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Out of range values could possibly be returned due to a lack of range checking.
Very unlikely to be exploitable for our provider because sensible values are returned for all ciphers.

Also fixed the defaulting code so that the cipher's IV length is returned if the cipher ctx doesn't support getting.
_|_This allows to set EC_KEY's private key to NULL.

Fixes #18744 in 1.1.1 branch._|_…fallback DEP works fine there.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_If app data is received before a Finished message in DTLS then we buffer
it to return later. The function `SSL_pending()` is supposed to tell you
how much processed app data we have already buffered, and `SSL_has_pending()`
is supposed to tell you if we have any data buffered (whether processed or
not, and whether app data or not).

Neither `SSL_pending()` or `SSL_has_pending()` were taking account of this
DTLS specific app data buffer.
_|_Fixes #18825 
Checks if header is NULL or not before calling strlen().

CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Rework of GCM code did not include s390x causing NULL pointer dereferences on
GCM operations other than AES-GCM on platforms that support kma.  Fix this by
a proper setup of the function pointers.

Fixes: 92c9086e5c2b ("Use separate function to get GCM functions")

Signed-off-by: Juergen Christ <jchrist@linux.ibm.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

_|_Some of the VC-common attributes have values that use `$(CC)`, wrapped with
quotes.  However, `Configurations/windows-makefile.tmpl` already quotes the
`CC` value, like this:

    CC="{- $config{CC} -}"

The interaction between that makefile variable and the attributes using
`$(CC)` wrapped with quotes is a command line with the quotes doubled.  For
example, the value of `$(CPP)` becomes `""cl""`.

Strangely enough, this appears to be tolerated, at least on some versions of
Windows.  However, this has been reported not to be the case.

This is fixed by removing the quotes in `Configurations/10-main.conf`,
making `Configurations/windows-makefile.tmpl` responsible for proper
quoting.

Fixes #18823
_|_It shouldn't be.  This moves the reset to the init function instead.


- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This fixes a small issue hinted on by @bernd-edlinger  in https://github.com/openssl/openssl/pull/18401#discussion_r880791191.

- [x] tests are added or updated
_|_### Problem
OpenSSL 3.0.0 to 3.0.5 binaries built with MS-VC++ 2008 always fails to run on Windows XP 32-bit Editions.

### Solution
VC++ 2008 or earlier x86 compilers do not have an inline implementation of InterlockedOr64 for 32bit CPUs, then OpenSSL 3.0.0 to 3.0.5 binaries built with MS-VC++ 2008 will always fail to run on Windows XP 32bit.

See: https://docs.microsoft.com/en-us/cpp/intrinsics/interlockedor-intrinsic-functions#requirements

To work around this problem, we implement a manual locking mechanism for only VC++ 2008 or earlier x86 compilers.

### Related issue
This patch fixes https://github.com/openssl/openssl/issues/18855_|_Using `_armv7_tick()` leads to crashes on a variety of AArch32 Android devices while providing [little benefit](https://github.com/openssl/openssl/issues/14838#issuecomment-820518715). Nobody has succeeded in getting a reliable repro to debug it for years, so just disable it by default on these known problematic configurations unless the user opts in by setting `OPENSSL_armcap`.

If this approach is acceptable, this should also be backported to `OpenSSL_1_1_1-stable` to resolve the linked issues.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

Fixes #14838
Fixes #17009
Fixes #17465_|_dtlstest.c needs some adjusting to handle no-dtls1_2 since commit
7bf2e4d7f0c banned DTLSv1 at the default security level - causing the
test to fail.
_|_This is a backport of #18523 to the 1.1.1 branch.

When cherry-picking #18523 to 1.1.1 there was a minor conflict which is resolved here. Unfortunately after the backport the newly introduced test started to fail. This is because of a bug in 1.1.1 that was fixed in master/3.0 by #16201. Therefore this PR also backports #16201 to 1.1.1._|_Tests for #16080 and #18836

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Tests for #16080 and #18836

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [X] tests are added or updated
_|_PR #18129 broke the scenario of signing a certificate (not CSR) with
different-sized key. This works in 3.0, so port the fix from 3.0
(which is to only update the issuer for a request).

Partially undo #18129, but keep setting the issuer only for a CSR

Create two certs (a and ca) then sign a with c (into b):
```
openssl req -x509 -newkey rsa:2048 -keyout a-key.pem -out a-cert.pem -days 365 -nodes -subj /CN=a.example.com
openssl req -x509 -newkey rsa:4096 -keyout ca-key.pem -out ca-cert.pem -days 3650 -nodes -subj /CN=ca.example.com
openssl x509 -in a-cert.pem -CA ca-cert.pem -CAkey ca-key.pem -set_serial '1234567890' -preserve_dates -sha256 -out b-cert.pem
```
The above succeeds in 1.1.1n and 3.0, fails in 1.1.1o (which includes #18129)
The issue in #16080 is also fixed.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_This partially reverts Github PR #16378:
commit 764cf5b26306a8712e8b3d41599c44dc5ed07a25, titled "Configuration:
only produce a new configdata.pm if it has changed contents"

Unfortunately, the attempt to make configuration leaner didn't take
into account all the files that may or may not affect the outcome of
`configdata.pm`, and most of all, didn't take into account that `Makefile`
has clauses of its own to determined when a reconfiguration is needed, all
based on time stamps.

Something as simple as a changed `Configurations/10-main.conf`, where the
change doesn't affect the resulting `configdata.pm` gets `make` into a
reconfiguration loop, because `configdata.pm` is older than `10-main.conf`.

The lesson to remember is not to try to outsmart `make` in cases like this.

We retain the other parts of the PR mentioned, as they are still valid.

needed to be taken into account (all the Configurations/*.conf
as well as all the build.info)
_|_Also fix conditional branch out of range when using sanitisers.

Fixes #18813

_|_* report `#if` and `#elif` with constant condition
* improve checks on comment opening: `/*`
* extend checking into macro bodies and other preprocessor directives
* make sure handling of indentation etc. in preprocessor directives is independent of normal code
* improve detection/handling of trailing backslash and essentially empty lines
* improve detection of function definition headers
* improve whitespace reporting on `<op>=`, including (in-)equality
* further fixes for whitespace reporting within `for (...)`
* add some tests
* better reflect in tests that whitespace nits in comments are no longer reported
* improve wording of some reports
* refactor order of state variables
* small further improvements

- [x] tests are added or updated
_|_Hi everyone!

This is my first contribution, all feedback is welcome :smile:, I will submit my CLA later today.

This should fix #18689 in the master branch._|_We need to check that error cert is available before printing its data

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This backports the essence of #18373._|_Fixing Coverity 1506566, 1503326, 1503321 & 1503327.
_|_s390x does not directly support keccak via CPACF since these instructions
hard-code the padding to either SHA-3 or SHAKE for the "compute last message
digest" function.  This caused test errors on Keccak digests.  Fix it by using
"compute intermediate message digest" and manually computing the padding for
Keccak.

Fixes: a8b238f0e4c1 ("Fix SHA, SHAKE, and KECCAK ASM flag passing")

Signed-off-by: Juergen Christ <jchrist@linux.ibm.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->
_|_Longer private key sizes unnecessarily raise the cycles needed to
compute the shared secret without any increase of the real security.

This fixes a regression from 1.1.1 where these shorter keys
were generated for the known safe primes.

This is partial backport of #18480 to the 3.0 branch.
This is a bug-fix only part to resolve the regression from 1.1.1.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_Flags for ASM implementations of EC curves were only passed to the FIPS
provider and not to the default or legacy provider.  This left some potential
for optimization.  Pass the correct flags also to these providers.

Signed-off-by: Juergen Christ <jchrist@linux.ibm.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->_|_This fixes issues like the one reported in https://github.com/openssl/openssl/pull/17172#discussion_r915941668.

Also 
* fix false positive on `for(;; stmt)`
* improve wording: 'no' -> 'missing'
* further minor improvements
_|_This is a follow-up of #18701, due to https://github.com/openssl/openssl/issues/18776#issuecomment-1180261781._|_Fixes #18768
_|_Check for the return X509_NAME_new(), ASN1_BIT_STRING_new() and ASN1_INTEGER_new(), respectively, because they return NULL when fail.
Especially for ASN1_BIT_STRING_new() and ASN1_INTEGER_new(), the memory may be wrongly access by ASN1_BIT_STRING_set() and ASN1_INTEGER_set_uint64() since they do not check the validity of the first argument._|_When `TSAN_REQUIRES_LOCKING` is enabled, OBJ_new_nid() can fail in getting the write lock and return NID_undef.
Therefore, it is better to check the return of it to propagate the error in time._|_This PR adds minimum token permissions for the GITHUB_TOKEN using https://github.com/step-security/secure-workflows.

GitHub recommends defining minimum GITHUB_TOKEN permissions for securing GitHub Actions workflows 
- https://github.blog/changelog/2021-04-20-github-actions-control-permissions-for-github_token/  
- https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
- The Open Source Security Foundation (OpenSSF) [Scorecards](https://github.com/ossf/scorecard) treats not setting token permissions as a high-risk issue 

This project is part of the top 100 critical projects as per OpenSSF (https://github.com/ossf/wg-securing-critical-projects), so fixing the token permissions to improve security.

Signed-off-by: Varun Sharma <varunsh@stepsecurity.io>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

_|_The problem of producing to-the-point chain building diagnostics will be fixed in the follow-up PR #18761.

Fixes #18691.

On this occasion, in a separate commit:
* `test/certs/setup.sh:` add missing comment on CA cert variant without basic constraints
_|_Flags for ASM implementations of SHA, SHAKE, and KECCAK were only passed to
the FIPS provider and not to the default or legacy provider.  This left some
potential for optimization.  Pass the correct flags also to these providers.

Signed-off-by: Juergen Christ <jchrist@linux.ibm.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->

_|_Occurs if a failure happens after the malloc call in the second call to
EVP_PKEY_get_octet_string_param().

Detected by PR #18355

Some calling code assumes that nothing is allocated in the returned
pointer if there was a failure. Other calling code always trys freeing.
The third case is in ecdh_cms_encrypt() where it does not check the
return value. I am assuming this change is ok since the legacy path in
EVP_PKEY_get1_encoded_public_key() also does not return the pointer on
failure.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes test error in #18714
This only happens currently during minimal builds.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_`SYS$GETTIM_PREC` is a very new function, only available on OpenVMS v8.4.
OpenSSL binaries built on OpenVMS v8.4 become unusable on older OpenVMS
versions, but building for the older CRTL version will make the high
precision time functions unavailable.

Tests have shown that on Alpha and Itanium, the time update granularity
between `SYS$GETTIM` and `SYS$GETTIM_PREC` is marginal, so the former plus
a sequence number turns out to be better to guarantee a unique nonce.

Fixes #18727
_|_`SYS$GETTIM_PREC` is a very new function, only available on OpenVMS v8.4.
OpenSSL binaries built on OpenVMS v8.4 become unusable on older OpenVMS
versions, but building for the older CRTL version will make the high
precision time functions unavailable.

Tests have shown that on Alpha and Itanium, the time update granularity
between `SYS$GETTIM` and `SYS$GETTIM_PREC` is marginal, so the former plus
a sequence number turns out to be better to guarantee a unique nonce.

Fixes #18727
_|_This was found by my Reproducible Error Injection patch (#18356)

Due to the exact location of the injected memory
error the sha256 digest is missing, and this causes much later
the memory leak (and a failed assertion) in tls13_generate_secret.

But the reproduction is a bit challenging, as it requires AESNI
and RDRAND capability.

OPENSSL_ia32cap=0x4200000000000000 ERROR_INJECT=1657070330 ../util/shlib_wrap.sh ./client-test ./corpora/client/791afc153e17db072175eeef85385a38d7f6d194
    #0 0x7fceaffb7d4f in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cc:36
    #1 0x55fb9117f934 in my_malloc fuzz/test-corpus.c:114
    #2 0x7fceafa147f3 in OPENSSL_LH_insert crypto/lhash/lhash.c:109
    #3 0x7fceafa42639 in lh_OBJ_NAME_insert crypto/objects/obj_local.h:12
    #4 0x7fceafa42639 in OBJ_NAME_add crypto/objects/o_names.c:236
    #5 0x7fceaf9f7baa in EVP_add_digest crypto/evp/names.c:39
    #6 0x7fceaf9c6b97 in openssl_add_all_digests_int crypto/evp/c_alld.c:39
    #7 0x7fceafa0f8ec in ossl_init_add_all_digests crypto/init.c:275
    #8 0x7fceafa0f8ec in ossl_init_add_all_digests_ossl_ crypto/init.c:264
    #9 0x7fceaf69b4de in __pthread_once_slow /build/glibc-SzIz7B/glibc-2.31/nptl/pthread_once.c:116
    #10 0x7fceafafb27c in CRYPTO_THREAD_run_once crypto/threads_pthread.c:118
    #11 0x7fceafa1000e in OPENSSL_init_crypto crypto/init.c:677
    #12 0x7fceafa1000e in OPENSSL_init_crypto crypto/init.c:611
    #13 0x7fceafdad3e8 in OPENSSL_init_ssl ssl/ssl_init.c:190
    #14 0x55fb9117ee0f in FuzzerInitialize fuzz/client.c:46
    #15 0x55fb9117e939 in main fuzz/test-corpus.c:194
    #16 0x7fceaf4bc082 in __libc_start_main ../csu/libc-start.c:308
    #17 0x55fb9117ec7d in _start (.../openssl/fuzz/client-test+0x2c7d)

    #0 0x7fceaffb7d4f in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cc:36
    #1 0x55fb9117f934 in my_malloc fuzz/test-corpus.c:114
    #2 0x7fceafa147f3 in OPENSSL_LH_insert crypto/lhash/lhash.c:109
    #3 0x7fceafa42639 in lh_OBJ_NAME_insert crypto/objects/obj_local.h:12
    #4 0x7fceafa42639 in OBJ_NAME_add crypto/objects/o_names.c:236
    #5 0x7fceaf9f7baa in EVP_add_digest crypto/evp/names.c:39
    #6 0x7fceafdad328 in ossl_init_ssl_base ssl/ssl_init.c:87
    #7 0x7fceafdad328 in ossl_init_ssl_base_ossl_ ssl/ssl_init.c:24
    #8 0x7fceaf69b4de in __pthread_once_slow /build/glibc-SzIz7B/glibc-2.31/nptl/pthread_once.c:116
    #9 0x7fceafafb27c in CRYPTO_THREAD_run_once crypto/threads_pthread.c:118
    #10 0x7fceafdad412 in OPENSSL_init_ssl ssl/ssl_init.c:193
    #11 0x55fb9117ee0f in FuzzerInitialize fuzz/client.c:46
    #12 0x55fb9117e939 in main fuzz/test-corpus.c:194
    #13 0x7fceaf4bc082 in __libc_start_main ../csu/libc-start.c:308
    #14 0x55fb9117ec7d in _start (.../openssl/fuzz/client-test+0x2c7d)

=================================================================
==1320996==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 80 byte(s) in 1 object(s) allocated from:
    #0 0x7fceaffaa808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144
    #1 0x7fceafa19425 in CRYPTO_zalloc crypto/mem.c:230
    #2 0x7fceafa03a85 in int_ctx_new crypto/evp/pmeth_lib.c:144
    #3 0x7fceafa03a85 in EVP_PKEY_CTX_new_id crypto/evp/pmeth_lib.c:250
    #4 0x7fceafe38de5 in tls13_generate_secret ssl/tls13_enc.c:174
    #5 0x7fceafd9537f in ssl_derive ssl/s3_lib.c:4833
    #6 0x7fceafdde91c in tls_parse_stoc_key_share ssl/statem/extensions_clnt.c:1902
    #7 0x7fceafdd4ac1 in tls_parse_all_extensions ssl/statem/extensions.c:752
    #8 0x7fceafdf8079 in tls_process_server_hello ssl/statem/statem_clnt.c:1698
    #9 0x7fceafe01f87 in ossl_statem_client_process_message ssl/statem/statem_clnt.c:1034
    #10 0x7fceafdeec0d in read_state_machine ssl/statem/statem.c:636
    #11 0x7fceafdeec0d in state_machine ssl/statem/statem.c:434
    #12 0x7fceafdb88d7 in SSL_do_handshake ssl/ssl_lib.c:3718
    #13 0x55fb9117f07c in FuzzerTestOneInput fuzz/client.c:98
    #14 0x55fb9117f463 in testfile fuzz/test-corpus.c:182
    #15 0x55fb9117eb92 in main fuzz/test-corpus.c:226
    #16 0x7fceaf4bc082 in __libc_start_main ../csu/libc-start.c:308

Indirect leak of 1080 byte(s) in 1 object(s) allocated from:
    #0 0x7fceaffaa808 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:144
    #1 0x7fceafa19425 in CRYPTO_zalloc crypto/mem.c:230
    #2 0x7fceafa11555 in pkey_hkdf_init crypto/kdf/hkdf.c:51
    #3 0x7fceafa03b36 in int_ctx_new crypto/evp/pmeth_lib.c:160
    #4 0x7fceafa03b36 in EVP_PKEY_CTX_new_id crypto/evp/pmeth_lib.c:250
    #5 0x7fceafe38de5 in tls13_generate_secret ssl/tls13_enc.c:174
    #6 0x7fceafd9537f in ssl_derive ssl/s3_lib.c:4833
    #7 0x7fceafdde91c in tls_parse_stoc_key_share ssl/statem/extensions_clnt.c:1902
    #8 0x7fceafdd4ac1 in tls_parse_all_extensions ssl/statem/extensions.c:752
    #9 0x7fceafdf8079 in tls_process_server_hello ssl/statem/statem_clnt.c:1698
    #10 0x7fceafe01f87 in ossl_statem_client_process_message ssl/statem/statem_clnt.c:1034
    #11 0x7fceafdeec0d in read_state_machine ssl/statem/statem.c:636
    #12 0x7fceafdeec0d in state_machine ssl/statem/statem.c:434
    #13 0x7fceafdb88d7 in SSL_do_handshake ssl/ssl_lib.c:3718
    #14 0x55fb9117f07c in FuzzerTestOneInput fuzz/client.c:98
    #15 0x55fb9117f463 in testfile fuzz/test-corpus.c:182
    #16 0x55fb9117eb92 in main fuzz/test-corpus.c:226
    #17 0x7fceaf4bc082 in __libc_start_main ../csu/libc-start.c:308

SUMMARY: AddressSanitizer: 1160 byte(s) leaked in 2 allocation(s).

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_On some targets, errors are occuring due to implicit declaration of memcmp.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_PR #18718 for master (to be cherry-picked to `openssl-3.0` and `OpenSSL_1_1_1-stable`._|_The `-provider` and `-propquery` options did not work on some OpenSSL apps. Fix this and add tests to check that operations that would usually fail with the FIPS provider work when run with

```
-provider default -propquery '?fips!=yes'
```

See also #18576, which previously fixed the same problem in dsaparam and gendsa. See also the initial report in https://bugzilla.redhat.com/show_bug.cgi?id=2094956.

##### Checklist
- [x] tests are added or updated
_|_Avoid this warning when compiled with llvm/gcc + mingw-w64 and
`USE_BCRYPTGENRANDOM` enabled:

```
../providers/implementations/rands/seeding/rand_win.c:31:11: warning: unknown pragma ignored [-Wunknown-pragmas]
          ^
1 warning generated.
```

CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Prevent crashes on error by making sure the info of type ` APP_HTTP_TLS_INFO` is freed not before calling `OSSL_CMP_CTX_free`(),
which may call `OSSL_HTTP_close()` and thus indirectly reference the info.
Moreover, should not attempt to reference the `cmp_ctx` variable on cleanup when NULL.

On this occasion, in `cmp_http.c` slightly extend a comment in `keep_alive()`.


_|_Work around an inconsistency in the implementations of `BIO_CTRL_INFO`.

`BIO_CTRL_INFO` yields the data length at least for memory BIOs,
but for file-based BIOs it gives the current position, which is not what we need, so we now use `ftell()` after `fseek(..., SEEK_END)` for them.
Streaming BIOs likely will not support querying the size at all, and we assume we got a correct value if > 0.

_|_As the potential failure of the BN_dup,
it should be better to check the return value
in order to guarantee the success.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes https://github.com/openssl/openssl/issues/18677
_|_BN_one() uses the expand function which calls malloc which may fail.
All other places that reference BN_one() check the return value.

The issue is triggered by a memory allocation failure.
Detected by PR #18355

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The existing help text says:

>  -badsig                 Corrupt last byte of loaded OSCP response signature (for test)

but this should be OCSP. This is the only occurrence within the project
of this typo.

---

My understanding (and hope) is that this should qualify as very trivial and shouldn't require a CLA.


##### Checklist


_|_

- [x] tests are added or updated
_|_These issues recently came up when preparing my answer at https://www.mail-archive.com/openssl-users@openssl.org/msg90965.html, where I provided a simple example HTTPS client for retrieving HTML pages.

* `app_http_tls_cb():` fix crash on inconsistency w.r.t. use of TLS.
   This happens if `use_ssl` is not set but an `SSL_CTX` is provided.
* `OSSL_HTTP_open():` improve use of `use_ssl` and its documentation
* `OSSL_HTTP_REQ_CTX_nbio()`: fix copy&paste glitch calling `BIO_should_retry(rctx->rbio)`
* `http_client.c:` fix comment and documentation of the memory BIOs used


_|_Although this is basically an incorrect API call it was not crashing
before and it might happen inadvertently if CONF_modules_unload()
is called from a destructor for example.

Fixes #18669
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Triggered by a  memory allocation failure.
Detected by PR #18355

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes openssl#18598.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #18637_|_* `apps/cmp.c`: improve `print_itavs()`
* `apps/cmp.c`: Fix glitch in `-newkeypass` warning and extend warnings for `genm`
_|_If we receive a ClientHello and send back a HelloVerifyRequest, we need
to be able to handle the scenario where the HelloVerifyRequest gets lost
and we receive another ClientHello with the message sequence number set to
0.

Fixes https://github.com/openssl/openssl/issues/18635
_|_A -ve return value from this function indicates an error which we should
treat as a failure to validate.

Fixes #18538_|_As the potential failure of the ASN1_item_i2d,
it should be better to check the return value.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Occurs if a malloc failure happens inside collect_numbers()

Reported via #18365

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_I have searched through all references of ERR_R_MALLOC_FAILURE for any
other instances..

Noticed during random code inspection of coverage results 

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #18619_|_This can be reproduced with my error injection patch.

The test vector has been validated on the 1.1.1 branch
but the issue is of course identical in all branches.

$ ERROR_INJECT=1656112173 ../util/shlib_wrap.sh ./x509-test ./corpora/x509/fe543a8d7e09109a9a08114323eefec802ad79e2
    #0 0x7fb61945eeba in __sanitizer_print_stack_trace ../../../../gcc-trunk/libsanitizer/asan/asan_stack.cpp:87
    #1 0x402f84 in my_malloc fuzz/test-corpus.c:114
    #2 0x7fb619092430 in CRYPTO_zalloc crypto/mem.c:230
    #3 0x7fb618ef7561 in bn_expand_internal crypto/bn/bn_lib.c:280
    #4 0x7fb618ef7561 in bn_expand2 crypto/bn/bn_lib.c:304
    #5 0x7fb618ef819d in BN_bin2bn crypto/bn/bn_lib.c:454
    #6 0x7fb618e7aa13 in asn1_string_to_bn crypto/asn1/a_int.c:503
    #7 0x7fb618e7aa13 in ASN1_INTEGER_to_BN crypto/asn1/a_int.c:559
    #8 0x7fb618fd8e79 in EC_GROUP_new_from_ecparameters crypto/ec/ec_asn1.c:814
    #9 0x7fb618fd98e8 in EC_GROUP_new_from_ecpkparameters crypto/ec/ec_asn1.c:935
    #10 0x7fb618fd9aec in d2i_ECPKParameters crypto/ec/ec_asn1.c:966
    #11 0x7fb618fdace9 in d2i_ECParameters crypto/ec/ec_asn1.c:1184
    #12 0x7fb618fd1fc7 in eckey_type2param crypto/ec/ec_ameth.c:119
    #13 0x7fb618fd57b4 in eckey_pub_decode crypto/ec/ec_ameth.c:165
    #14 0x7fb6191a9c62 in x509_pubkey_decode crypto/x509/x_pubkey.c:124
    #15 0x7fb6191a9e42 in pubkey_cb crypto/x509/x_pubkey.c:46
    #16 0x7fb618eac032 in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:432
    #17 0x7fb618eacaf5 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:643
    #18 0x7fb618ead288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #19 0x7fb618eab9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #20 0x7fb618eacaf5 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:643
    #21 0x7fb618ead288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #22 0x7fb618eab9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #23 0x7fb618eadd1f in ASN1_item_ex_d2i crypto/asn1/tasn_dec.c:124
    #24 0x7fb618eade35 in ASN1_item_d2i crypto/asn1/tasn_dec.c:114
    #25 0x40310c in FuzzerTestOneInput fuzz/x509.c:33
    #26 0x402afb in testfile fuzz/test-corpus.c:182
    #27 0x402656 in main fuzz/test-corpus.c:226
    #28 0x7fb618551f44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21f44)
    #29 0x402756  (/home/ed/OPC/openssl/fuzz/x509-test+0x402756)

=================================================================
==12221==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 24 byte(s) in 1 object(s) allocated from:
    #0 0x7fb61945309f in __interceptor_malloc ../../../../gcc-trunk/libsanitizer/asan/asan_malloc_linux.cpp:69
    #1 0x7fb619092430 in CRYPTO_zalloc crypto/mem.c:230
    #2 0x7fb618ef5f11 in BN_new crypto/bn/bn_lib.c:246
    #3 0x7fb618ef82f4 in BN_bin2bn crypto/bn/bn_lib.c:440
    #4 0x7fb618fd8933 in EC_GROUP_new_from_ecparameters crypto/ec/ec_asn1.c:618
    #5 0x7fb618fd98e8 in EC_GROUP_new_from_ecpkparameters crypto/ec/ec_asn1.c:935
    #6 0x7fb618fd9aec in d2i_ECPKParameters crypto/ec/ec_asn1.c:966
    #7 0x7fb618fdace9 in d2i_ECParameters crypto/ec/ec_asn1.c:1184
    #8 0x7fb618fd1fc7 in eckey_type2param crypto/ec/ec_ameth.c:119
    #9 0x7fb618fd57b4 in eckey_pub_decode crypto/ec/ec_ameth.c:165
    #10 0x7fb6191a9c62 in x509_pubkey_decode crypto/x509/x_pubkey.c:124
    #11 0x7fb6191a9e42 in pubkey_cb crypto/x509/x_pubkey.c:46
    #12 0x7fb618eac032 in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:432
    #13 0x7fb618eacaf5 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:643
    #14 0x7fb618ead288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #15 0x7fb618eab9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #16 0x7fb618eacaf5 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:643
    #17 0x7fb618ead288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #18 0x7fb618eab9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #19 0x7fb618eadd1f in ASN1_item_ex_d2i crypto/asn1/tasn_dec.c:124
    #20 0x7fb618eade35 in ASN1_item_d2i crypto/asn1/tasn_dec.c:114
    #21 0x40310c in FuzzerTestOneInput fuzz/x509.c:33
    #22 0x402afb in testfile fuzz/test-corpus.c:182
    #23 0x402656 in main fuzz/test-corpus.c:226
    #24 0x7fb618551f44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21f44)

Indirect leak of 56 byte(s) in 1 object(s) allocated from:
    #0 0x7fb61945309f in __interceptor_malloc ../../../../gcc-trunk/libsanitizer/asan/asan_malloc_linux.cpp:69
    #1 0x7fb619092430 in CRYPTO_zalloc crypto/mem.c:230
    #2 0x7fb618ef7561 in bn_expand_internal crypto/bn/bn_lib.c:280
    #3 0x7fb618ef7561 in bn_expand2 crypto/bn/bn_lib.c:304
    #4 0x7fb618ef819d in BN_bin2bn crypto/bn/bn_lib.c:454
    #5 0x7fb618fd8933 in EC_GROUP_new_from_ecparameters crypto/ec/ec_asn1.c:618
    #6 0x7fb618fd98e8 in EC_GROUP_new_from_ecpkparameters crypto/ec/ec_asn1.c:935
    #7 0x7fb618fd9aec in d2i_ECPKParameters crypto/ec/ec_asn1.c:966
    #8 0x7fb618fdace9 in d2i_ECParameters crypto/ec/ec_asn1.c:1184
    #9 0x7fb618fd1fc7 in eckey_type2param crypto/ec/ec_ameth.c:119
    #10 0x7fb618fd57b4 in eckey_pub_decode crypto/ec/ec_ameth.c:165
    #11 0x7fb6191a9c62 in x509_pubkey_decode crypto/x509/x_pubkey.c:124
    #12 0x7fb6191a9e42 in pubkey_cb crypto/x509/x_pubkey.c:46
    #13 0x7fb618eac032 in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:432
    #14 0x7fb618eacaf5 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:643
    #15 0x7fb618ead288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #16 0x7fb618eab9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #17 0x7fb618eacaf5 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:643
    #18 0x7fb618ead288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #19 0x7fb618eab9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #20 0x7fb618eadd1f in ASN1_item_ex_d2i crypto/asn1/tasn_dec.c:124
    #21 0x7fb618eade35 in ASN1_item_d2i crypto/asn1/tasn_dec.c:114
    #22 0x40310c in FuzzerTestOneInput fuzz/x509.c:33
    #23 0x402afb in testfile fuzz/test-corpus.c:182
    #24 0x402656 in main fuzz/test-corpus.c:226
    #25 0x7fb618551f44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21f44)

SUMMARY: AddressSanitizer: 80 byte(s) leaked in 2 allocation(s).

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This can be reproduced with my error injection patch.

The test vector has been validated on the 1.1.1 branch
but the issue is of course identical in all branches.

$ ERROR_INJECT=1656112173 ../util/shlib_wrap.sh ./x509-test ./corpora/x509/fe543a8d7e09109a9a08114323eefec802ad79e2
    #0 0x7fb61945eeba in __sanitizer_print_stack_trace ../../../../gcc-trunk/libsanitizer/asan/asan_stack.cpp:87
    #1 0x402f84 in my_malloc fuzz/test-corpus.c:114
    #2 0x7fb619092430 in CRYPTO_zalloc crypto/mem.c:230
    #3 0x7fb618ef7561 in bn_expand_internal crypto/bn/bn_lib.c:280
    #4 0x7fb618ef7561 in bn_expand2 crypto/bn/bn_lib.c:304
    #5 0x7fb618ef819d in BN_bin2bn crypto/bn/bn_lib.c:454
    #6 0x7fb618e7aa13 in asn1_string_to_bn crypto/asn1/a_int.c:503
    #7 0x7fb618e7aa13 in ASN1_INTEGER_to_BN crypto/asn1/a_int.c:559
    #8 0x7fb618fd8e79 in EC_GROUP_new_from_ecparameters crypto/ec/ec_asn1.c:814
    #9 0x7fb618fd98e8 in EC_GROUP_new_from_ecpkparameters crypto/ec/ec_asn1.c:935
    #10 0x7fb618fd9aec in d2i_ECPKParameters crypto/ec/ec_asn1.c:966
    #11 0x7fb618fdace9 in d2i_ECParameters crypto/ec/ec_asn1.c:1184
    #12 0x7fb618fd1fc7 in eckey_type2param crypto/ec/ec_ameth.c:119
    #13 0x7fb618fd57b4 in eckey_pub_decode crypto/ec/ec_ameth.c:165
    #14 0x7fb6191a9c62 in x509_pubkey_decode crypto/x509/x_pubkey.c:124
    #15 0x7fb6191a9e42 in pubkey_cb crypto/x509/x_pubkey.c:46
    #16 0x7fb618eac032 in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:432
    #17 0x7fb618eacaf5 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:643
    #18 0x7fb618ead288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #19 0x7fb618eab9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #20 0x7fb618eacaf5 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:643
    #21 0x7fb618ead288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #22 0x7fb618eab9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #23 0x7fb618eadd1f in ASN1_item_ex_d2i crypto/asn1/tasn_dec.c:124
    #24 0x7fb618eade35 in ASN1_item_d2i crypto/asn1/tasn_dec.c:114
    #25 0x40310c in FuzzerTestOneInput fuzz/x509.c:33
    #26 0x402afb in testfile fuzz/test-corpus.c:182
    #27 0x402656 in main fuzz/test-corpus.c:226
    #28 0x7fb618551f44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21f44)
    #29 0x402756  (/home/ed/OPC/openssl/fuzz/x509-test+0x402756)

=================================================================
==12221==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 24 byte(s) in 1 object(s) allocated from:
    #0 0x7fb61945309f in __interceptor_malloc ../../../../gcc-trunk/libsanitizer/asan/asan_malloc_linux.cpp:69
    #1 0x7fb619092430 in CRYPTO_zalloc crypto/mem.c:230
    #2 0x7fb618ef5f11 in BN_new crypto/bn/bn_lib.c:246
    #3 0x7fb618ef82f4 in BN_bin2bn crypto/bn/bn_lib.c:440
    #4 0x7fb618fd8933 in EC_GROUP_new_from_ecparameters crypto/ec/ec_asn1.c:618
    #5 0x7fb618fd98e8 in EC_GROUP_new_from_ecpkparameters crypto/ec/ec_asn1.c:935
    #6 0x7fb618fd9aec in d2i_ECPKParameters crypto/ec/ec_asn1.c:966
    #7 0x7fb618fdace9 in d2i_ECParameters crypto/ec/ec_asn1.c:1184
    #8 0x7fb618fd1fc7 in eckey_type2param crypto/ec/ec_ameth.c:119
    #9 0x7fb618fd57b4 in eckey_pub_decode crypto/ec/ec_ameth.c:165
    #10 0x7fb6191a9c62 in x509_pubkey_decode crypto/x509/x_pubkey.c:124
    #11 0x7fb6191a9e42 in pubkey_cb crypto/x509/x_pubkey.c:46
    #12 0x7fb618eac032 in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:432
    #13 0x7fb618eacaf5 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:643
    #14 0x7fb618ead288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #15 0x7fb618eab9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #16 0x7fb618eacaf5 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:643
    #17 0x7fb618ead288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #18 0x7fb618eab9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #19 0x7fb618eadd1f in ASN1_item_ex_d2i crypto/asn1/tasn_dec.c:124
    #20 0x7fb618eade35 in ASN1_item_d2i crypto/asn1/tasn_dec.c:114
    #21 0x40310c in FuzzerTestOneInput fuzz/x509.c:33
    #22 0x402afb in testfile fuzz/test-corpus.c:182
    #23 0x402656 in main fuzz/test-corpus.c:226
    #24 0x7fb618551f44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21f44)

Indirect leak of 56 byte(s) in 1 object(s) allocated from:
    #0 0x7fb61945309f in __interceptor_malloc ../../../../gcc-trunk/libsanitizer/asan/asan_malloc_linux.cpp:69
    #1 0x7fb619092430 in CRYPTO_zalloc crypto/mem.c:230
    #2 0x7fb618ef7561 in bn_expand_internal crypto/bn/bn_lib.c:280
    #3 0x7fb618ef7561 in bn_expand2 crypto/bn/bn_lib.c:304
    #4 0x7fb618ef819d in BN_bin2bn crypto/bn/bn_lib.c:454
    #5 0x7fb618fd8933 in EC_GROUP_new_from_ecparameters crypto/ec/ec_asn1.c:618
    #6 0x7fb618fd98e8 in EC_GROUP_new_from_ecpkparameters crypto/ec/ec_asn1.c:935
    #7 0x7fb618fd9aec in d2i_ECPKParameters crypto/ec/ec_asn1.c:966
    #8 0x7fb618fdace9 in d2i_ECParameters crypto/ec/ec_asn1.c:1184
    #9 0x7fb618fd1fc7 in eckey_type2param crypto/ec/ec_ameth.c:119
    #10 0x7fb618fd57b4 in eckey_pub_decode crypto/ec/ec_ameth.c:165
    #11 0x7fb6191a9c62 in x509_pubkey_decode crypto/x509/x_pubkey.c:124
    #12 0x7fb6191a9e42 in pubkey_cb crypto/x509/x_pubkey.c:46
    #13 0x7fb618eac032 in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:432
    #14 0x7fb618eacaf5 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:643
    #15 0x7fb618ead288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #16 0x7fb618eab9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #17 0x7fb618eacaf5 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:643
    #18 0x7fb618ead288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #19 0x7fb618eab9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #20 0x7fb618eadd1f in ASN1_item_ex_d2i crypto/asn1/tasn_dec.c:124
    #21 0x7fb618eade35 in ASN1_item_d2i crypto/asn1/tasn_dec.c:114
    #22 0x40310c in FuzzerTestOneInput fuzz/x509.c:33
    #23 0x402afb in testfile fuzz/test-corpus.c:182
    #24 0x402656 in main fuzz/test-corpus.c:226
    #25 0x7fb618551f44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21f44)

SUMMARY: AddressSanitizer: 80 byte(s) leaked in 2 allocation(s).

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #18618

The first commit should cherry pick cleanly to master and the second commit is not necessary there.


_|_Same fix as #18609 for the 3.0 branch as it won't cherry-pick cleanly.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_This fixes a warning from latest gcc.

There is no point in using strncpy here as we
intentionally copy only the string contents without
the terminating NUL. The len is set from strlen().
_|_This fixes a warning from latest gcc.

There is no point in using strncpy here as we
intentionally copy only the string contents without
the terminating NUL. The len is set from strlen().
_|_bn_reduce_once_in_place expects the number of BN_ULONG, but factor_size
is moduli bit size.

Fixes #18625._|_As the potential failure of the OPENSSL_strdup(), it should
be better to check the return value and return error if fails.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #18586

In order to not break existing applications the OpenSSL documentation
related to SHAKE has been updated.
~~The openssl dgst commandline app will log a warning to stderr if
SHAKE128 is used without the -xoflen option.~~

Background:

All digests algorithms (including XOF's) use the bitlen as the default output length.
This results in a security strength of bitlen / 2.

This means that SHAKE128 will by default have an output length of 16
bytes and a security strength of 64 bits.

For SHAKE256 the default output length is 32 bytes and has a security
strength of 128 bits.

This behaviour was present in 1.1.1 and has been duplicated in the
provider SHAKE algorithms for 3.0.

The SHAKE XOF algorithms have a security strength of
min(bitlen, output xof length in bits / 2).

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated (internal doc only)
- [x] tests are added or updated
_|_Fixes openssl#18183.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Otherwise the information that the EC group was imported from
explicit parameters is lost when the key is moved across providers.

Fixes #18600

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_SIZE_MAX is used in a recent fix of this file, but without including
internal/numbers.h, so that macro ends up not existing on some platforms,
resulting in build failures.
_|_As the potential failure of the OPENSSL_strdup(),
it should be better to check the return value and
return error if fails.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_As the potential failure of the OPENSSL_strdup(),
it should be better to check the return value and
return error if fails.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_As the potential failure of the OPENSSL_strdup(),
it should be better to check the return value and
return error if fails.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_- If keymgmt is not available, it's not an error but the error message
  persists in stack
- when setting groups, it's worth saying which group is not available

Fixes #18585 
_|_
Two more that had previously been ignored.
_|_Fix reported performance degradiation on aarch64

This restores the implementation prior to
commit 2621751 ("aes/asm/aesv8-armx.pl: avoid 32-bit lane assignment in CTR mode")
for 64bit targets only, since it is reportedly 2-17% slower,
and the silicon errata only affects 32bit targets.
Only for 32bit targets the new algorithm is used.

Fixes #18445
_|_The -provider and -propquery options did not work on dsaparam and gendsa. Fix this and add tests that check that operations that are not supported by the FIPS provider work when run with

```
-provider default -propquery '?fips!=yes'
```

See also https://bugzilla.redhat.com/show_bug.cgi?id=2094956, where this was initially reported.

Signed-off-by: Clemens Lang <cllang@redhat.com>

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_As the potential failure of the OPENSSL_malloc(),
timestamp_tm could be NULL and be used in ASN1_TIME_to_tm()
without check.
Therefore, it should be better to check the return value of
OPENSSL_malloc() and return error if fails.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_As the potential failure of the OPENSSL_malloc(),
it should be better to add the check and return
error if fails.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_As the potential failure of the OPENSSL_malloc(),
it should be better to add the check and return
error if fails.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #18553

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_As the potential failure of the OPENSSL_zalloc(),
it should be better to add the check and return
error if fails.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Otherwise we might cause a recursive locking.

Fixes #18535
_|_Fixed #18540

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->
_|_This restores the implementation prior to
commit 2621751 ("aes/asm/aesv8-armx.pl: avoid 32-bit lane assignment in CTR mode")
for 64bit targets only, since it is reportedly 2-17% slower,
and the silicon errata only affects 32bit targets.
Only for 32bit targets the new algorithm is used.

Fixes #18445
_|_kdf_derive() calls EVP_KDF_derive(), but didn't do enough to adapt its input
buffer length arguments to fit the requirements to call EVP_KDF_derive().

Fixes #18517
_|_The argument translates into a directory name, and there are platforms
that don't allow spaces (at least not easily), which makes the test fail.
This modifies it to conform a bit better to the usual form for that arg.
_|_`range_should_be_prefix()` was misidentifying whether an IP address range
should in fact be represented as a prefix. This was due to a bug introduced
in commit 42d7d7dd which made this incorrect change:

```` diff
-    OPENSSL_assert(memcmp(min, max, length) <= 0);
+    if (memcmp(min, max, length) <= 0)
+        return -1;
````

This error leads to incorrect DER being encoded/accepted.

Reported by Theo Buehler (@botovq)
_|_If an IP address prefix value is supplied that is too large then a crash
can result. v2i_IPAddrBlocks() should sanity check the prefix value, as
should X509v3_addr_add_prefix().

Reported by Theo Buehler (@botovq)

_|_Affected file: Configurations/unix-Makefile.tmpl

Fixes #18516

-----

This is the same fix as #17605, which was made in master in response to
issue #17602.
_|_If the asnum or rdi fields are NULL and the ASIdentifiers are otherwise
subsets then this will result in a crash. Of note is that rdi will usually
be NULL.

Reported by Theo Buehler (@botovq)

_|_This reverts commit 0d40ca47bd86e74a95c3a2f5fb6c67cdbee93c79.

It was found that the computation produces incorrect results in some
cases.
_|_Same as #18510 for the 1.1.1 branch.
_|_The BN_mod_exp_consttime can produce `result == modulus` instead of 0. This was reported by @guidovranken.

Original fix was developed by @davidben for BoringSSL.
_|_We fix the dsa, dh, ec and rsa export routines so that they are
consistent with each other and do not report success if the allocation
of parameters failed.

This is essentially the same fix as applied in #18483 but applied to all
relevant key types.
_|_The #ifdefs weren't quite correct.

_|_dst->digest needs to be zeroized in case HMAC_CTX_copy
or ossl_prov_digest_copy return failure.

Fixes #18493

_|_If keymgmt is NULL, tmp_keymgmt is allocated and will not be freed.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_EVP_CIPHER_fetch() and EVP_MD_fetch() may push errors to error stack, use
ERR_pop_to_mark to clear errors instead of ERR_clear_last_mark.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This should fix https://github.com/openssl/openssl/pull/18355#issuecomment-1147301367

And another issue I've encountered.
_|_If the call to OSSL_PARAM_BLD_to_param() failed then ec_export was
reporting success, even though it has never called the param_cb.

Found due to:
https://github.com/openssl/openssl/pull/18355#issuecomment-1145993650
_|_Namely the smime certificates used in test_cms
will expire soon and affect tests.

Fixes #15179
_|_Longer private key sizes unnecessarily raise the cycles needed to
compute the shared secret without any increase of the real security.

This also fixes a regression where we weren't printing the recommended-private-length
in the DH parameters/key text output._|_If we get a failure during evp_pkey_copy_downgraded() and on entry *dest
was NULL then we leak the EVP_PKEY that was automatically allocated and
stored in *dest.

Found due to this comment:
https://github.com/openssl/openssl/pull/18355#issuecomment-1145028315
_|_As identified by both clang with a warning and `$> git grep -P '(?<![!=])= NULL \?'`

Signed-off-by: Clemens Lang <cllang@redhat.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
not applicable_|_Namely the smime certificates used in test_cms and the
SM2 certificates will expire soon and affect tests.

Fixes #15179
_|_- Add tests with various curves in TLS1.3
_|_Also check if we have d2i_public_key() function pointer.

Fixes https://github.com/openssl/openssl/pull/18355#issuecomment-1144893289
_|_If the call to ossl_prop_defn_set() fails then the OSSL_PROPERTY_LIST
we just created will leak.

Found as a result of:
https://github.com/openssl/openssl/pull/18355#issuecomment-1139499881
_|_This option is broken since a very long time.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This fixes a regression on 3.0 branch from missing framework when cherry-picking #18331

In the end the conflict was not trivial, I should have noticed. :disappointed: 
_|_This is the 1.1.1 version of #18444

It syncs the certificates with master/3.0.

Fixes #15179
_|_Fixes #15179
_|_Fixes #18431
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_But if a new enough version of Cygwin is detected,
we continue to take advantage of the presence of `dladdr` and `Dl_info`
(as per #9402 i.e. commit 38f6f99c).

"Detection" is based on diff's introduced in Cygwin on 2017-03-08
(`CYGWIN_VERSION_API_MINOR` bumped to `308` upon introduction of `dladdr`):
<https://cygwin.com/git/?p=newlib-cygwin.git;a=commit;h=c8432a01c8401c121940c806a9d868c4adc4cefd>.

Fixes #10200.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The function ossl_provider_free() decrements the refcnt of the
provider and frees it if it has reached 0. This only works if the
refcnt has already been initialised. We must only call
ossl_provider_free() after this initialisation - otherwise it will fail
to free the provider correctly.

Addresses the issue mentioned here:
https://github.com/openssl/openssl/pull/18355#issuecomment-1138741857
_|_Fixes #18388

This just looks like an omission, as this is added to libcrypto and libssl

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_If the callback fails then we don't correctly free providers that were
already in our stack and that we up-refed earlier.
_|_If an error condition occurs then the the decoder that was up-refed in
`ossl_decoder_instance_new` can be leaked.

Found due to the error report here:
https://github.com/openssl/openssl/pull/18355#issuecomment-1138205688

_|_This fixes a glitch in the non-verbose test output
$ make test
[...]
80-test_ciphername.t .... ok
80-test_cmp_http.t ...... 5/?
80-test_cmp_http.t ...... ok   611
80-test_cms.t ........... ok
80-test_cmsapi.t ........ ok

... harmless, but annoying._|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Since this file is generated by configdata.pm, there's no need to include it
among the mandatory dependencies (which end up in the `GENERATE_MANDATORY`
Makefile variable).  In fact, it shouldn't be there any more, as that would
also cause it to be removed by `make clean`.

To compensate, we add an explicit removal of that file in the `distclean`
target on all platform families.

Fixes #18396
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_There is no `sys/select.h` on HP-UX and the man page lists `sys/time.h` as the correct header for `select`._|_This fixes a couple of ia64 assembly source files that need to be preprocessed to use the correct extension._|_…ange

Related: CVE-2022-29242

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This was missed in an earlier merge that removed it.
_|_Prior to the crash there is an out of memory error
in X509_verify_cert which makes the chain NULL or
empty.  The error is ignored by ssl_add_cert_chain,
and ssl_security_cert_chain crashes due to the
unchecked null pointer.

This is reproducible with my error injection patch.

The test vector has been validated on the 1.1.1 branch
but the issue is of course identical in all branches.
```
$ ERROR_INJECT=1652848273 ../util/shlib_wrap.sh ./server-test ./corpora/server/47c8e933c4ec66fa3c309422283dfe0f31aafae8# ./corpora/server/47c8e933c4ec66fa3c309422283dfe0f31aafae8
    #0 0x7f3a8f766eba in __sanitizer_print_stack_trace ../../../../gcc-trunk/libsanitizer/asan/asan_stack.cpp:87
    #1 0x403ba4 in my_malloc fuzz/test-corpus.c:114
    #2 0x7f3a8f39a430 in CRYPTO_zalloc crypto/mem.c:230
    #3 0x7f3a8f46bd3b in sk_reserve crypto/stack/stack.c:180
    #4 0x7f3a8f46bd3b in OPENSSL_sk_insert crypto/stack/stack.c:242
    #5 0x7f3a8f4a4fd8 in sk_X509_push include/openssl/x509.h:99
    #6 0x7f3a8f4a4fd8 in X509_verify_cert crypto/x509/x509_vfy.c:286
    #7 0x7f3a8fed726e in ssl_add_cert_chain ssl/statem/statem_lib.c:959
    #8 0x7f3a8fed726e in ssl3_output_cert_chain ssl/statem/statem_lib.c:1015
    #9 0x7f3a8fee1c50 in tls_construct_server_certificate ssl/statem/statem_srvr.c:3812
    #10 0x7f3a8feb8b0a in write_state_machine ssl/statem/statem.c:843
    #11 0x7f3a8feb8b0a in state_machine ssl/statem/statem.c:443
    #12 0x7f3a8fe84b3f in SSL_do_handshake ssl/ssl_lib.c:3718
    #13 0x403202 in FuzzerTestOneInput fuzz/server.c:740
    #14 0x40371b in testfile fuzz/test-corpus.c:182
    #15 0x402856 in main fuzz/test-corpus.c:226
    #16 0x7f3a8e859f44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21f44)
    #17 0x402936  (/home/ed/OPC/openssl/fuzz/server-test+0x402936)

AddressSanitizer:DEADLYSIGNAL
=================================================================
==8400==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000158 (pc 0x7f3a8f4d822f bp 0x7ffc39b76190 sp 0x7ffc39b760a0 T0)
==8400==The signal is caused by a READ memory access.
==8400==Hint: address points to the zero page.
    #0 0x7f3a8f4d822f in x509v3_cache_extensions crypto/x509v3/v3_purp.c:386
    #1 0x7f3a8f4d9d3a in X509_check_purpose crypto/x509v3/v3_purp.c:84
    #2 0x7f3a8f4da02a in X509_get_extension_flags crypto/x509v3/v3_purp.c:921
    #3 0x7f3a8feff7d2 in ssl_security_cert_sig ssl/t1_lib.c:2518
    #4 0x7f3a8feff7d2 in ssl_security_cert ssl/t1_lib.c:2542
    #5 0x7f3a8feffa03 in ssl_security_cert_chain ssl/t1_lib.c:2562
    #6 0x7f3a8fed728d in ssl_add_cert_chain ssl/statem/statem_lib.c:963
    #7 0x7f3a8fed728d in ssl3_output_cert_chain ssl/statem/statem_lib.c:1015
    #8 0x7f3a8fee1c50 in tls_construct_server_certificate ssl/statem/statem_srvr.c:3812
    #9 0x7f3a8feb8b0a in write_state_machine ssl/statem/statem.c:843
    #10 0x7f3a8feb8b0a in state_machine ssl/statem/statem.c:443
    #11 0x7f3a8fe84b3f in SSL_do_handshake ssl/ssl_lib.c:3718
    #12 0x403202 in FuzzerTestOneInput fuzz/server.c:740
    #13 0x40371b in testfile fuzz/test-corpus.c:182
    #14 0x402856 in main fuzz/test-corpus.c:226
    #15 0x7f3a8e859f44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21f44)
    #16 0x402936  (/home/ed/OPC/openssl/fuzz/server-test+0x402936)

AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV crypto/x509v3/v3_purp.c:386 in x509v3_cache_extensions
==8400==ABORTING
```
_|_It turns out that since commit df368ecce4e2d2ab8aedb4fa5eadb08992b52b4f back in 2004, the `x509` app has a subtle bug: when the `-CAserial` option is given with `-CA` and (as usual) also the `-in` option is given, the serial number file is ignored and instead a random serial number is used in the newly created cert.

The recent comment https://github.com/openssl/openssl/pull/13711#issuecomment-1131985954 made me investigate on this topic, and I found that due to a consequential mistake of mine in commit 05458fdb73dcca30edace5ad727a15d6d919e215 this bug extended since OpenSSL 3.0 to the case that the `-new` option (rather than `-in`) is given along with `-CA`.

This PR fixes both cases.

This PR meanwhile also does the following:
* With `-CA` given but both `-CAserial` and `-CAcreateserial` not given, use a random serial number.
* improve `openssl-x509.pod.in` regarding the cert serial number storage and related options
* fix error handling of `load_serial()` in `apps.c` when calling `rand_serial()`.
* ~change serial number file semantics to post- incrementation as documented~
* apps/x509: add warnings for options ignored when `-CA` is not specified

_|_This is reproducible with my error injection patch.

The test vector has been validated on the 1.1.1 branch
but the issue is of course identical in all branches.
```
$ ERROR_INJECT=1653267699 ../util/shlib_wrap.sh ./x509-test ./corpora/x509/5f4034ae85d6587dcad4da3e812e80f3d312894d
ERROR_INJECT=1653267699
    #0 0x7fd485a6ad4f in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cc:36
    #1 0x55c12d268724 in my_malloc fuzz/test-corpus.c:114
    #2 0x7fd484f51a75 in CRYPTO_zalloc crypto/mem.c:230
    #3 0x7fd484ed778d in EVP_DigestInit_ex crypto/evp/digest.c:139
    #4 0x7fd4850a9849 in X509_issuer_and_serial_hash crypto/x509/x509_cmp.c:44
    #5 0x55c12d268951 in FuzzerTestOneInput fuzz/x509.c:44
    #6 0x55c12d268239 in testfile fuzz/test-corpus.c:182
    #7 0x55c12d267c7f in main fuzz/test-corpus.c:226
    #8 0x7fd483a42082 in __libc_start_main ../csu/libc-start.c:308
    #9 0x55c12d267e5d in _start (/home/ed/OPCToolboxV5/Source/Core/OpenSSL/openssl/fuzz/x509-test+0x3e5d)

=================================================================
==1058475==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 268 byte(s) in 1 object(s) allocated from:
    #0 0x7fd485a5dc3e in __interceptor_realloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:163
    #1 0x7fd484d2eb9b in BUF_MEM_grow crypto/buffer/buffer.c:97
    #2 0x7fd4850b2913 in X509_NAME_oneline crypto/x509/x509_obj.c:43
    #3 0x7fd4850a982f in X509_issuer_and_serial_hash crypto/x509/x509_cmp.c:41
    #4 0x55c12d268951 in FuzzerTestOneInput fuzz/x509.c:44
    #5 0x55c12d268239 in testfile fuzz/test-corpus.c:182
    #6 0x55c12d267c7f in main fuzz/test-corpus.c:226
    #7 0x7fd483a42082 in __libc_start_main ../csu/libc-start.c:308

SUMMARY: AddressSanitizer: 268 byte(s) leaked in 1 allocation(s).
```
_|_This is reproducible with my error injection patch:
```
$ ERROR_INJECT=1653267699 ../util/shlib_wrap.sh ./x509-test ./corpora/x509/5f4034ae85d6587dcad4da3e812e80f3d312894d
ERROR_INJECT=1653267699
    #0 0x7fd485a6ad4f in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cc:36
    #1 0x55c12d268724 in my_malloc fuzz/test-corpus.c:114
    #2 0x7fd484f51a75 in CRYPTO_zalloc crypto/mem.c:230
    #3 0x7fd484ed778d in EVP_DigestInit_ex crypto/evp/digest.c:139
    #4 0x7fd4850a9849 in X509_issuer_and_serial_hash crypto/x509/x509_cmp.c:44
    #5 0x55c12d268951 in FuzzerTestOneInput fuzz/x509.c:44
    #6 0x55c12d268239 in testfile fuzz/test-corpus.c:182
    #7 0x55c12d267c7f in main fuzz/test-corpus.c:226
    #8 0x7fd483a42082 in __libc_start_main ../csu/libc-start.c:308
    #9 0x55c12d267e5d in _start (/home/ed/OPCToolboxV5/Source/Core/OpenSSL/openssl/fuzz/x509-test+0x3e5d)

=================================================================
==1058475==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 268 byte(s) in 1 object(s) allocated from:
    #0 0x7fd485a5dc3e in __interceptor_realloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cc:163
    #1 0x7fd484d2eb9b in BUF_MEM_grow crypto/buffer/buffer.c:97
    #2 0x7fd4850b2913 in X509_NAME_oneline crypto/x509/x509_obj.c:43
    #3 0x7fd4850a982f in X509_issuer_and_serial_hash crypto/x509/x509_cmp.c:41
    #4 0x55c12d268951 in FuzzerTestOneInput fuzz/x509.c:44
    #5 0x55c12d268239 in testfile fuzz/test-corpus.c:182
    #6 0x55c12d267c7f in main fuzz/test-corpus.c:226
    #7 0x7fd483a42082 in __libc_start_main ../csu/libc-start.c:308

SUMMARY: AddressSanitizer: 268 byte(s) leaked in 1 allocation(s).
```
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Except for EVP_CTRL_INIT, all cases may return negative values when errors happen. 
This pr unifies the return checks of EVP_CIPHER_CTX_ctrl. 

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [ ] tests are added or updated
_|_This is reproducible with my error injection patch.

The test vector has been validated on the 1.1.1 branch
but the issue is of course identical in all branches.

```
$ ERROR_INJECT=1652710284 ../util/shlib_wrap.sh ./server-test ./corpora/server/4e48da8aecce6b9b58e8e4dbbf0523e6d2dd56dc
140587884632000:error:03078041:bignum routines:bn_expand_internal:malloc failure:crypto/bn/bn_lib.c:282:
140587884632000:error:10103003:elliptic curve routines:ec_key_simple_oct2priv:BN lib:crypto/ec/ec_key.c:662:
140587884632000:error:100DE08E:elliptic curve routines:old_ec_priv_decode:decode error:crypto/ec/ec_ameth.c:464:
140587884632000:error:0D0680A8:asn1 encoding routines:asn1_check_tlen:wrong tag:crypto/asn1/tasn_dec.c:1149:
140587884632000:error:0D07803A:asn1 encoding routines:asn1_item_embed_d2i:nested asn1 error:crypto/asn1/tasn_dec.c:309:Type=X509_ALGOR
140587884632000:error:0D08303A:asn1 encoding routines:asn1_template_noexp_d2i:nested asn1 error:crypto/asn1/tasn_dec.c:646:Field=pkeyalg, Type=PKCS8_PRIV_KEY_INFO
140587884632000:error:0907B00D:PEM routines:PEM_read_bio_PrivateKey:ASN1 lib:crypto/pem/pem_pkey.c:88:

=================================================================
==19676==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 24 byte(s) in 1 object(s) allocated from:
    #0 0x7fdd2a6bb09f in __interceptor_malloc ../../../../gcc-trunk/libsanitizer/asan/asan_malloc_linux.cpp:69
    #1 0x7fdd2a2fa430 in CRYPTO_zalloc crypto/mem.c:230
    #2 0x7fdd2a15df11 in BN_new crypto/bn/bn_lib.c:246
    #3 0x7fdd2a15df88 in BN_secure_new crypto/bn/bn_lib.c:257
    #4 0x7fdd2a247390 in ec_key_simple_oct2priv crypto/ec/ec_key.c:655
    #5 0x7fdd2a241fc5 in d2i_ECPrivateKey crypto/ec/ec_asn1.c:1030
    #6 0x7fdd2a23dac5 in old_ec_priv_decode crypto/ec/ec_ameth.c:463
    #7 0x7fdd2a109db7 in d2i_PrivateKey crypto/asn1/d2i_pr.c:46
    #8 0x7fdd2a33ab16 in PEM_read_bio_PrivateKey crypto/pem/pem_pkey.c:84
    #9 0x7fdd2a3330b6 in PEM_read_bio_ECPrivateKey crypto/pem/pem_all.c:151
    #10 0x402dba in FuzzerTestOneInput fuzz/server.c:592
    #11 0x40370b in testfile fuzz/test-corpus.c:182
    #12 0x402846 in main fuzz/test-corpus.c:226
    #13 0x7fdd297b9f44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21f44)

SUMMARY: AddressSanitizer: 24 byte(s) leaked in 1 allocation(s).
```
This is the equivalent of #18361 for the master / 3.0 branch_|_This happens for instance with
fuzz/corpora/asn1/65cf44e85614c62f10cf3b7a7184c26293a19e4a
and causes the OPENSSL_malloc below to choke on the
zero length allocation request.

This is the equivalent of #18363 for the master / 3.0 branch_|_This can be reproduced with my error injection patch.

The test vector has been validated on the 1.1.1 branch
but the issue is of course identical in all branches.

```
$ ERROR_INJECT=1653520461 ../util/shlib_wrap.sh ./cms-test ./corpora/cms/3eff1d2f1232bd66d5635db2c3f9e7f23830dfd1
log file: cms-3eff1d2f1232bd66d5635db2c3f9e7f23830dfd1-32454-test.out
ERROR_INJECT=1653520461
    #0 0x7fd5d8b8eeba in __sanitizer_print_stack_trace ../../../../gcc-trunk/libsanitizer/asan/asan_stack.cpp:87
    #1 0x402fc4 in my_realloc fuzz/test-corpus.c:129
    #2 0x7fd5d8893c49 in sk_reserve crypto/stack/stack.c:198
    #3 0x7fd5d8893c49 in OPENSSL_sk_insert crypto/stack/stack.c:242
    #4 0x7fd5d88d6d7f in sk_GENERAL_NAMES_push include/openssl/x509v3.h:168
    #5 0x7fd5d88d6d7f in crl_set_issuers crypto/x509/x_crl.c:111
    #6 0x7fd5d88d6d7f in crl_cb crypto/x509/x_crl.c:246
    #7 0x7fd5d85dc032 in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:432
    #8 0x7fd5d85dcaf5 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:643
    #9 0x7fd5d85dd288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #10 0x7fd5d85db2b5 in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:259
    #11 0x7fd5d85dc813 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:611
    #12 0x7fd5d85dd288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #13 0x7fd5d85db9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #14 0x7fd5d85dca28 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:633
    #15 0x7fd5d85dd288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #16 0x7fd5d85db9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #17 0x7fd5d85dcaf5 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:643
    #18 0x7fd5d85dd7d3 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:494
    #19 0x7fd5d85db9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #20 0x7fd5d85ddd1f in ASN1_item_ex_d2i crypto/asn1/tasn_dec.c:124
    #21 0x7fd5d85dde35 in ASN1_item_d2i crypto/asn1/tasn_dec.c:114
    #22 0x7fd5d85a77e0 in ASN1_item_d2i_bio crypto/asn1/a_d2i_fp.c:69
    #23 0x402845 in FuzzerTestOneInput fuzz/cms.c:43
    #24 0x402bbb in testfile fuzz/test-corpus.c:182
    #25 0x402626 in main fuzz/test-corpus.c:226
    #26 0x7fd5d7c81f44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21f44)
    #27 0x402706  (/home/ed/OPC/openssl/fuzz/cms-test+0x402706)

=================================================================
==29625==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 32 byte(s) in 1 object(s) allocated from:
    #0 0x7fd5d8b8309f in __interceptor_malloc ../../../../gcc-trunk/libsanitizer/asan/asan_malloc_linux.cpp:69
    #1 0x7fd5d87c2430 in CRYPTO_zalloc crypto/mem.c:230
    #2 0x7fd5d889501f in OPENSSL_sk_new_reserve crypto/stack/stack.c:209
    #3 0x7fd5d85dcbc3 in sk_ASN1_VALUE_new_null include/openssl/asn1t.h:928
    #4 0x7fd5d85dcbc3 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:577
    #5 0x7fd5d85dd288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #6 0x7fd5d85db104 in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:178
    #7 0x7fd5d85ddd1f in ASN1_item_ex_d2i crypto/asn1/tasn_dec.c:124
    #8 0x7fd5d85dde35 in ASN1_item_d2i crypto/asn1/tasn_dec.c:114
    #9 0x7fd5d88f86d9 in X509V3_EXT_d2i crypto/x509v3/v3_lib.c:142
    #10 0x7fd5d88d6d3c in crl_set_issuers crypto/x509/x_crl.c:97
    #11 0x7fd5d88d6d3c in crl_cb crypto/x509/x_crl.c:246
    #12 0x7fd5d85dc032 in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:432
    #13 0x7fd5d85dcaf5 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:643
    #14 0x7fd5d85dd288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #15 0x7fd5d85db2b5 in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:259
    #16 0x7fd5d85dc813 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:611
    #17 0x7fd5d85dd288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #18 0x7fd5d85db9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #19 0x7fd5d85dca28 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:633
    #20 0x7fd5d85dd288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #21 0x7fd5d85db9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #22 0x7fd5d85dcaf5 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:643
    #23 0x7fd5d85dd7d3 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:494
    #24 0x7fd5d85db9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #25 0x7fd5d85ddd1f in ASN1_item_ex_d2i crypto/asn1/tasn_dec.c:124
    #26 0x7fd5d85dde35 in ASN1_item_d2i crypto/asn1/tasn_dec.c:114
    #27 0x7fd5d85a77e0 in ASN1_item_d2i_bio crypto/asn1/a_d2i_fp.c:69
    #28 0x402845 in FuzzerTestOneInput fuzz/cms.c:43
    #29 0x402bbb in testfile fuzz/test-corpus.c:182
    #30 0x402626 in main fuzz/test-corpus.c:226
    #31 0x7fd5d7c81f44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21f44)

SUMMARY: AddressSanitizer: 32 byte(s) leaked in 1 allocation(s).
```_|_Fixes #18359

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_This is reproducible with my error injection patch:
```
$ ERROR_INJECT=1652710284 ../util/shlib_wrap.sh ./server-test ./corpora/server/4e48da8aecce6b9b58e8e4dbbf0523e6d2dd56dc
140587884632000:error:03078041:bignum routines:bn_expand_internal:malloc failure:crypto/bn/bn_lib.c:282:
140587884632000:error:10103003:elliptic curve routines:ec_key_simple_oct2priv:BN lib:crypto/ec/ec_key.c:662:
140587884632000:error:100DE08E:elliptic curve routines:old_ec_priv_decode:decode error:crypto/ec/ec_ameth.c:464:
140587884632000:error:0D0680A8:asn1 encoding routines:asn1_check_tlen:wrong tag:crypto/asn1/tasn_dec.c:1149:
140587884632000:error:0D07803A:asn1 encoding routines:asn1_item_embed_d2i:nested asn1 error:crypto/asn1/tasn_dec.c:309:Type=X509_ALGOR
140587884632000:error:0D08303A:asn1 encoding routines:asn1_template_noexp_d2i:nested asn1 error:crypto/asn1/tasn_dec.c:646:Field=pkeyalg, Type=PKCS8_PRIV_KEY_INFO
140587884632000:error:0907B00D:PEM routines:PEM_read_bio_PrivateKey:ASN1 lib:crypto/pem/pem_pkey.c:88:

=================================================================
==19676==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 24 byte(s) in 1 object(s) allocated from:
    #0 0x7fdd2a6bb09f in __interceptor_malloc ../../../../gcc-trunk/libsanitizer/asan/asan_malloc_linux.cpp:69
    #1 0x7fdd2a2fa430 in CRYPTO_zalloc crypto/mem.c:230
    #2 0x7fdd2a15df11 in BN_new crypto/bn/bn_lib.c:246
    #3 0x7fdd2a15df88 in BN_secure_new crypto/bn/bn_lib.c:257
    #4 0x7fdd2a247390 in ec_key_simple_oct2priv crypto/ec/ec_key.c:655
    #5 0x7fdd2a241fc5 in d2i_ECPrivateKey crypto/ec/ec_asn1.c:1030
    #6 0x7fdd2a23dac5 in old_ec_priv_decode crypto/ec/ec_ameth.c:463
    #7 0x7fdd2a109db7 in d2i_PrivateKey crypto/asn1/d2i_pr.c:46
    #8 0x7fdd2a33ab16 in PEM_read_bio_PrivateKey crypto/pem/pem_pkey.c:84
    #9 0x7fdd2a3330b6 in PEM_read_bio_ECPrivateKey crypto/pem/pem_all.c:151
    #10 0x402dba in FuzzerTestOneInput fuzz/server.c:592
    #11 0x40370b in testfile fuzz/test-corpus.c:182
    #12 0x402846 in main fuzz/test-corpus.c:226
    #13 0x7fdd297b9f44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21f44)

SUMMARY: AddressSanitizer: 24 byte(s) leaked in 1 allocation(s).
```_|_This happens usually if an template object is created
and there is an out of memory error before the ASN1_OP_NEW_POST
method is called, but asn1_item_embed_free calls now the
ASN1_OP_FREE_POST which may crash because the object is not
properly initialized.  Apparently that is only an issue with
the ASN1_OP_FREE_POST handling of crypot/x509/x_crl.c, which
ought to be tolerant to incomplete initialized objects.

The error can be reproduced with the reproducible error injection patch:
```
$ ERROR_INJECT=1652890550 ../util/shlib_wrap.sh ./asn1-test ./corpora/asn1/0ff17293911f54d1538b9896563a4048d67d9ee4
    #0 0x7faae9dbeeba in __sanitizer_print_stack_trace ../../../../gcc-trunk/libsanitizer/asan/asan_stack.cpp:87
    #1 0x408dc4 in my_malloc fuzz/test-corpus.c:114
    #2 0x7faae99f2430 in CRYPTO_zalloc crypto/mem.c:230
    #3 0x7faae97f09e5 in ASN1_STRING_type_new crypto/asn1/asn1_lib.c:341
    #4 0x7faae98118f7 in asn1_primitive_new crypto/asn1/tasn_new.c:318
    #5 0x7faae9812401 in asn1_item_embed_new crypto/asn1/tasn_new.c:78
    #6 0x7faae9812401 in asn1_template_new crypto/asn1/tasn_new.c:240
    #7 0x7faae9812315 in asn1_item_embed_new crypto/asn1/tasn_new.c:137
    #8 0x7faae9812315 in asn1_template_new crypto/asn1/tasn_new.c:240
    #9 0x7faae9812a54 in asn1_item_embed_new crypto/asn1/tasn_new.c:137
    #10 0x7faae9812a54 in ASN1_item_ex_new crypto/asn1/tasn_new.c:39
    #11 0x7faae980be51 in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:325
    #12 0x7faae980c813 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:611
    #13 0x7faae980d288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #14 0x7faae980b9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #15 0x7faae980caf5 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:643
    #16 0x7faae980d7d3 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:494
    #17 0x7faae980b9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #18 0x7faae980dd1f in ASN1_item_ex_d2i crypto/asn1/tasn_dec.c:124
    #19 0x7faae980de35 in ASN1_item_d2i crypto/asn1/tasn_dec.c:114
    #20 0x40712c in FuzzerTestOneInput fuzz/asn1.c:301
    #21 0x40893b in testfile fuzz/test-corpus.c:182
    #22 0x406b86 in main fuzz/test-corpus.c:226
    #23 0x7faae8eb1f44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21f44)

AddressSanitizer:DEADLYSIGNAL
=================================================================
==1194==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x7faae9b0625f bp 0x7fffffe41a00 sp 0x7fffffe41920 T0)
==1194==The signal is caused by a READ memory access.
==1194==Hint: address points to the zero page.
    #0 0x7faae9b0625f in crl_cb crypto/x509/x_crl.c:258
    #1 0x7faae9811255 in asn1_item_embed_free crypto/asn1/tasn_fre.c:113
    #2 0x7faae9812a65 in asn1_item_embed_new crypto/asn1/tasn_new.c:150
    #3 0x7faae9812a65 in ASN1_item_ex_new crypto/asn1/tasn_new.c:39
    #4 0x7faae980be51 in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:325
    #5 0x7faae980c813 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:611
    #6 0x7faae980d288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #7 0x7faae980b9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #8 0x7faae980caf5 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:643
    #9 0x7faae980d7d3 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:494
    #10 0x7faae980b9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #11 0x7faae980dd1f in ASN1_item_ex_d2i crypto/asn1/tasn_dec.c:124
    #12 0x7faae980de35 in ASN1_item_d2i crypto/asn1/tasn_dec.c:114
    #13 0x40712c in FuzzerTestOneInput fuzz/asn1.c:301
    #14 0x40893b in testfile fuzz/test-corpus.c:182
    #15 0x406b86 in main fuzz/test-corpus.c:226
    #16 0x7faae8eb1f44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21f44)

AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV crypto/x509/x_crl.c:258 in crl_cb
==1194==ABORTING
```
_|_This happens usually if an template object is created
and there is an out of memory error before the ASN1_OP_NEW_POST
method is called, but asn1_item_embed_free calls now the
ASN1_OP_FREE_POST which may crashe because the object is not properly
initialized.  Work arund this by calling ASN1_OP_NEW_POST, and
ignore the result, before calling asn1_item_embed_free.

The error can be reproduced with the reproducible error injection patch:

```
$ ERROR_INJECT=1652890550 ../util/shlib_wrap.sh ./asn1-test ./corpora/asn1/0ff17293911f54d1538b9896563a4048d67d9ee4
    #0 0x7faae9dbeeba in __sanitizer_print_stack_trace ../../../../gcc-trunk/libsanitizer/asan/asan_stack.cpp:87
    #1 0x408dc4 in my_malloc fuzz/test-corpus.c:114
    #2 0x7faae99f2430 in CRYPTO_zalloc crypto/mem.c:230
    #3 0x7faae97f09e5 in ASN1_STRING_type_new crypto/asn1/asn1_lib.c:341
    #4 0x7faae98118f7 in asn1_primitive_new crypto/asn1/tasn_new.c:318
    #5 0x7faae9812401 in asn1_item_embed_new crypto/asn1/tasn_new.c:78
    #6 0x7faae9812401 in asn1_template_new crypto/asn1/tasn_new.c:240
    #7 0x7faae9812315 in asn1_item_embed_new crypto/asn1/tasn_new.c:137
    #8 0x7faae9812315 in asn1_template_new crypto/asn1/tasn_new.c:240
    #9 0x7faae9812a54 in asn1_item_embed_new crypto/asn1/tasn_new.c:137
    #10 0x7faae9812a54 in ASN1_item_ex_new crypto/asn1/tasn_new.c:39
    #11 0x7faae980be51 in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:325
    #12 0x7faae980c813 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:611
    #13 0x7faae980d288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #14 0x7faae980b9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #15 0x7faae980caf5 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:643
    #16 0x7faae980d7d3 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:494
    #17 0x7faae980b9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #18 0x7faae980dd1f in ASN1_item_ex_d2i crypto/asn1/tasn_dec.c:124
    #19 0x7faae980de35 in ASN1_item_d2i crypto/asn1/tasn_dec.c:114
    #20 0x40712c in FuzzerTestOneInput fuzz/asn1.c:301
    #21 0x40893b in testfile fuzz/test-corpus.c:182
    #22 0x406b86 in main fuzz/test-corpus.c:226
    #23 0x7faae8eb1f44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21f44)

AddressSanitizer:DEADLYSIGNAL
=================================================================
==1194==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x7faae9b0625f bp 0x7fffffe41a00 sp 0x7fffffe41920 T0)
==1194==The signal is caused by a READ memory access.
==1194==Hint: address points to the zero page.
    #0 0x7faae9b0625f in crl_cb crypto/x509/x_crl.c:258
    #1 0x7faae9811255 in asn1_item_embed_free crypto/asn1/tasn_fre.c:113
    #2 0x7faae9812a65 in asn1_item_embed_new crypto/asn1/tasn_new.c:150
    #3 0x7faae9812a65 in ASN1_item_ex_new crypto/asn1/tasn_new.c:39
    #4 0x7faae980be51 in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:325
    #5 0x7faae980c813 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:611
    #6 0x7faae980d288 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:518
    #7 0x7faae980b9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #8 0x7faae980caf5 in asn1_template_noexp_d2i crypto/asn1/tasn_dec.c:643
    #9 0x7faae980d7d3 in asn1_template_ex_d2i crypto/asn1/tasn_dec.c:494
    #10 0x7faae980b9ce in asn1_item_embed_d2i crypto/asn1/tasn_dec.c:382
    #11 0x7faae980dd1f in ASN1_item_ex_d2i crypto/asn1/tasn_dec.c:124
    #12 0x7faae980de35 in ASN1_item_d2i crypto/asn1/tasn_dec.c:114
    #13 0x40712c in FuzzerTestOneInput fuzz/asn1.c:301
    #14 0x40893b in testfile fuzz/test-corpus.c:182
    #15 0x406b86 in main fuzz/test-corpus.c:226
    #16 0x7faae8eb1f44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21f44)

AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV crypto/x509/x_crl.c:258 in crl_cb
==1194==ABORTING
```
_|_The VIA Nehemiah CPU is a x86-32 CPU without SSE2 support. It does not
support multi byte nops and considers the endb32 opcode as an invalid
instruction.

First patch renames .s -> .S so the pre-processor picks up the ifdef and second
patch adds the ifdef to the perl script.

Fixes: #18334_|_Fixes #18306

Signed-off-by: Randall S. Becker <rsbecker@nexbridge.com>

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [X] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_It can fail on Windows 7 for example and we have the fallback
to strcasecmp in place.

Fixes #18322
_|_Fixes #18226._|_Just extending the comment so Coveriety knows as well.

_|_Fixes #18226.

This is a start, but  I have some questions remaining about it.

Firstly, this adds new APIs to allow libctx to be specified, but that punts this to 3.1, not 3.0. Which raises the question of how (or if) we want to fix this in 3.0.

Secondly, it's worth noting that existing code &mdash;  including `OPENSSL_load_builtin_modules` &mdash; will only load into the default libctx. Do we want to change all of our own implementations to fix this? It means adding `OPENSSL_load_builtin_modules_ex` as well, I guess._|_Follow-on from #18083.

These tests enforce 1.1 behaviour so they will naturally fail. I trust these results will be of interest._|_When a socket connection is done using BIO_new_connect,
the ktls_enable is done too early, and fails with ENOTCONN.
Therefore the KLTS ioctl will fail later with ENOPROTOOPT.
Fix that by doing the ktls_enable after the connection
succeeded, not when the socket is created as that will
always fail.

One example where this happens is doit_localhost in
test/ssl_old_test.c, and therefore, contrary to the expectation
the -client_ktls option did never enable the client KTLS
connection, but this was not noticed, because there was no
diagnostic output, and it was only visible with strace output.

Also enhanced the ssl_old_test -client_ktls/-server_ktls
options together with -v option to print a summary line
if and how KTLS was negotiated in server and client.

While I am already there adjusted the usage info of
the -s_cert, -s_key commands, and allow -time to print the
timings of ktls connections.


##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_There may a better place to put that forward declaration in, feel free to point me where.

Random thought: should there be CI coverage for UWP builds, to avoid these kinds of issues in the future?_|_Fixes #18243. Also fixes #18242, since we may as well while I'm here._|_We documented the option in 3.0 but we forgot to implement it.

Fixes #18295
_|_This is just a backport of #18282 for the 3.0 branch.

This PR encompasses cleanups, build, and initialization fixes for the OPENSSL_strcasecmp related fix.

I recommend reviewing by individual commits.

It incorporates the PR from #18241.
_|_Fixes openssl#16984.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_
Fixes: openssl#18047.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This PR encompasses cleanups, build, and initialization fixes for the OPENSSL_strcasecmp related fix.

I recommend reviewing by individual commits.

We will need similar PR for 3.0 but that will require some backporting effort because the patches won't apply cleanly. In the end however the final state on 3.0 should be exactly the same.
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->
This fixes the issue mentioned in https://github.com/openssl/openssl/pull/16638#issuecomment-1121281173

I have cherry-picked a commit from #17640 so Cc @hbrausen. If #17640 gets merged before this, then that commit will be dropped.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->_|_Fixes #18262

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_This reverts commit 6009997abd2594d5a7c0606176f404190922b74d.

The .s extension is really incorrect as the files contain preprocessor directives._|_The same workaround was already removed in sockets.h
in 5c8b7b4caa0faedb69277063a7c6b3a8e56c6308

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
_|_As of clang-14 the strict aliasing is causing code to magically disappear.
By explicitly inlining the code, the aliasing problem evaporates.

Fixes #18225

I'd like to wait until llvm/llvm-project#55255 gets commented on before commiting this._|_This accompanies #18151 so it should be merged to 3.0 as well.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Likewise for no-tls1_2 no-ec no-dh

Currently these configurations seem to be failing several tests.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_add /test/evp_pkey_ctx_new_from_name

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This replaces the usage of `#ifdef AF_INET6` in `bio/*` with `#if OPENSSL_USE_IPV6`. By default this still uses `AF_INET6`, but it allows the exclusion of all IPv6 related code by setting `OPENSSL_USE_IPV6=0`.
<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->_|_OPENSSL_strcasecmp() is directly used in EVP_PKEY_Q_keygen but that needs an initialization.

This was reported on openssl-users ML.
_|_This should hopefully fix not just the build on NONSTOP platform but also older POSIX systems.

It also allows for passing `-DOPENSSL_NO_LOCALE` as a workaround to `./Configure` command.

This is alternative to #18233

Fixes #18232 _|_This should hopefully fix not just the build on NONSTOP platform but also older POSIX systems.

It also allows for passing `-DOPENSSL_NO_LOCALE` as a workaround to `./Configure` command.

This is alternative to #18233

Fixes #18232 _|_This is in line with the NEWS entry (erroneously) announcing such for 3.0.

Fixes #18194

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_This replaces #18195.

Fixes #18184
_|_Otherwise, it seems nmake doesn't invoke perl properly.

See also the discussion here: https://github.com/eclipse-openj9/openj9/pull/14900#issuecomment-1095904613._|_This allows handshake to proceed if the maximum TLS version enabled is <1.3

Fixes #13583

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Fixes #18205
##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Fixes: openssl#18146

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This prevents on error responses irrelevant client-side errors regarding the content type expected for responses.
When the response contains a redirection, it prevents wrong failure.
_|_This fixes a segfault on `openssl genpkey -genparam -algorithm DH -pkeyopt dh_paramgen_type:4`
_|_As #18159 was initially created for 3.0, this is a cherry-pick of it to master with proposed adjustments.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_When assigning pointers to functions in an OSSL_DISPATCH table, we try
to ensure that those functions are properly defined or declared with
an extra declaration using the corresponding function typedefs that
are defined by include/openssl/core_dispatch.h.

For the core dispatch table, found in crypto/provider_core.c, it seems
we forgot this habit, and thus didn't ensure well enough that the
function pointers that are assigned in the table can actually be used
for those dispatch table indexes.

This change adds all the missing declarations, and compensates for
differences with functions that do the necessary casting, making those
explicit rather than implicit, thereby trying to assure that we know
what we're doing.

One function is not fixed in this change, because there's a controversy,
a clash between the signature of BIO_ctrl() and OSSL_FUNC_BIO_ctrl_fn.
They have different return types.
_|_`eddsa_digest_signverify_init()` has an `mdname` parameter although the function fails if it is not NULL/empty (because for Ed25519 and Ed448 the digest algorithm is implicit).
This turns out to be a problem if a general signing operation has an explicit default digest algorithm,
as for self-signature proof-of-possession operations in CMP/CRMF.

This PR resets and provided `md` argument of `ASN1_item_sign_ex()` if no digest should be used.
See also `EVP_PKEY_get_default_digest_name()`.

Fixes #18184
_|_Backport of #18038 to 1.1.

Fixes #18035._|_Currently this configuration seems to be failing several tests.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_It takes and works with a X509_TRUST_* id, not a NID.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->_|_This memory leak is triggered when configuring with 'no-legacy'
_|_We use it as a boolean everywhere in the code and there is no reason to distinguish between the 0 and -1 return.

Fixes #18176 

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
_|_- getline does set &txbufp content at return, make sure it can be done.
  - fixes warning 'passing argument 1 of ‘getline’ from incompatible pointer type'
- remove OPENSSL_free on non allocated fixed size array
  - fixes 'free(): invalid pointer'

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #18158
This is #18159 with the review feedback incorporated, since @beldmit is currently not at a machine where he can do the changes himself.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Move ossl_deinit_casecmp to the end because calls like depend on casecmp.

Fixes https://github.com/openssl/openssl/issues/18160_|_Before we call `evp_pkey_name2type`, we must have a locale object, so call `OPENSSL_init_crypto` explicitly.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_…connection.

Fixes openssl#18047.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Introducing the concept of reserving the store where a number of
provided operation methods are to be stored.

This avoids racing when constructing provided methods, which is
especially pertinent when multiple threads are trying to fetch the
same method, or even any implementation for the same given operation
type.

This introduces a |biglock| in OSSL_METHOD_STORE, which is separate
from the |lock| which is used for more internal and finer grained
locking.

Fixes #18152
_|_Stop emptying the method stores or clearing the corresponding provider
synchronisation records (operation bits) when flushing the query cache.
Rename some internal things to better express what they are for.

This also refactors the core method construction loop so the provider
synchronisation records (operation bits) are correctky tested.

Fixes #18150

_|_I've run across a problem on HP-UX where builds using gcc fail to run the init/cleanup functions. It seems that the compiler does not recognise the platform-specific #pragma init/fini statements.

By moving around the order of checks to ensure the __GNUC__ check is done first the build now works. If using the HP compiler the build/test also works fine.

I have checked that this mechanism works for gcc builds on AIX and Solaris also._|_Also reset the updated flag when Poly1305_Init is called.

This improves the fix from PR #18100 _|_Also properly update sipcopy when setting the size and fully duplicate the context on dup.

Fixes #18140 

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Fixes #18139._|_Fixes #17781

All other ia64 asm files seem to have this extension (or be processed into a file with this ext) but the chacha20 & poly1305 ones are '.S'. Some small changes to the build.info files and renaming one file allows the build to complete OK on HP-UX/Itanium.
_|_Fixes openssl#16080.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_gcc6.3 doesn't seem to support the register aliases fp and lr for x29 and x30, so use the x names.

Fixes #18114
_|_The behavior of strcasecmp() and strncasecmp() varies by locale.  To avoid
misbehavior in certain locales, always use strcasecmp_l() and
strncasecmp_l() instead.

Fixes #18039

This is an alternative implementation to https://github.com/openssl/openssl/pull/18069; the latter is incomplete and is attempting to use global state, which is fraught.  I've opted here to use local static variables instead, as the cost of calling newlocale() multiple times in a process and keeping separate local state should not be onerous.

The tests from https://github.com/openssl/openssl/pull/18069 are likely suitable to be included.

- [ ] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_This is a backport of #18069 for 3.0

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_This is a backport of #18069 for 3.0

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_When the context is reinitialized, i.e. the same key should be used
we must properly reinitialize the underlying implementation.
    
However in POLY1305 case it does not make sense as this special MAC
should not reuse keys. We fail with this provided implementation
when reinitialization happens.
    
Fixes #17811

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Fixes #18098

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This causes the DTLS server to enter an error state:

./openssl s_server -dtls
./openssl s_client -dtls -maxfraglen 512 -sess_out s1.txt
[...]
Q
./openssl s_client -dtls -sess_in s1.txt
CONNECTED(00000003)
^C
./openssl s_client -dtls
CONNECTED(00000003)
140335537067840:error:14102410:SSL routines:dtls1_read_bytes:sslv3 alert handshake failure:ssl/record/rec_layer_d1.c:614:SSL alert number 40

At this point the dtls server needs to be restarted,
because verify_cookie_callback always fails, because
the previous cookie is checked against the current one.
The reason for this is not fully understood.

In wireshark we see the following each time:
c->s Client Hello (without cookie)
s->c Hello Verify Request (with new cookie)
s->c Alert (Level: Fatal, Description: Handshake Failure)
c->s Client Hello (echoes new cookie)

The client gives up when the Alert arrives.
The Alert is triggered because the server calls
verify_cookie_callback with the previous cookie,
although it just sent the current cookie in the
Hello Verify Request.

However this does only happen because no Alert message
is sent when the client re-connects the session with
the missing -maxfraglen option.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_This fixes an internal error alert from the server and
an unexpected connection failure in the release version,
but a failed assertion and a server crash in the
debug version.

Reproduce this issue with a DTLS server/client like that:

./openssl s_server -dtls -mtu 1500
./openssl s_client -dtls -maxfraglen 512

In the debug version a crash happens in the Server now:

./openssl s_server -dtls -mtu 1500
Using default temp DH parameters
ACCEPT
ssl/statem/statem_dtls.c:269: OpenSSL internal error: Assertion failed: len == written
Aborted (core dumped)

While in the release version the handshake exceeds the
negotiated max fragment size, and fails because of this:

$ ./openssl s_server -dtls -mtu 1500
Using default temp DH parameters
ACCEPT
ERROR
4057152ADA7F0000:error:0A0000C2:SSL routines:do_dtls1_write:exceeds max fragment size:ssl/record/rec_layer_d1.c:826:
shutting down SSL
CONNECTION CLOSED

From the client's point of view the connection fails
with an Internal Error Alert:

$ ./openssl s_client -dtls -maxfraglen 512
Connecting to ::1
CONNECTED(00000003)
40B76343377F0000:error:0A000438:SSL routines:dtls1_read_bytes:tlsv1 alert internal error:ssl/record/rec_layer_d1.c:613:SSL alert number 80

and now the connection attempt fails unexpectedly.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Instruction should be generated by using .inst directive or
using sha512su0 directly. In another case, symtab section
contains an attribute indicating the presence of data inside
the function, which does not allow disassembly this func correctly
_|_The function OCSP_basic_add1_status() will return NULL on malloc failure.
However the return value is not checked in make_ocsp_response() 
before passed to OCSP_SINGLERESP_add1_ext_i2d(), and there is 
a wild field pointer in that function, which could lead to a wild pointer dereference.

Fix this by adding return value check.


_|_This is specific for OpenSSL_1_1_1-stable branch

Backport of #18019 

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [X] tests are added or updated
_|_+ Always undef the symbols that may have been #define-d
  by wincrypt.h after the first inclusion of types.h to
  avoid errors from wincrypt.h symbols being used to
  compile OpenSSL code
+ Also need to remove #pragma once for this approach to work
+ Define WINCRYPT_OPENSSL_SYMBOL_COMPAT to enable wincrypt
  symbol prefix at some point in future

Fixes #9981

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_X509V3_add_value() will return 0 on malloc failure, which could lead to
err logic without check in X509V3_parse_list().

Fix this by adding return value check of X509V3_add_value().
_|_1. Excluded the header file "wspiapi.h" for WinCE build.
2. Included OPENSSL_NO_SECURE_MEMORY compilation flag for WinCE build"'
3. Replaced 'gai_strerror' with 'gai_strerrorW'. This change was needed because gai_strerror internally uses FormatMessage which is not defined in WinCE.
4. The function 'InterlockedOr64' is not defined in WinCE.
<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->_|_It seems the return value of EVP_PKEY_copy_parameters() in
ssl_set_cert_and_key() are not checked, and could lead to null pointer dereference in
EVP_PKEY_eq() function.

However those functions are complicated and this fix is suggested by
a static analyzer, so please advise.
_|_This is a WIP PR.

It basically consists of 2 parts:
- functions ossl_str[n]casecmp based on locale-agnostic POSIX functions 
- global replacement (script to be written)

The problem that I met is segfault in FIPS module because the global loc object isn't available in FIPS. What is a proper way to ensure its per-provider initialization and deinitialization?

TBD: tests

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_This is a WIP PR.

It basically consists of 2 parts:
- functions ossl_str[n]casecmp based on locale-agnostic POSIX functions 
- global replacement (script to be written)

The problem that I met is segfault in FIPS module because the global loc object isn't available in FIPS. What is a proper way to ensure its per-provider initialization and deinitialization?

TBD: tests

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_Check the return value of EVP_KDF_fetch to avoid a potential
null pointer dereference.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_In create_cert_store(), X509_STORE_new() is called and there is a
dereference of it in following function X509_STORE_add_lookup()
without check, which could lead to NULL pointer dereference.

Fix this by adding a NULL check of X509_STORE_new()

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
_|_macOS 10.7 and 10.8 had a bit wired clang which is detected as `__GNUC__` which has `__ATOMIC_ACQ_REL` but it excepts one option at `__atomic_add_fetch` instead of 2.

This prevents OpenSSL to be compiled on such systems.

Fixes: https://github.com/openssl/openssl/issues/18055_|_Fixes #18022

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_rotated_mac is a 64-byte aligned buffer of size 64 and rotate_offset is secret.
Consider a weaker leakage model(CL) where only cacheline base address is leaked,
i.e address/32 for 32-byte cacheline(CL32).

Previous code used to perform two loads
    1. rotated_mac[rotate_offset ^ 32] and
    2. rotated_mac[rotate_offset++]
which would leak 2q + 1, 2q for 0 <= rotate_offset < 32
and 2q, 2q + 1 for 32 <= rotate_offset < 64

The proposed fix performs load operations which will always leak 2q, 2q + 1 and
selects the appropriate value in constant-time.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

<!-- 
##### Checklist
Remove items that do not apply. For completed items, change [ ] to [x]. 
- [ ] documentation is added or updated
- [ ] tests are added or updated
-->_|_This can be useful if running the test directly and not through the Makefile.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Fixes #18010._|_rotated_mac is a 64-byte aligned buffer of size 64 and rotate_offset is secret.
Consider a weaker leakage model(CL) where only cacheline base address is leaked,
i.e address/32 for 32-byte cacheline(CL32).

Previous code used to perform two loads
    1. rotated_mac[rotate_offset ^ 32] and
    2. rotated_mac[rotate_offset++]
which would leak 2q + 1, 2q for 0 <= rotate_offset < 32
and 2q, 2q + 1 for 32 <= rotate_offset < 64

The proposed fix performs load operations which will always leak 2q, 2q + 1 and
selects the appropriate value in constant-time.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->
<!-- 
##### Checklist
Remove items that do not apply. For completed items, change [ ] to [x]. 
- [ ] documentation is added or updated
- [ ] tests are added or updated
-->
_|_Fixed a configuration-related issue in #17952 
<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Hoping that the cast to void appeases Coverity.


- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #18009

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_AIX shared libs are also .a files so the AIX platform staticname() appends a '_a' to the name to avoid a collision.  However, this must not be done when no-shared is passed to Configure or the binaries that link with -lcrypto and -lssl be unable to link as those libraries won't exist without the '_a' suffix.

CLA: trivial_|_Those errors started to appear when decoding as we use get_ptr functions there on string parameters._|_The sweep of the source tree in #17373 missed the BSAES assembly due its
PR #14592 having been temporarily backed out at the time.

This partially fixes #17958 - covers cases except when
configured with -DOPENSSL_AES_CONST_TIME.
_|_When TLS-1.3 is used and the server does not send any CA names
the ca_dn will be NULL. sk_X509_NAME_num() returns -1 on null
argument.
_|_disable 5x interleave on buffers shorter than 512 bytes: 3% speedup on Graviton2

d6e4287c9726691e800bff221be71edd894a3c6a introduced 5x interleaving as an
optimization for ThunderX2, and that leads to some performance degradation on
when encoding short buffers.  We found this performance degradation by measuring
the performance of nginx on Ubuntu 20.04 that comes with OpenSSL 1.1.1f and
Ubuntu 22.04 with OpenSSL 3.0.1.

This patch limits the 5x interleave to buffers larger than 512 bytes.
On Graviton2 we see the following performance with this patch:

```
$ openssl speed -evp aes-128-gcm -bytes 128

AES-128-GCM   64 bytes     79 bytes     80 bytes     128 bytes    256 bytes    511 bytes    512 bytes    1024 bytes
master        1062564.71k  775113.11k   1069959.33k  1411716.28k  1653114.86k  1585981.16k  1973683.03k  2203214.08k
master+patch  1062729.28k  771915.11k   1103883.42k  1458665.43k  1708701.20k  1647060.84k  1975571.80k  2204038.42k
diff          0%           0%           3%           3%           3%           4%           0%           0%
revert d6e428 1055290.03k  773448.92k   1117411.97k  1441478.57k  1695698.52k  1634598.04k  1981851.65k  2196680.36k

```

CLA: trivial_|_Fixes #17978

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] tests are added or updated
_|_Fixes openssl#17148

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #17971
_|_Fixes #17971
_|_This becomes a performance improvement in the `ossl_sa_doall_arg` function which has started appearing on profile output.  The other `ossl_sa_` functions don't contribute significantly to profile output.

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixing a const/non-const issue that was mentioned on openssl-users

- [x] documentation is added or updated
- [ ] tests are added or updated
_|_evp_pkey_get_legacy() will return NULL on failure, however several
uses of it or its wrappers does not check the return value of
evp_pkey_get_legacy(), which could lead to NULL pointer dereference.

Fix those possible bugs by adding NULL checking.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->
_|_OPENSSL_sk_num returns an integer which can theoretically be negative. Assigning this to a size_t and using it as a loop bound isn't ideal.

Rather than adding checked for NULL or negative returns, changing the loop index and end to int is simpler and also addresses the integer parameter to `OPENSSL_sk_value()` where a size_t could overflow.

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The symbol OPENSSL_s390xcap_P and the OPENSSL_cpuid_setup function are not
exported by the version script of OpenSSL.  However, if someone uses the
static library without the version script, these symbols all of a sudden
become global symbols and their usage in assembler code does not correctly
reflect that for PIC.  Since these symbols should never be used outside of
OpenSSL, hide them inside the binary.

Signed-off-by: Juergen Christ <jchrist@linux.ibm.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

This could fix #14529 although I could not reproduce the problem reported there.  Nevertheless, shared libraries linked against the static libopenssl.a without this fix contains text-relative relocations for exactly these two symbols.  With this fix, these text-relative relocations are gone._|_The afalg engine does not work when run through qemu.

This fixes the CI cross-compile failures on merges so I am marking this urgent.
_|_- Pinned actions by SHA https://github.com/ossf/scorecard/blob/main/docs/checks.md#pinned-dependencies
- Included permissions for the action. https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions

>Pin actions to a full length commit SHA

>Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload.

https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-third-party-actions

Also, dependabot supports upgrading based on SHA.

Signed-off-by: naveensinivasan <172697+naveensrinivasan@users.noreply.github.com>

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Repeated HRR must be rejected.

Fixes #17934

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Fixes #17928. Supercedes #17931.

This implements https://github.com/openssl/technical-policies/issues/35 which approves an exemption to send this to both master and 3.0.

PR deprecating these functions in master to follow._|_Fixes #17928._|_The option **-proxy** of openssl s_client works fine. The option **-starttls** also works fine. However, try putting both of them on command line. It breaks, these options don't work together. The problem is that -proxy option is implemented using starttls_proto (the option parsing code sets it to PROTO_CONNECT) and -starttls option overwrites the same variable again based on argument value. The suggested fix is to independently handle -proxy option before -starttls so the s_client can connect through HTTP proxy server and then use STARTTLS command._|_	Fixes openssl#17167

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_**The bug:** when serial file is specified in configuration, invocation of `openssl ca` for signing a CSR with option `-rand_serial` still updates random serial number to serial file. This doesn't make sense since serial file serves for the incremental update of serial number in a sequence of certificates signing. The help text for `openssl ca` command says for `-rand_serial` option "Always create a random serial; do not store it" so the current behavior also contradicts with the documented. 

**The fix:** when `-rand_serial` is specified serial file is not updated_|_Fix incorrect comments in assembly code.
_|_time_t is a 64 bits type on this platform.
_|_Fixes #17911._|_As seen in https://github.com/openssl/openssl/issues/17900 we produce spurious errors on the error stack when checking for 3.x engines.

This is 1.1.1 equivalent of #17901 _|_As seen in #17900 we produce spurious errors on the error stack when checking for 1.1.x engines.
_|_Fixes #16231.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Coverity is claiming that `n` can be 48 which is larger than the IV size.  It's not clear how/why this is possible but other paths do check for a maximum IV length, so adding it here seems reasonable.

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_
##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_For the case where `current` is zero, the shift becomes 32 which overflows an integer.


- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_The `goto err` frees up the structure which is initialised after the first such goto.
Initialising it earlier addresses this._|_This is an alternative to #17872 for non-1.1.1 versions.  I don't think safe_math should be included in 1.1.1, but it ought to be suitable for 3.0 and master.

- [x] documentation is added or updated
- [x] tests are added or updated
_|_The scrypt KDF provider's dup method calls kdf_scrypt_new passing a libctx, but a provider context is expected. Since the provider context is passed as void *, this was not caught.

Discovered while refactoring libctx.

This method was not implemented for scrypt in 3.0, so not applicable to it._|_Fixes #17871._|_Fixes #17869._|_Fixed decoration prefix for some assembler labels (win64 related) in aes-gcm-avx512.pl for mingw64 build.

The root cause is that some assembler labels in aes-gcm-avx512.pl were stuck to specific convention on win64, while they should be different for different flavors (mingw64 uses gas flavor) and it should be handled by x86_64-xlate.pl generator. The generator itself is also updated to support labels renaming in .byte directives used in win64 SEH structures.

Fixes #17864._|_Make its value an absolute path.

This was already fixed in all other build file templates, but for some
reason, not here.

_|_The IV length cache value was being invalidated excessively, causing IV length caching to be ineffective.

Related to #17064._|_Fixes #17834

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [ ] tests are added or updated
_|_Partial fix for #17064. Avoid excessive writes to the cache line containing the refcount for an EVP_MD object to avoid extreme cache contention when using a single EVP_MD at high frequency on multiple threads. This changes performance in 3.0 from being double that of 1.1 to only slightly higher than that of 1.1._|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This was erroneously added in PR #17802_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Allow to *just* print key and IV of unstreamable ciphers when no input file is given.

The behaviour of the command is not changed in a way that need documentation update.
It just fix inconsistency introduced with recent support of wrap (/unstreamable) modes (#17691)
_|_We've had a report of a linker failure on some platforms (this one was
linux ARM) that apparently did not have pthread_atfork. It's strange that
this has not been reported before but the simplest solution is just to
remove this from the library since it isn't really used anyway.

Currently it is called to set up the fork handlers OPENSSL_fork_prepare,
OPENSSL_fork_parent and OPENSSL_fork_child. However all of those functions
are no-ops. This is a remnant from earlier code that got removed. We can
safely remove it now._|_If TCP is being used, protocol = 0 is passed to init_client(), then
protocol == IPPROTO_TCP fails when attempting to set BIO_SOCK_NODELAY.

This is being done in a way to be compatible with #8962, without forcing
that PR to be rebased.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes https://github.com/openssl/openssl/issues/14083 again after being
broken by https://github.com/openssl/openssl/pull/15640.

CLA: trivial_|_Resolves #17827

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Provide a different mechanism to indicate that the application wants
to retry the verification. The negative result of the callback function
now indicates an error again.

Instead the SSL_set_retry_verify() can be called from the callback
to indicate that the handshake should be suspended.

Fixes #17568

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_Fixes an issue where, when the test suite was being run with the older Test::Harness package, the test suite would not complete correctly due to evaluation of `$harness->runtests()->has_errors`, which is only available for the newer TAP::Parser::Aggregator code path.

Fixes #17818._|_several return value checks for BIO_new() and its related function such as dup_bio_out().
This is https://github.com/openssl/openssl/pull/17421 to branch 3.0._|_This reverts commit 0c3eb2793b2a1fe35beeb90ba8f5cb2a0fdc3270.

Fixes #17568._|_This was previously fixed in 3.0 but not 1.1.

Fixes #13008. Regression test added._|_`openssl req -x509` has code allowing it to generate certificates from CSRs as a replacement for `openssl x509`, but a bug prevents it from working properly. -CA and -CAkey can now be passed to generate a CA-signed certificate as documented in openssl-req(1).

Regression testing has been added for `openssl req`.

Backport of #17782 to 3.0.

Fixes #17736._|_
The EOR3 instruction is implemented with .inst, and the code here is enabled
using run-time detection of the CPU capabilities, so no need to explicitly
ask for the sha3 extension.

Fixes #17773

_|_

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This is the `1.1.1` backport of #17763 , as it required non-trivial changes, beyond cosmetic touches for the `CHANGES` file.

The major amendments were required by the third commit, covering tests, as the recipe and the source code of the associated binary changed enough to require manual conflict resolution.

Fixes #17743.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_Fix a bug in `openssl s_server -WWW` where it would attempt to invoke `SSL_sendfile` if `-ktls -sendfile` was passed on the command line, even if KTLS has not actually been enabled, for example because it is not supported by the host. Since `SSL_sendfile` is only supported when KTLS is actually being used, this resulted in a failure to serve requests.

Fixes #17503.

Taking advice on how to test this, as most usage of `s_server` in the test suite seems to be incidental via TLSProxy rather than testing of `s_server` itself._|_This fixes a bug whereby BN_mod_exp2_mont can dereference a NULL pointer
if BIGNUM argument m represents zero.

Regression test added. Fixes #17648. Backport of #17783 from master to 1.1._|_This is needed for TLS-1.3.

Also add check for uncompressed point format for ECDHE as
the other formats are not allowed by RFC 8446.

Fixes #17667
 
This is cherry pick of #17678 to 3.0 branch as it did not cherry pick cleanly._|_This fixes a bug whereby BN_mod_exp2_mont can dereference a NULL pointer if BIGNUM argument m represents zero.

Regression test added. Fixes #17648._|_`openssl req -x509` has code allowing it to generate certificates from CSRs as a replacement for `openssl x509`, but a bug prevents it from working properly. -CA and -CAkey can now be passed to generate a CA-signed certificate as documented in openssl-req(1).

Regression testing has been added to `openssl req`.

Fixes #17736._|_Previously, a NULL property query was never cached and this lead to a
performance degregation.  Now, such a query is converted to an empty string
and cached.

Fixes #17752
Fixes https://github.openssl.org/openssl/openssl/issues/26


- [ ] documentation is added or updated
- [ ] tests are added or updated

Unless the performance improvement here is very significant, this shouldn't be backported to 3.0.

_|_FreeBSD does not provide a global timezone variable containing the
offset to UTC.  Instead, FreeBSD's libc includes a legacy timezone
function dating back to Version 7 AT&T UNIX.  As a result,
asn1_string_to_time_t currently fails to compile on FreeBSD as it
subtracts a function from a time_t value:

../crypto/asn1/a_time.c:625:37: error: invalid operands to binary expression ('time_t' (aka 'long') and 'char *(int, int)')
    timestamp_utc = timestamp_local - timezone;
                    ~~~~~~~~~~~~~~~ ^ ~~~~~~~~
1 error generated.

However, FreeBSD's libc does include a non-standard (but widely
available) timegm function which converts a struct tm directly to a
UTC time_t value.  Use this on FreeBSD instead of mktime.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_
Fixes #17753


- [x] documentation is added or updated
- [ ] tests are added or updated
_|_This is an alternative to #17759 to fix #17743.

It comprises 3 commits:

- [x] The first one improves maintainability of the codebase replacing leftover uses of `SSL_kE(EC)?DH` with `SSL_k(EC)?DHE`, as it the latter spelling is more common and familiar to internal and external developers. Each pair is already reported as aliases in our headers: https://github.com/openssl/openssl/blob/a044af49c43ec8fe099deeb5d06501ddf70abf7a/ssl/ssl_local.h#L165-L172
- [x] The second commit adds the `SSL_kDHEPSK` and `SSL_kECDHEPSK` flags to the PFS check for SECLEVEL >= 3
- [x] The last commit adds positive and negative tests to exercise the check with the flags added in the second commit

The test commit further revises the test binary to improve the `-help` documentation, syncing it with the actual behavior (e.g., the default is `-dhe2048` not `-dhe1024`; `-tls1_2` is a supported option, but was not documented as such), and also adds support (and documentation) for `-tls1_1` and for well-known 4096-bit DH parameters.
- The support for TLS 1.1 is added as the new tests require SECLEVEL >= 3, which implies TLS >= 1.1.
- Similarly, the support for `-dhe4096` is added because 2048-bit parameters fail to meet the requirement for >=128 security bits


##### Checklist
- [x] documentation is added or updated
- [x] tests are added or updated
_|_This patch fixed https://github.com/openssl/openssl/pull/16637 that the conditional test statements are incorrect for 64 and 256 bytes which will cause the openssl tests to fail.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Before PR #15310, which reworked how build files (Makefile, ...) were
generated, everything was done when configuring, so configdata.pm
could depend on build file templates and we'd get away with it.

However, since building configdata.pm is now independent of the build
file templates, that dependency is unnecessary, and would lead to
surprises of the build file template is updated, with an unexpected
full reconfiguration as a result, when all that's needed is to run
configdata.pm with no flags to get the build file re-generated.

This change is therefore a completion of what was forgotten in #15310.
_|_As the potential failure of the BIO_read(),
it should be better to add the check and return
error if fails.
Also, in order to decrease the same code, using
'out_free' will be better.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_copy_argv was never initialization code.

Make it self-cleaning too.

-----

This is a backport of #8381 to 1.1.1.  Without this, VMS builds break.
_|_check the return value of CRYPTO_strdup() to catch potential memory errors in time._|_As the potential failure of the memory allocation, it should
be better to check the return value of SSL_CTX_new() and return
error if fails, like SSL_CTX_new_ex().

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_As the potential failure of the OPENSSL_zalloc(), the OSSL_LIB_CTX_new()
could return NULL.
Therefore, it should be better to check it and return error if fails in
order to guarantee the success of the initialization.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Since the memory allocation may fail, the BIO_new_mem_buf() may
return NULL pointer.
Therefore, it should be better to check it and return error if fails.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Since the potential failure of the OSSL_PROVIDER_load(),
for example there is no lock, the provider could fail to
be loaded into the library context.
Therefore, it should be better to check it and return error
if fails.
Also, in order to avoid free unknown pointer, 'c' should be
initialized as NULL.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_In particular, the subject of any given P10CR must not be neglected.

Also update and complete related documentation.

- [x] documentation is added or updated

_|_As the glue2bio() could return NULL pointer if fails,
it should be better to check the return value in order
to avoid the use of NULL pointer.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixed the date in the heading of "Changes between 1.1.1l and 1.1.1m" to 14 Dec 2021 in changelog.html_|_As the potential failure of the BIO_new(), it should be better to check the return value and return error if fails in order to avoid the dereference of NULL pointer.
And because 'bio_s_msg' is checked before being used everytime, which has no need to add the check.
But 'bio_s_out' is not.
And since the check 'if (bio_s_out == NULL)' is redundant, it can be removed to make the code succincter.
Also the 'sbio' and so forth should be checked like the other places in the same file.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The inconsistency was noted by @bernd-edlinger [here](https://github.com/openssl/openssl/pull/17668#issuecomment-1035872142)

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_As the potential failure of the rand_get_global(),
for example fail to get lock, 'dgbl' could be NULL
pointer and be dereferenced later.
Therefore, it should be better to check it and return
error if fails, like RAND_get0_primary() and other callers.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes: #13765

Back-port of #17427 to 1.1.1
But stays compatible to previous version,
i.e. using file-time if git does not know the date._|_As the potential failure of the memory allocation, the OPENSSL_strdup()
could return NULL pointer and then be assigned to 'server_ctx'.
In order to tell the callers the failure of the configuration, it should
be better to return error.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Reverting to using swapcontext() when compiling with clang on BTI-enabled builds fixes the BTI setjmp() failure seen when running asynctest.

The issue with setjmp/longjmp is a known clang bug: see https://github.com/llvm/llvm-project/issues/48888

When there is a released fix for clang, this workaround can have a version guard added
_|_Since random dhparams are printed in PEM format to stdout,
it is possible to output lines starting with "ok/" or "ok+".
Both disturb the test harnesh and cause random test failures.
Work around that by replacing any ok at the beginning of the
line with ??.

Fixes #17480
_|_Since the BIO_new may fail, the 'bio' could be NULL pointer and be used.
Therefore, it should be better to check it and skip the print if fails.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_There were still a few files mentioning the old OpenSSL license.

Fixes #17684
_|_This is needed for TLS-1.3.

Also add check for uncompressed point format for ECDHE as
the other formats are not allowed by RFC 8446.

Fixes #17667
_|_Just assert 'bn' to be non-NULL is not enough.
The check for 'itmp' is still needed.
If 'bn' is 0, the 'itmp' is assigned by OPENSSL_strdup().
Since OPENSSL_strdup() may fail because of the lack of memory,
the 'itmp' will be NULL and be an valid parameter hashed in
TXT_DB_get_by_index(), returning a wrong result.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_As the potential failure of the memory allocation,
it should be better to check the return value of
OPENSSL_strdup() and return error if fails.
Also, we need to restore the 'ep' to be NULL if fails.
And since the OPENSSL_strdup() will print report if
fails, the BIO_print() is not needed.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes openssl#17228.

It looks that eg. `date +%b` is based on current locale and it can print the name of a month in some other language, so it is better to force `C` locale in the scripts.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Since the OPENSSL_strdup() may return NULL if allocation
fails, the 'port' could be NULL.
And then it will be used in do_server(), which can accept
NULL as an valid parameter.
That means that the system could run with a wrong parameter.
Therefore it should be better to check it, like the other
memory allocation.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_X509_TRUST_get0() is checking < 0, the code here was checking == -1.  Both are
equivalent in this situation but gcc-12 has conniptions about a subsequent
possible NULL dereference (which isn't possible).

Fixes #17665
_|_Add missing AARCH64_VALID_CALL_TARGET to armv8_rng_probe(). Also add
these to the functions defined by gen_random(), and note that this Perl
sub prints the assembler out directly, not going via the $code xlate
mechanism (and therefore coming before the include of arm_arch.h). So
fix this too.

In KeccakF1600_int, AARCH64_SIGN_LINK_REGISTER functions as
AARCH64_VALID_CALL_TARGET on BTI-only builds, so it needs to come before
the 'adr' line.

Change-Id: If241efe71591c88253a3e36647ced00300c3c1a3

_|_Since the OPENSSL_strdup() may return NULL if allocation
fails, it should be better to check the return value.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes openssl#17613.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_If a large enough value is given to the "-bytes" option, a signed integer overflow occurs as MAX_ALIGNMENT + 1 is added to buflen. This negative value is interpreted as unsigned by malloc, which then attempts to allocate an extremely large buffer. 

For now, I'm just ignoring the addition and printing a warning. I'm not sure about the semantics of the "-misalign" option, so if there is a better solution I will implement that instead. 

This also might be a consideration for backporting to the 1.1.1 branch. _|_Since the potential failure of the memory allocation, the
OPENSSL_strdup() could return NULL pointer.
Therefore, it should be better to check it in order to guarantee the
success of the configuration, same as the check for
SSL_CTX_set_srp_username().

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_As the potential failure of getting lock, we need to check the return
value of the BN_BLINDING_lock() in order to avoid the dirty data.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Includes internal/numbers.h if SIZE_MAX is not defined by the OS. Fixes #17629 

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->_|_It does not make sense to check the size because this
function can be used in other contexts than in TLS-1.3 and
the value might not be padded to the size of p.

However it makes sense to do the partial pubkey check because
there is no valid reason having the pubkey value outside the
1 < pubkey < p-1 bounds.

Fixes #15465
_|_Since the memory allocation may fail, the 'mac_name' and 'controls'
could be NULL.
And the 'mac_name' will be printed in mac_test_run_mac() without check.
Also the result of 'params_n +
sk_OPENSSL_STRING_num(expected->controls)' in
mac_test_run_mac() will be 'params_n - 1' if allocation fails , which
does not make sense.
Therefore, it should be better to check them in order to guarantee the
complete success of initiation.
If fails, we also need to free the 'mdat' to avoid the memory leak.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fix openssl-dgst.html (list -digest-algorithms, NOT -digest-commands), 
move option -list just after the related option -digest, 
fix HTML formatting of section 'Examples' by adding missing newlines 
and add 2 examples variant to clarify syntax of the command openssl dgst|digest [-digest] ...

[x] documentation is updated
_|_CLA: trivial

To get the master branch compiled with DJGPP some minor
adjustments are required. They will have no impact on any other ports.
The DJGPP port uses the Watt-32 library to provide the required network
functionality and some of its headers need to be included.

Neither DJGPP nor the Watt-32 library provide in_addr_t thus it must be
provided as it is done for OPENSSL_SYS_WINDOWS in crypto/bio/b_addr.c.

In the DJGPP section of include/internal/sockets.h the following Watt-32
headers must be added:

  -  arpa/inet.h: to provide declaration of inet_ntoa required in crypto/bio/b_addr.c
  -  netinet/tcp.h: to provide defintion of TCP_NODELAY required in crypto/bio/b_sock2.c

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Trivial change to ossl_lib_ctx_default_deinit() to clean up the default_context_thread_local.
While on most platforms leaking resources has no consequence, for some others it may matter._|_From the commit message:
```
This allows reproducible sources for apps/progs.c and apps/progs.h.

This change is similar to 11d7d90344, but for apps/progs.pl.
```
As mentioned in the commit message, this change is similar to what was done in 11d7d90344 (https://github.com/openssl/openssl/pull/11296).

This reprodicibility issue was originally discovered and reported by the freedesktop-sdk project.<sup>0</sup> Our diffoscope report highlights the source reproducibility issue.<sup>1</sup>

<sup>0</sup> https://gitlab.com/freedesktop-sdk/freedesktop-sdk/-/issues/1372
<sup>1</sup> https://freedesktop-sdk.gitlab.io/-/freedesktop-sdk/-/jobs/1955804555/artifacts/result_folder/components/openssl.bst/index.html_|_This brings these tests in line with 3.0 and master and makes them fail correctly.

Fixes #17612

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_On a big endian machine, we get test failures in params_api_test like
```
        # ERROR: (memory) 'buf1 == buf2' failed @ test/params_api_test.c:473
        # --- buf1
        # +++ buf2
        # 0000:-e901
        # 0000:+01e9
        #       ^^^^
        #
        # OPENSSL_TEST_RAND_ORDER=1643313367
        not ok 157 - iteration 3
```
They are due to an additional conversion copy.  Remove this copy to solve the
problem.

Signed-off-by: Juergen Christ <jchrist@linux.ibm.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_This fixed counter overflow in PR, https://github.com/openssl/openssl/issues/17588.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Add copyright to files that were missing it.
Update license from OpenSSL to Apache as needed.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_As with 11d7d903, use SOURCE_DATE_EPOCH for the copyright year if it is
defined, to avoid reproducibility problems.

CLA: trivial

Signed-off-by: Ross Burton <ross.burton@arm.com>
Change-Id: I1bea19070411a69155c43de7082350fb2c499da3

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_Since the memory allocation may fail, the 'mac_name' and 'controls'
could be NULL.
And the 'mac_name' will be printed in mac_test_run_mac() without check.
Also the result of 'params_n +
sk_OPENSSL_STRING_num(expected->controls)' in
mac_test_run_mac() will be 'params_n - 1' if allocation fails , which
does not make sense.
Therefore, it should be better to check them in order to guarantee the
complete success of initiation.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Since we may fail to get the lock, for example there is no lock, the
X509_STORE_lock() will return 0.
Therefore, we should check it in order to prevent the dirty data.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Any propquery passed via the -propquery option to the ciphers command was
being ignored.

_|_DJGPP specific maodifications.

CLA: trivial

Hello,
I hope that the DJGPP port is still supported and thus contributions are
still welcome.  To get the OpenSSL_1_1_1-stable branch compiled some minor
adjustments are required.  They will have no impact on any other ports.
The DJGPP port uses the Watt-32 library to provide the required network
functionality and some of its headers need to be included.

1)
Neither DJGPP nor the Watt-32 library provide in_addr_t thus it must be
provided as it is done for OPENSSL_SYS_WINDOWS in crypto/bio/b_addr.c.

2)
In the DJGPP section of include/internal/sockets.h the following Watt-32
headers must be added:
 - arpa/inet.h: to provide declaration of inet_ntoa required in crypto/bio/b_addr.c
 - netinet/tcp.h: to provide defintion of TCP_NODELAY required in crypto/bio/b_sock2.c


Regards,
Juan M. Guerrero
##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
_|_Fixes #17587

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Fixes #17583
_|_The OPENSSL_memdup() is not always success, as the potential failure of
the allocation.
Then the '*pptr'could be NULL pointer but the ui_dup_method_data() will
still return 1.
In CRYPTO_dup_ex_data(), the 'storage[i]->dup_func' will not fail and
'ptr' will be used in CRYPTO_set_ex_data().
Also, if '*pptr' is NULL, I think it should also return 0 to tell the
caller that the duplication fails in order to prevernt using the NULL
pointer.
Therefore, it should be better to add the check and return 1 only if the
duplication succeed.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The get_globals could return NULL, for example,
CRYPTO_THREAD_read_lock() failed.
Therefore, just checking the member of 'bcgbl' is not enough.
We need to check 'bcgbl' itself too in order to avoid the dereference of
the NULL pointer.
And the caller of ossl_bio_init_core(), OSSL_LIB_CTX_new_from_dispatch()
in `crypto/context.c`, has already checked return value and dealed with
the situation if it returns 0.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Since we may fail to get the lock, for example there is no lock, the
X509_STORE_lock() will return 0.
Therefore, we should check it in order to prevent the dirty data.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The OPENSSL_zalloc() could return NULL pointer if fails.
Add the check for it does make sense, like how digest_test_init() deals
with.

CLA: trivial

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The OPENSSL_zalloc() could return NULL pointer if fails.
Add the check for it does make sense, like how digest_test_init() deals
with.

Signed-off-by: Jiasheng Jiang <jiasheng@iscas.ac.cn>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #17557

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #17531

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_as the code uses BIO_gets, and it always null terminates the
strings it reads, when it reads a record 2^14 byte long, it actually
returns 2^14-1 bytes to the calling application, in general it returns
size-1 bytes to the caller

This makes the code sub-optimal (as every 2^14 record will need two
BIO_gets() calls) and makes it impossible to use -rev option to test
all plaintext lengths (like in openssl#15706)

This is a backport of #17538 (148b592) to openssl-3.0 branch

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->
_|_Fix the same BIO_FLAGS macro definition and add comment to the
public header

Fixes: #17545 

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

_|_sm3-armv8.pl supposes to replace all series of sm3 instructions with instruction binary so that the generated .S file is able to be compiled successfully by a lower version of compiler not supporting sm3 instructions.

But sm3ss1 instruction is not replaced correctly in this file because "sm3ssl" instead of "sm3ss1" is used to do the matching in regular expression. So this fix corrects the typo sm3ssl with sm3ss1._|_if the newly loaded engine contains the symbol
EVP_PKEY_get_base_id, we know it is linked to 3.x openssl.
Abort loading this engine, as it will definitely crash.

This is meant in combination with the first commit in #17112 which cherry-picks cleanly to 1.1.1_|_as the code uses BIO_gets, and it always null terminates the
strings it reads, when it reads a record 2^14 byte long, it actually
returns 2^14-1 bytes to the calling application

This makes the code sub-optimal (as every 2^14 record will need two
BIO_gets() calls) and makes it impossible to use -rev option to test
all plaintext lengths (like in openssl#15706)

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] tests are added or updated
_|_Removed OSSL_EXCHANGE_PARAM_EC_ECDH_COFACTOR_MODE and added
OSSL_KDF_PARAM_CEK_ALG.

Fixes #17510
_|_def_generate_session_id has checked the conflict of session_id, it is called in ssl_generate_session_id( ), ssl_generate_session_id( ) does not need to check the conflict repeatedly.
<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->



_|_When `PEM_write_bio_PKCS8PrivateKey()` and `PEM_write_bio_PKCS8PrivateKey_nid()`
were passed empty passphrase strings, `OPENSSL_memdup()` was incorrectly getting
used for 0 bytes size allocations, which resulted in malloc failures.

Fixes: https://github.com/openssl/openssl/issues/17506

Signed-off-by: Darshan Sen <raisinten@gmail.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_There seems to be no good reason to ignore packets
which exceed the allowed record length.
Add at least some tests for KTLS, since we have
currently zero test coverage for KTLS.

##### Checklist
- [x] tests are added or updated
_|_Fixes #17485

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_These compilers define _ARCH_PPC64 for 32 bit builds
so we cannot depend solely on this define to identify
32 bit build.

Fixes #17087
_|_During counting of the unprocessed records, return code is treated in a wrong way. This forces kTLS RX path to be skipped in case of presence of unprocessed records.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
_|_One of the two defects was found by Coverity:
```
>>>     CID 1497107:  Null pointer dereferences  (FORWARD_NULL)
>>>     Dereferencing null pointer "pcerts".
696             OSSL_STACK_OF_X509_free(*pcerts);
```_|_~Only the final commit is relevant here, the rest are from #17479 and will disappear once this is rebased.~

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes bug #17482 in `evp_keymgmt_util_match` so that it actually tries cross export the other way if the first attempt fails.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
<!-- - [ ] documentation is added or updated
- [ ] tests are added or updated
-->
- does not apply_|_s390x shared key computation didn't properly clean the shared key value.
This patch fixes the issue.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Otherwise it sometimes confuses the TAP parser.

Fixes #17480

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_TSAN has a number of problems currently.

Eventually this might fix #17447

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Circumvents a problem with ancient PA-RISC compilers on HP/UX.

Fixes #17477


- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->
_|_There is a regression of the -kdflen option handling reported in #17458 caused by commit a7cef52f9b961dcb.
_|_This fixes small regression from #16962.

As reported by @jwalch in https://github.com/openssl/openssl/commit/182cc644b3a3690bddfecba925486fefa421d6ec#commitcomment-63342825
_|_Attempting to fetch one of the above and providing a query string was
failing with an internal assertion error. We must ensure that we give the
provider when calling ossl_method_store_cache_set()

Fixes #17456_|_Follow-up PR for #17340

If TLSFuzzer submodule is not checked up, skip the test.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_https://github.com/openssl/openssl/pull/17417 for 3.0

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_When compiling openssl for tianocore compiling abs_val() and pow_10()
fails with the following error because SSE support is disabled:

   crypto/bio/bio_print.c:587:46: error: SSE register return with SSE disabled

Fix that by using EFIAPI calling convention when compiling for UEFI.

Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
_|_Fixes #17426

steps to reproduce:
```
$ apps/openssl genrsa -out xx.key 2048
$ apps/openssl rsa -in xx.key -out xx-enc.key -aes256 -passout pass:xx
writing RSA key
$ apps/openssl req -new -key xx-enc.key -out xx.csr -subj "/CN=XX" -passin pass:xx -config apps/openssl.cnf
unable to load Private Key
140467060270912:error:28078065:UI routines:UI_set_result_ex:result too small:crypto/ui/ui_lib.c:905:You must type in 4 to 1023 characters
140467060270912:error:06065064:digital envelope routines:EVP_DecryptFinal_ex:bad decrypt:crypto/evp/evp_enc.c:610:
140467060270912:error:0906A065:PEM routines:PEM_do_header:bad decrypt:crypto/pem/pem_lib.c:461:
```

this one is 1.1.1 only, as master does not seem to be affected._|_ * `check_format.pl`: Add checks for blank lines within/after local decls
 
This was motivated by rather frequent review comments such as https://github.com/openssl/openssl/pull/16452#discussion_r779269428:
missing blank line after local declarations.

On this occasion, also some other (minor) improvements on `check-format.pl`:
* Fix report on space before `;` and allow it after `)`
* Fix report on missing space before `+`/`-`: allow, e.g., `1e-6`
* Fix report on constant on LHS of comparison/assignment, e.g., `was_NULL = ...` 

_|_There is the risk to pass the gctx assigned with NULL value to rsa_gen_set_params
which dereference gctx directly.  

BN_free(gctx->pub_exp); is **first found** by https://github.com/openssl/openssl/pull/17418, I checked that pr first. 

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The peer key has to be exported to the operation's keymgmt
not the ctx->pkey's keymgmt.

Fixes #17424
_|_several return value checks for BIO_new() and its related function such as dup_bio_out().
BIO_new() is a memory allocation related function, when it returns `NULL` usually means some internal memory errors happened, so it is better to check the return value of it immediately to catch the error in time.
Note: I am not very sure which label should `goto` or what the err_text is most proper. Thank you for taking the time to review this PR. If there are some checks unnecessary, I will restore them._|_properly free the resource allocated by BN_new() to prevent a potential memory leak. `gctx->pub_exp` is allocated by `BN_new()` at `rsa_kmgmt.c:455` but lack properly release on the failure path in the block at  `rsa_kmgmt.c:465`._|_This pr involves lots of functions. Thank you for taking the time to review. :-)

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_`hmac` is allocated by `EVP_MD_CTX_new()` at `ssl3_record.c:1413` under condition `!stream_mac`. But there is a potential memory leak of it inside the block `ssl3_record.c:1452`._|_EVP_PKEY_CTX_ctrl() returns 0 or a negative value for failure. It is better to unify the form of failure check to cover all failure cases._|_properly free the resource from CRYPTO_malloc. In statem_clnt.c:3174 `pms` is allocated by `OPENSSL_malloc()`._|_Fixes #17407

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_use goto instead of returning directly while error handling

Signed-off-by: Peiwei Hu <jlu.hpw@foxmail.com>_|_This backports #17398 to 1.1.1.
_|_Trying to reproduce #17387, I found that my recently merged commit cdaf072f90399efb9e8e19ee4f387d1425f12274 introduced a double-free on the connect BIO in case TLS is not used.
So this is a fixup for #17318.
_|_Fixes #17397
_|_(Basically) same procedure as last year (#13764) or every(?) year.
This is just a quick workaround for the still unsolved New Year issue #13765.

Please approve ASAP since the issue causes needless CI failures for all new/updated PRs._|_Just a minor glitch fix.
_|_This is a cherry-pick of  #17365 to 1.1.1 branch as it does not cherry-pick cleanly.

Fixes #17364
_|_CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The compile error will occurs when OPENSSL_NO_ASM is defined because OPENSSL_armcap_P is invalid in this case._|_On ia64 the use of setjmp()/ longjmp() has some portability issues and
requires often extra care. The use of it in the async interface led
to a failure in the test_async.t test since its introduction in 1.1.0
series.

Using swapcontext() unconditionally cures it.
swapcontext() has been removed from the specification since POSIX.1-2008
but this also the case for the still used setcontext() function.

Use the __CET__ code path unconditially, this is also less code/
possibilities to maintain and test.

Signed-off-by: Sebastian Andrzej Siewior <sebastian@breakpoint.cc>_|_use goto instead of returning directly while error handling

Signed-off-by: Peiwei Hu <jlu.hpw@foxmail.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #17364
_|_Fixes: #17356
_|_We already statically link libcrypto to endecode_test even in a "shared"
build. This can cause problems on some platforms with tests that load the
legacy provider which is dynamically linked to libcrypto. Two versions of
libcrypto are then linked to the same executable which can lead to crashes.

Fixes #17059
_|_...because it uses md5 for HMAC tests. Skip md5 in case of its
unavailability.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #17326_|_Replaces #17311 
_|_Fixes #17313

It's not clear how to write a reproducer for this.


- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_* Evaluating code-refs in Configure can sometimes set the default
variable `$_`
* Prevent spillage influencing the target property by using named
variable in loop

Fixes gh-17321_|_The UI method always adds NUL termination and we need to
compensate for that when using it from a pem_password_cb
because the buffer used in pem_password_cb does not account
for that and the returned password should be able fill the
whole buffer.

Fixes #16601
_|_Make `app_http_tls_cb()` tidy up on disconnect the SSL BIO it pushes on connect. Make `OSSL_HTTP_close()` respect this.
In this way the unclean workaround using `BIO_free_all()` is removed._|_It turned out that receiving non-ASN.1 contents using the HTTP client
fails over TLS because SSL BIOs do not support the 'gets' method.

This PR provides a workaround by using the less efficient `BIO_get_line()` function in case `BIO_gets()` returns `-2`, which means that it is not supported by the BIO._|_Fixes #16761 for branch `openssl-3.0` (as per https://github.com/openssl/openssl/pull/16770#issuecomment-996504969)
_|_See discussion in #17088, where the real solution was postponed to 4.0.

This PR preliminarily fixes the issue that the HTTP(S) proxy environment variables were neglected when determining whether a proxy should be used for HTTPS.
_|_In `http_test.c`, simplify constant initalization of `server_args` struct that gcc-4.8.x warns about, reported in https://github.com/openssl/openssl/pull/16030#pullrequestreview-835757075

_|_#17287 for 3.0.
_|_The postrelease fixup scripts are also fixed to not create such errors in NEWS.md and CHANGES.md. (This commit is also applicable to master.)
_|_The current include guard name is a duplicate of the one in `dsaerr.h`.

Noticed via https://lgtm.com/projects/g/openssl/openssl

Happy to update CHANGES.md if deemed appropriate.

CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
_|_Fixes #17296_|_Fix #17298_|_Fixes #17296_|_Avoid freeing a provider that was not up-ref-ed before.

Fixes #17292
_|_Also never use OSSL_LIB_CTX_free() on incompletely initialized context.

Fixes #17291
_|_ctx may be NULL at 178 line
_|_Fixes the oops in #17123 when code occurs before some declarations.

_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### ChecklistQ
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_- [ ] documentation is added or updated
- [x] tests are added or updated

Fixes #17261_|_Some major option combinations do not make sense or are not supported. Add missing checks and document that `-server`/`-port`/`-rspin`/`-use_mock_srv` options exclude each other:

Ignore `-server` with `-rspin` and exclude all of `-use_mock_srv`/`-port`/`-rspin.`
On the other hand, `-server` is required if no `-use_mock_srv`/`-port`/`-rspin` is given.
Ignore `-tls_used` with `-use_mock_srv` and `-rspin;` it is not supported with `-port.`
If `-server` is not given, ignore `-proxy,` `-no_proxy,` and `-tls_used.`

Rearrange the partly existing checks such that the major options are checked for consistency first,
preventing otherwise misleading errors/warnings.
Also slightly improve the documentation of the two mock server variants.

- [x] documentation is added or updated
_|_Fixes #17247
_|_The use of -proxy prevented s_client from correctly sending the target
hostname as an SNI data.

Fixes #17232_|_The use of -proxy prevented s_client from correctly sending the target
hostname as SNI data.

Fixes #17232

_|_Apparently using OPENSSL_cleanse() confuses the fuzzer so it
makes the buffer to appear uninitialized. And memset can be
safely used here and it is also potentially faster.

Fixes partially #17237
_|_This might result in a small memory leak.

This is the part of #17236 that is also relevant to master._|_This fixes a deadlock after an out of memory error
this is for 1.1.1 only, since master seems to have this already fixed._|_The windows-latest is the same as windows-2019 currently but we do not want to run two identical builds once windows-latest is switched to mean windows-2022.
_|_When s_server responds to a file data with the -WWW parameter, it
always gets a path named "GET". In this case, we need to skip the
"GET /" character to get the correct file path.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Also cleaned the code ever so slightly for readability.

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Options like `-server`, `-port`, and `-tls_used` do not make sense with `no-sock`.
_|_SSIA_|_The code contained a tricky bug.
Added a few test cases for `-rspin` and the three related options, 
which would have caught this issue.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_MIN is a rather generic name and results in a name clash when trying to
port tianocore over to openssl 3.0.  Use the usual ossl prefix and
rename the macro to ossl_min() to solve this.

Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_On non-Windows systems, there's no difference at all.  On Windows systems,
__declspec(dllexport) is added, which ensures it gets exported no matter
what.

Fixes #17203_|_Windows 2016 environment is going to be discontinued.

Fixes #17177
_|_We should not be freeing the caller's key in the event of error.

Fixes #17196

_|_Return checks like `if (BIO_get_ktls_recv()) `are changed to `if (BIO_get_ktls_recv() > 0)` to capture more accurate semantic. Most of return checks in `if (!BIO_get_ktls_recv()) `format are reserved except it leads to error processing stage, where negative return values should be classfied too. 

Thanks for taking time for reviewing. _|_BIO_get_ktls_send() can also return negative values. 

Return checks like `if (BIO_get_ktls_send())` are changed to `if (BIO_get_ktls_send() > 0)` to capture more accurate semantic. Most of return checks in `if (!BIO_get_ktls_send())` format are reserved except it leads to error processing stage, where negative return values should be classfied too. _|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The private key for rsa, dsa, dh and ecx was being included when the
selector was just the public key. (ec was working correctly).
This matches the documented behaviour.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_So far, the HTTP client would try a GET redirect even after a timeout occurred meanwhile._|_A couple of small fixes:
* `OSSL_HTTP_set1_request():` Fix check for presence of `port` option and its documentation.
    For HTTP (not HTTPS) with proxy, `server` must be given, `port` is optional
* `OSSL_HTTP_open():` clarify doc of `server` arg and its use of `BIO_new_connect()`
* `OSSL_HTTP_open():` Complete documentation of checks for `server` and `proxy` args
_|_Windows 2016 environment is going to be discontinued.

Fixes #17177
_|_Fixes #17054

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_ Check the return value of X509_get0_pubkey() in s_cb.c:1425 to prevent wrong memory access by EVP_PKEY_get0_asn1()._|_Check the return value of BIO_new() in t_x509.c:471 & cmp_vfy.c:36 in time to prevent further memory errors._|_* `OSSL_HTTP_REQ_CTX_nbio()`: Fix parsing of responses with status code != 200.  
    This way keep-alive is not (needlessly) cancelled on error.
* `parse_http_line1()`: Fix diagnostic output on error and return code.
_|_Fix #8470_|_Check the return value of BN_dup() in rsa_lib.c:1248 to capture some memory errors in time._|_This applies a similar fix as #17164 to other KDF implementations.

This applies to both master and 3.0 branches._|_In some cases the value of buflen can be left, resulting in later buffer overflows when freeing the pvkkdf context.
_|_Backport of #17150 for 1.1.1_|_Check the return value of OSSL_PARAM_BLD_new in dsa_kmgmt.c:195._|_check the return value of ossl_bio_new_from_core_bio in 8 different spots:
> ​	providers/implementations/encode_decode/decode_pvk2key.c:87:15
​	providers/implementations/encode_decode/decode_epki2pki.c:70:15
​	providers/implementations/encode_decode/decode_pem2der.c:35:15
​	providers/implementations/encode_decode/decode_msblob2key.c:87:15
​	providers/implementations/encode_decode/encode_key2ms.c:41:16
​	providers/implementations/encode_decode/encode_key2ms.c:57:11
​	providers/implementations/encode_decode/encode_key2blob.c:32:16
​	providers/implementations/encode_decode/endecoder_common.c:91:15

Note: I am not very familiar with these functions, but I had tried to keep their functionalities as the original.  For example, I tracked the return value of the subsequent function(such as `i2b_PVK_bio_ex()` in `encode_key2ms.c:58`, etc) when an error happens is -1, so I set the return value to -1 when the return value of `ossl_bio_new_from_core_bio()` in `encode_key2ms.c:57` is NULL._|_GOST ciphers don't use EtM. We don't send this extension in server and shouldn't set use_etm in client.
<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This has been carved out from #16998 because it should be mergeable earlier.

This brings clarifications to the documentation and the code regarding the use of the `subject` and `req` parameters of `X509V3_set_ctx()`.

Also document the `email:move config` option value, which so far was missing from `x509v3_config.pod`.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [ ] tests are added or updated
_|_When an integer value was specified, it was not being passed back via the orig_p2 weirdness.

Regression test included.

##### Checklist
- [x] tests are added or updated
_|_Backport most of #16688, namely
* the fix of the `BIO_NOCLOSE` issue
* the improvements of `BIO_f_ssl.pod`

to 1.1.1
_|_This looks like old code, written when the padded variety of BN_bn2bin()
was developped, and disabled by default...  and forgotten.

A few simple changes to update it to the current API is all that was
needed to enable it.
_|_The doc/html sub-dirs get created by Configure. Therefore they should
not be cleaned away by "nmake clean". Otherwise the following sequence
fails:

 perl Configure VC-WIN64A
 nmake clean
 nmake
 nmake install

Fixes #17114
_|_Add a check for the the return value of OPENSSL_strdup(CRYPTO_strdup) in app_rand.c:32.
After further analysis, I find that this will not result in incorrect access to `save_rand_file` as app_rank.c:79 has a check for it in the current version.
However, once some internal memory allocation errors occur here, it means that there are other unknown memory risks in the subsequent running. So I think it is necessary to throw the error in time._|_
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_There is no point it should not be allowed and it is causing problems like:
https://github.com/openssl/openssl/issues/17064#issuecomment-975781950

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_check the return value of OPENSSL_strdup(CRYPTO_strdup) in app_rand.c:112 to prevent potential memory access error._|_This problem happens usually because an application
links libcrypto and/or libssl statically which
installs an atexit handler, but later an engine using
a shared instance of libcrypto is installed.
The problem is in simple words that both instances
of libcrypto have an atexit handler installed,
but both are unable to coordinate with each other,
which causes a crash, typically a use-after-free
in the engine's destroy function.

Work around that by preventing the engine's
libcrypto to install the atexit handler.
This may result in a small memory leak, but that
memory is still reachable.

Fixes #15898
_|_check the return value of OPENSSL_strdup to prevent potential memory access error._|_Engines built using OpenSSL 1.1.1
are not compatible with OpenSSL 3.0.

Fixes #17103
_|_It seems some AIX compilers do not cope with them correctly otherwise.

Fixes #17087
_|_OpenSSL assumes AT_HWCAP = 16 (as on Linux), but on FreeBSD AT_HWCAP = 25
Switch to using AT_HWCAP, and setting it to 16 if it is not defined.

OpenSSL calls elf_auxv_info() with AT_CANARY which returns ENOENT
resulting in all ARM acceleration features being disabled.

CLA: trivial
_|_Also, default to unrestricted pss parameters until the key is set.

Fixes #17075

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Adding documentation to that fact as well.

Fixes #17070
_|_Use the address of the bind function as a DYNAMIC_ID,
since the true name of the engine is not known
before the bind function returns,
but invoking the bind function before the engine
is unloaded results in memory corruption.

Fixes #17023

This is an alternative to #17055_|_This uses `BIO_get_line()` as a workaround in version 3.0 for
* connect BIOs not supporting `BIO_read()` (#16028) before 3.1
* SSL BIOs not supporting `BIO_read()`, which will likely be the case also beyond 3.0.

With this fix, the HTTP client can be used for getting via sockets not only ASN.1-encoded contents, but also other types of contents, including plan text and HTML.
_|_Fixes #16989

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_For various generic reason codes, their string conversion goes wrong, e.g.: 
```
    # 80B26552927F0000:error:1E8C0102:HTTP routines:foo:reason(786690):test/http_test.c:424:
    # 80B26552927F0000:error:1E880106:HTTP routines:foo:reason(524550):test/http_test.c:424:
```

I found that this is because some entries defined in `include/openssl/err.h{,in}` are missing from `ERR_str_reasons` in `crypto/err/err.c`
and that their order easily goes wrong there because they need to be sorted by _their numerical reason code **including** any flags_ such as `ERR_RFLAG_COMMON`. 

After fixing the entries, the above becomes:
```
    # 8032C819DE7F0000:error:1E8C0102:HTTP routines:foo:passed a null parameter:test/http_test.c:424:
    # 8032C819DE7F0000:error:1E880106:HTTP routines:foo:passed an invalid argument:test/http_test.c:424:
```
_|_If an ECX key is created and the private key is too short, a `fromdata`
call would create the key, and then later detect the error and report it
after freeing the key. However freeing the key was calling
`OPENSSL_secure_clear_free()` and assuming that the private key was of the
correct length. If it was actually too short this will write over memory
that it shouldn't.

Fixes #17017
_|_Turning an always false expression into a real test that doesn't do anything apart from appease the compiler.

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_
##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_EVP_PKEY_keygen_init(), EVP_PKEY_paramgen_init(), EVP_PKEY_keygen() and
EVP_PKEY_paramgen() return 1 for success and 0 or a negative value for failure.
In particular a return value of -2 indicates the operation is not supported by
the public key algorithm.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_EVP_DigestVerifyFinal can return the negative values to indicate errors. 

> EVP_DigestVerifyFinal() and EVP_DigestVerify() return 1 for success; any other
> value indicates failure.  A return value of zero indicates that the signature
> did not verify successfully (that is, B<tbs> did not match the original data or
> the signature had an invalid form), while other values indicate a more serious
> error (and sometimes also indicate an invalid signature form).

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Some fragmentary api return check changes are gathered in this pr. 

It may take effort to review. Thank you for your time, sincerely. 

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_EVP_Cipher() returns the amount of encrypted / decrypted bytes, or -1
on failure if the flag B<EVP_CIPH_FLAG_CUSTOM_CIPHER> is set for the
cipher.  EVP_Cipher() returns 1 on success or 0 on failure, if the flag
B<EVP_CIPH_FLAG_CUSTOM_CIPHER> is not set for the cipher.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_vsr2vr1() fails on OS X because the main loop doesn't strip the
non-numeric register prefixes for OS X.

Strip any non-numeric prefix (likely just "v") from registers before
doing numeric calculation, then put the prefix back on the result.

Fixes: #16995

Signed-off-by: Martin Schwenke <martin@meltin.net>

Personal CLA - no longer with IBM.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Use the engine's engine_id to check if the engine already exists before we attempt to dynamically load it (again). Loading an engine more than once will always fail, and often lead to crashes (#17023).

Hence, it is preferred that we avoid this double load in the first place.

Fixes #17023.

Signed-off-by: Eyal Itkin <eitkin@nvidia.com>_|_Hi,

This merge request aims to fix the issue with the returned exit code 0, even if there are validation errors and/or something has failed to perform correctly while executing the openssl command line utility. I intentionally avoided a big refactoring to make the commit as clean and short as possible and to perform a fix for now. I appreciate each feedback :)

KR,
Rami_|_This PR brings a number of small improvements to the HTTP client.

Extensions:
* adds an option that enables retrying HTTP requests on non-fatal server errors,
namely for the HTTP status codes 102 (Processing), 408 (Request Timeout), 
424 (Failed Dependency), 429 (Too Many Requests), 500 (Internal Server Error),
502 (Bad Gateway), 503 (Service Unavailable), and 504 (Gateway Timeout).
Any `Retry-After` response-header field value given by the server is respected, also when getting redirected.
* adds more capable convenience functions `OSSL_HTTP_get_ex()` and `OSSL_HTTP_transfer_ex()`.
The existing functions `OSSL_HTTP_get()` and `OSSL_HTTP_transfer()` are superseded this way - while these cannot be removed for backward compatibility, maybe the should be deprecated?
* adds low-level functions `OSSL_HTTP_get_status()` and `OSSL_HTTP_may_retry()`
* introduces more future-proof `flags` parameters, 
   converting the `keep_alive` parameters to `flags` in a backward compatible way.
* adds the function `OSSL_HTTP_set_long_overall_timeout()`

Bug fixes:
* fixes a redirection timeout issue of `OSSL_HTTP_get()`
* fixes the parsing of responses with status codes other than 200, such that keep-alive works also on error
* fixes the handling of the `server` argument and the default `port` argument, 
moving a check from `OSSL_HTTP_set1_request()` to `OSSL_HTTP_open()`

* adds a workaround for SSL BIOs not supporting the `gets` method

Misc
* adds `http_wget_test.c`, which performs HTTP(S) GET with a [real test server](http://httpbin.org/) if reachable.
* slightly improves various parts of the documentation

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_This is necessary to keep compatibility with 1.1.1.

Fixes #16660

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_CLA: trivial

After `EVP_PKEY_set_alias_type(pkey, EVP_PKEY_SM2)`,  pkey->type change to `EVP_PKEY_SM2`, `EVP_PKEY_get0_EC_KEY(pkey)`  will return NULL.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_It isn't clear if all of these are possible, but it is still better to verify the returns.  The seemingly major change in provider_conf.c is reducing the scope of the variable and only checking for NULL in that block.

Issues located by Brian Carpenter of Geeknik's Farm.


- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_OBJ_obj2txt can return -1 for error. 

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_In this pr, the behavior of **do_X509_REQ_verify** is changed since many other places rely on the new behavior. 

+ apps/ca.c:1390
+ apps/cmp.c:664
+ apps/req.c:930
+ apps/x509.c:705

If it's more reasonable to fix the above invoking places, I can reopen another pr. 

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_In a recent upstream change
(43da9a14f0e73f42f28ae34219929b44df5d1a11)
the parameter sigsize becomes a read/write input in
EVP_PKEY_sign(), and after signing, sigsize will be overwritten with
the actual size and used in the verify step. As the speed program
calls EVP_PKEY_sign() on the same context repeatedly, sigsize value is
no longer the initial available size, and may fail in later buffer
size checks.

This fix adds a new buflen member in struct loopargs (which is only
used within apps/speed.c), to save available buffer size and
to be used as sigsize input in EVP_PKEY_sign() calls.
Sigsize still contains the signature size for the verify step.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_These DER encoder implementations are supposed to be aliases for the
"type-specific" output structure, but were made different in so far
that they would output a "type specific" public key, which turns out
to be garbage (it called i2o_ECPublicKey()).  The "type-specific"
output structure doesn't support that, and shouldn't.

Fixes #16977
_|_This fixes some miscellaneous threading issues that were reported in #16970. It incorporates @paulidale's commit from #16972.

Still draft. Fixing these is a bit like playing whack-a-mole. I fix one and another problem surfaces._|_X509_self_signed  - Return 1 if given cert is considered self-signed, 0 if not, or -1 on error.

please check the operator I changed to, I am not familiar with this API. But at least I think the binary check is improper. 

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_BN_is_prime_fasttest() and BN_check_prime return 0 if the number is composite,
1 if it is prime with an error probability of less than 0.25^B<nchecks>, and
-1 on error.

Binary check of BN_check_prime will mix -1 and 1. 

In fact, I am not that confident this is wrong, just suspicious. Say sorry for bothering beforehand if it's not a bug. 



##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_x509_name_canon returns 0 for failure and 1 for success. 

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The global variable `default_DSO_meth` was potentially set multiple times by different threads.  It turns out that it could only be set to a single value so the race is harmless but still better avoided.  The fix here simply removes the global and accesses the value it was set to via the `DSO_METHOD_openssl()` call.

Problem discovered via #16970, but this does not resolve that issue because there are other concerns.

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #16961

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #16936

This is a draft because IMO documentation and some tests need to be added. And perhaps some more fixing/finetunning is also needed.

The question is, do we want this? The current behavior is definitely a regression from 1.1.1 though.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Addressing:
* 1493387 Logically dead code
* 1493364 unchecked return value
* 1493375 unchecked return value
* 1493382 argument cannot be negative
* 1493362 resource leak

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_same issue for 1.1.1_|_Same issue for 1.1.1._|_This fixes "undefined reference to `aes_gcm_dec_128_kernel' in function `armv8_aes_gcm_decrypt'" and similar

Fixes #16949
_|_Checklist
- [x] tests are added or updated
_|_This avoids using accidentally uninitialized key schedule in applications that use DES_set_key() not expecting it to check the key which is the default on OpenSSL <= 1.1.1

Fixes #16859
_|_

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_
##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_…neration algorithm process in clause 6.1 and 6.2 of GMT 0003.2-2012.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The CHACHA20_POLY1305 cipher is disabled in the FIPS mode, but s_server is able to send TLS_CHACHA20_POLY1305_SHA256 cipher suite in the ServerHello message:
```
$ openssl s_server -accept 127.0.0.1:4433 -cert cert.pem -provider fips -propquery fips=yes -ciphersuites TLS_CHACHA20_POLY1305_SHA256
Using default temp DH parameters
ACCEPT
ERROR
shutting down SSL
CONNECTION CLOSED
```
```
$ openssl s_client -connect 127.0.0.1:4433
Connecting to 127.0.0.1
CONNECTED(00000003)
40970115F87F0000:error:0A0001BB:SSL routines:ssl3_get_record:bad record type:ssl/record/ssl3_record.c:371:
---
no peer certificate available
---
No client certificate CA names sent
Server Temp Key: X25519, 253 bits
---
SSL handshake has read 138 bytes and written 304 bytes
Verification: OK
---
New, TLSv1.3, Cipher is TLS_CHACHA20_POLY1305_SHA256
Secure Renegotiation IS NOT supported
Compression: NONE
Expansion: NONE
No ALPN negotiated
Early data was not sent
Verify return code: 0 (ok)
```
This patch ensures that all modified ciphersuites must be from the FIPS provider (if enabled) and any unsupported ciphersuites are rejected.

Expected result:
```
$ openssl s_server -accept 127.0.0.1:4433 -cert cert.pem -provider fips -propquery fips=yes -ciphersuites TLS_CHACHA20_POLY1305_SHA256
Using default temp DH parameters
ACCEPT
ERROR
40A7902A967F0000:error:0A0000B5:SSL routines:tls_setup_handshake:no ciphers available:ssl/statem/statem_lib.c:170:No ciphers enabled for max supported SSL/TLS version
shutting down SSL
CONNECTION CLOSED
```
```
$ LD_LIBRARY_PATH=/opt/openssl-3.1.0/lib64 /opt/openssl-3.1.0/bin/openssl s_client -connect 127.0.0.1:4433 
Connecting to 127.0.0.1
CONNECTED(00000003)
40E752849F7F0000:error:0A000410:SSL routines:ssl3_read_bytes:sslv3 alert handshake failure:ssl/record/rec_layer_s3.c:1584:SSL alert number 40
---
no peer certificate available
---
No client certificate CA names sent
---
SSL handshake has read 7 bytes and written 297 bytes
Verification: OK
---
New, (NONE), Cipher is (NONE)
Secure Renegotiation IS NOT supported
Compression: NONE
Expansion: NONE
No ALPN negotiated
Early data was not sent
Verify return code: 0 (ok)
```
CLA: regular_|_This is a backport of [#16917](https://github.com/openssl/openssl/pull/16917) to 1.1.1. _|_Fixes #16899 for 1.1.1 branch.

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Free the Post-Handshake Auth digest when there is an error saving the digest to prevent memory leak or wrongly memory access in tls13_restore_handshake_digest_for_pha()._|_In openssl-3.0.0 and system provided, it is not reasonalbe to check null pointer after use.
Maybe the order is accidentally reversed.
Therefore, it is better to correct it.

CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_I found that when a call stack starting with EVP_PKEY_CTX_set_dhx_rfc5114 is invoked. The function in question, fix_dh_rfc5114() evaluates the value ctx->p2 using atoi(). However in this case p2 is null, triggering a segv interrupt, crashing the program.  Further, fix_dh_rfc5114() is called by evp_pkey_ctx_ctrl_to_param() which explicitly sets the state parameter to PRE_CTRL_TO_PARAM but fix_dh_rfc5114() only evaluates the ctx values of p1 and p2 when the supplied state is PRE_CTRL_STR_TO_PARAM. This patch addresses these issues.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_If asked to encode an EC_KEY public key, but no public key value is present
in the structure, we should fail rather than crash.

Fixes the crash seen here:
https://mta.openssl.org/pipermail/openssl-users/2021-October/014479.html
_|_Fix the documentation to not include a comment about cyclic return of data.  It doesn't and hasn't for a while.
Allow a test-rand to have a parent.  It never does anything with the parent (including when prediction resistance is set).
Add a unit test for the test-rand alone.

- [x] documentation is added or updated
- [x] tests are added or updated
_|_For machines where sizeof(size_t) == sizeof(int) there is a possible overflow which could cause a crash.
For machines where sizeof(size_t) > sizeof(int), the existing checks adequately detect the situation.

Fixes #16899

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Currently there is a race possible bacause the reseed_counter
of the master drbg may be incremented after the get_entropy call.
Therefore access the parent's reseed_counter while still holding
the rand_drbg_lock.

This improves commmit 958fec77928a28350f6af252ac5e8d0e6e081faa

_|_- add two checks for the return value of BN_new() in crypto/dsa/dsa_sign.c and crypto/ec/ec_asn1.c.
  The description of ossl_decode_der_dsa_sig() in crypto/asn1_dsa.c shows one line:

  ```c++
  * The BIGNUMs, r and s, must have already been allocated by calls to BN_new().
  ```

  However, the previous version does not check the validity of r and s. Though I find that r and s will finally be checked in the 	function BN_bin2bn(crypto/bn/bn_lib.c:433), I believe it is better to check the return value of BN_new() immediately so that avoid unnecessary troubles in the future.

- add one check for the return value of sk_RSA_PRIME_INFO_new_reserve() in crypto/rsa/rsa_backend.c.
  A similar problem as the above but for sk_RSA_PRIME_INFO_new_reserve().
_|_EVP_PKEY_print_private can return a negative value for failure. 

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_gcc 11.2.0 is the default on Ubuntu 21.10. It emits a (spurious) warning
when compiling test/packettest.c, which causes --strict-warnings builds
to fail. A simple fix avoids the warning.

_|_This should fix the crash mentioned in #14547

Unfortunately we do not have any tests for OCSP_sendreq_bio() so that is the reason it went through unnoticed.
_|_EVP_PKEY_print_private() can return a negative value when fails. 

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_When remaking how programs were linked, the variable `$ress` was forgotten.
Unfortunately, perl treats this with silence.

Fixes #16870
Fixes #16667
_|_Fixes #16858
_|_When handling #16720, I noticed that the `-reqexts` option is ignored when the `-x509` option is used and the `-extensions` option is ignored otherwise. This is not only needlessly confusing but also is not in line with the documentation and with the `-extensions` option of the `x509` app.

This PR solves the issue by making the `-reqexts` option an alias of `-extensions`.
This also simplifies the code and cleans up the doc accordingly.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated

_|_This is a backport of #16846 to 1.1.1. It only contains the fix in `pkey_set_type` and (a modified version of) the test. One of the other issues fixed by #16846 does not apply to 1.1.1, and the other one was already independently fixed by #16751._|_Fix VMS installation

VMS installation scripts were forgotten in the 3.0 release, most of
them have remained as they were for 1.1.1, when the new versioning
scheme should have been reflected in these as well.

Furthermore, the IVP is amended to check the presence of the standard
OpenSSL providers.
_|_Commit 0007ff257c added a protocol version check to psk_server_cb but
failed to take account of DTLS causing DTLS based psk connections to
fail.

Fixes #16707
_|_The documentation omitted the propq parameter

Fixes #16755
_|_Otherwise commands like openssl req -newkey sm2 fail silently without
reporting any error unless -sm3 option is added.
_|_It's a small change to the 'nm' call, to have it look at dynamic symbols
rather than the normal ones.

Fixes #16810
_|_This prevents a compile-time warning on newer gcc.

Also fix the warning to print the correct truncated section name.

Fixes #16814
_|_Fix error code SSL_get_error() when recv the SSL_shutdown msg in async mode

Fixed: #16809

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #16816
_|_Direct leak of 4 byte(s) in 1 object(s) allocated from:
     #0 0x4a067d in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:129:3
     #1 0x57af0d in CRYPTO_malloc /src/openssl/crypto/mem.c:184:12
     #2 0x57af0d in CRYPTO_realloc /src/openssl/crypto/mem.c:207:16
     #3 0x569d17 in BUF_MEM_grow /src/openssl/crypto/buffer/buffer.c:97:15
     #4 0x5c3629 in str_copy /src/openssl/crypto/conf/conf_def.c:642:10
     #5 0x5c1cc1 in def_load_bio /src/openssl/crypto/conf/conf_def.c:452:22
     #6 0x56adf5 in NCONF_load_bio /src/openssl/crypto/conf/conf_lib.c:282:12
     #7 0x4d96cf in FuzzerTestOneInput /src/openssl/fuzz/conf.c:38:5
     #8 0x4d9830 in LLVMFuzzerTestOneInput /src/openssl/fuzz/driver.c:28:12
     #9 0x510c23 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) cxa_noexception.cpp
     #10 0x4fc4d2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
     #11 0x501f85 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) cxa_noexception.cpp
     #12 0x52ac82 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_
##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #16787
Fixes #16788
_|_This is a follow on from https://github.com/openssl/openssl/pull/16783

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_…aram

EVP_CIPHER_param_to_asn1() and EVP_CIPHER_asn1_to_param() return greater
than zero for success and zero or a negative number on failure.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_ https://github.com/openssl/openssl/pull/16768

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Prevent an overflow if an application supplies a buffer that is too small
    
If an application bug means that a buffer smaller than is necessary is passed to various functions then OpenSSL does not spot that the buffer is too small and fills it anyway. This PR prevents that.

Since it requires an application bug to hit this problem, no CVE is allocated.
    
Thanks to David Benjamin for reporting this issue.

_|_

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_When we allocate bindhost/bindport variables, we should free them.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #16773
_|_Fixes #16761 (and resolves https://github.com/open-quantum-safe/oqs-provider/issues/2#issuecomment-936343557 ).
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Lots of macros are defined based on BIO_ctrl, who returns zero and negative values itself. But macros' return value description on documentation missed them.   

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [ ] tests are added or updated
_|_Co-author: @selvanair

This is WIP as it requires the PR #16725 to be merged to pass.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_An EVP_CONTEXT with zero cipher but non-zero engine,
and/or cipher_data is possible if an error happens
in EVP_CTRL_INIT or in EVP_CTRL_COPY, the error handling
will just clear the cipher in that case.

This is for 1.1.1, master is broken differently..._|_When the cipher is copied, the inner_cihper_data
need to be copied as well, using the EVP_CTRL_COPY method.
The EVP_CIPH_CUSTOM_COPY bit needs to be set as well.

I've discovered this issue when playing with #16750 
without this the test_cmac and test_evp fail with a double free.
This patch is for 1.1.1 only because the dasync engine is totally broken
in master, see #16734_|_Fixes #16720, as discussed there._|_Fixes: #16743
_|_so that the call to ENGINE_load_builtin_engines() is performed.

Backport of commit a5c864ce (PR #11543) to 1.1.1. See also #16735

Fixes #11510


_|_Related to #16724

It fixes the crashes, but I think it's incorrect fix

As a result of the proposed changes, s_server fails with output
```
Using default temp DH parameters
ACCEPT
ERROR
C0F18AF7FF7F0000:error:02000090:rsa routines:pkey_rsa_ctrl:illegal or unsupported padding mode:crypto/rsa/rsa_pmeth.c:460:
C0F18AF7FF7F0000:error:03000093:digital envelope routines:evp_pkey_ctx_ctrl_int:command not supported:crypto/evp/pmeth_lib.c:1308:
C0F18AF7FF7F0000:error:0A000093:SSL routines:tls_process_cke_rsa:decryption failed:ssl/statem/statem_srvr.c:2911:
```

BTW, the problem is we've lost the pattern 'call `EVP_PKEY_encrypt` with NULL out ptr - get enclen - allocate memory and call `EVP_PKEY_encrypt` again':
https://github.com/openssl/openssl/blob/19e277dd19f2897f6a7b7eb236abe46655e575bf/ssl/statem/statem_clnt.c#L2860-L2870

If we don't change `pkey_rsa_encrypt` and just fix the dasync engine, we get a SEGFAULT with the following stack trace:
```
bn2binpad (endianess=big, tolen=256, to=0xff <error: Cannot access memory at address 0xff>, a=0x5b8658) at crypto/bn/bn_lib.c:522
522	            *--to = val;
(gdb) bt
#0  bn2binpad (endianess=big, tolen=256, to=0xff <error: Cannot access memory at address 0xff>, a=0x5b8658) at crypto/bn/bn_lib.c:522
#1  BN_bn2binpad (a=a@entry=0x5b8658, to=to@entry=0x0, tolen=tolen@entry=256) at crypto/bn/bn_lib.c:535
#2  0x00007ffff7d19ad3 in rsa_ossl_public_encrypt (flen=48, from=0x5b7fc0 "\003\001\247\337\335\027\260Ǿ\200\370\066\354.\t\346\322{\271\264\251\341S\272Mh\346&ے\273\316Ԋ\034T\024\260P\270\223[\372-\254\272̑", to=0x0, rsa=0x58e330, 
    padding=<optimized out>) at crypto/rsa/rsa_ossl.c:154
#3  0x00007ffff7d1c3df in pkey_rsa_encrypt (ctx=0x5b84f0, out=0x0, outlen=0x7fffffffd4e8, 
    in=0x5b7fc0 "\003\001\247\337\335\027\260Ǿ\200\370\066\354.\t\346\322{\271\264\251\341S\272Mh\346&ے\273\316Ԋ\034T\024\260P\270\223[\372-\254\272̑", inlen=48) at crypto/rsa/rsa_pmeth.c:337
#4  0x00007ffff7f8aac1 in tls_construct_cke_rsa (pkt=0x7fffffffd550, s=0x59bda0) at ssl/statem/statem_clnt.c:2862
#5  tls_construct_client_key_exchange (s=0x59bda0, pkt=0x7fffffffd550) at ssl/statem/statem_clnt.c:3287
#6  0x00007ffff7f85a35 in write_state_machine (s=0x59bda0) at ssl/statem/statem.c:852
#7  state_machine (s=0x59bda0, server=0) at ssl/statem/statem.c:451
#8  0x00007ffff7f73b64 in ssl3_write_bytes (s=0x59bda0, type=23, buf_=0x4e6270, len=0, written=0x7fffffffd768) at ssl/record/rec_layer_s3.c:403
#9  0x00007ffff7f55465 in SSL_write (s=s@entry=0x59bda0, buf=buf@entry=0x4e6270, num=num@entry=0) at ssl/ssl_lib.c:2123
#10 0x0000000000457b8c in s_client_main (argc=<optimized out>, argv=<optimized out>) at apps/s_client.c:2793
#11 0x0000000000445086 in do_cmd (prog=prog@entry=0x4e4390, argc=argc@entry=8, argv=argv@entry=0x7fffffffde40) at apps/openssl.c:415
#12 0x0000000000422507 in main (argc=8, argv=0x7fffffffde40) at apps/openssl.c:295
```
_|_EVP: Reverse the fetch logic in all pkey using functionality

In all initializing functions for functionality that use an EVP_PKEY, the
coded logic was to find an KEYMGMT implementation first, and then try to
find the operation method (for example, SIGNATURE implementation) in the
same provider.

This implies that in providers where there is a KEYMGMT implementation,
there must also be a SIGNATURE implementation, along with a KEYEXCH,
ASYM_CIPHER, etc implementation.

The intended design was, however, the opposite implication, i.e. that
where there is a SIGNATURE implementation, there must also be KEYMGMT.

This change reverses the logic of the code to be closer to the intended
design.

There is a consequence; we now use the query_operation_name function from
the KEYMGMT of the EVP_PKEY given by the EVP_PKEY_CTX (ultimately given by
the application).  Previously, we used the query_operation_name function
from the KEYMGMT found alongside the SIGNATURE implementation.

Another minor consequence is that the |keymgmt| field in EVP_PKEY_CTX
is now always a reference to the KEYMGMT of the |pkey| field if that
one is given (|pkey| isn't NULL) and is provided (|pkey->keymgmt|
isn't NULL).

Fixes #16614
_|_The dasync_aes_128_cbc_hmac_sha1 cipher depends on
EVP_aes_128_cbc_hmac_sha1() returning a NON-NULL value.
We should simply not advertise this cipher otherwise.

Fixes: #7950
_|_Neither queries nor definitions handle duplicated property names well.  Make having such an error.

Fixes #16715

- [x] documentation is added or updated
- [x] tests are added or updated
_|_This avoids a crash in e.g. `openssl chacha20` as reported by
Steffen Nurpmeso on openssl-users.

Resolves: #16713
_|_If the pkey cannot export then ensure that we fetch a signature alg from
the same provider as the pkey.

If the pkey can export then fetch any signature algorithm, but make sure
we still use a keymgmt from the same provider as the signature
implementation. We will export the key from the original provider and
import it into the new one.

Partialy fixes #16614

I've only attempted to fix the SIGNATURE implementation here. Similar fixes probably also apply to other operations.

There seems to be quite a bit of code duplication between `do_sigver_init()` and `evp_pkey_signature_init()` which is probably a target for future refactoring. I've not attempted to do that here since it would almost certainly end up being a bigger change than we should consider for backporting to a stable branch._|_Resolves #16707

_|_EVP_PKEY_eq() assumed that an EVP_PKEY always has the public key
component if it has a private key component.  However, this assumption
no longer strictly holds true, at least for provider backed keys.
EVP_PKEY_eq() therefore needs to be modified to specify that the
private key should be checked too (at the discretion of what's
reasonable for the implementation doing the actual comparison).

Fixes #16704_|_ASYNC_init_thread() will be called automatically by ASYNC_start_job(),
so ASYNC_cleanup_thread() must be called at last, otherwise it will
cause memory leak.

Signed-off-by: Tianjia Zhang <tianjia.zhang@linux.alibaba.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_alternate implementation idea for #11933 (master-does not work)_|_I recently integrated the CMP client (alternatively to EST) in a BRSKI implementation in a way that an existing TLS connection  is reused for the HTTP(S) transfer of CMP messages.
To this end, I embedded the SSL connection represented by the variable `SSL *ssl` as follows:
```
     BIO *sbio = BIO_new(BIO_f_ssl());
     if (sbio == NULL || BIO_set_ssl(sbio, ssl,  BIO_NOCLOSE) <= 0
         ...
```
After the CMP exchange is done, I call `BIO_free(sbio)`
Yet after doing so, the `ssl` connection is not more usable for a further BRSKI message exchange,
and it turns out this is because `ssl_free()` and thus `BIO_free()` does not respect `BIO_NOCLOSE`.
(BTW, looking at the overall code base, `BIO_NOCLOSE` seems to have little influence also on other BIOs).

The present PR fixes this bug._|_Some of the functions are being called on NULL bio with the
expectation that such call will not raise an error.

Fixes #16681
_|_CLA: trivial

Since the docuementation says **_BIO_free() return 1 for success and 0 for failure_** and some other applications who use openssl library are used to use **_if(!BIO_free) {_**, it's better to unify return value. 

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_CLA: trivial

I assume this has been an error in the initial ios conf file. In order to build for ios the shared engine library, needs to be disabled because iOS doesn't have the concept of shared libraries. But instead of only disabling `dynamic-engine` (or like in this commit disabled the `shared`) option the previous config did disable `engine` and with that the `static-engine` compilation as well. This restores the `static-engine` option being enabled by default, but keeping compilation going on iOS.

Cheers!

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_New Linux kernels (>= 5.11) enable KTLS CHACHA which is not FIPS-suitable.

Fixes #16657

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_The EVP_PKEY_dup might fail because an engine methods are in play and we cannot duplicate such keys.

Also, for consistency, duplicate the EVP_PKEY in X509_PUBKEY_dup and if it fails, re-create it using the legacy decode method.

Fixes #16606
_|_EVP_PKEY_dup returns NULL if duplicated key is ENGINE based.
X509_dup will share associated key to support old interface.

Fix https://github.com/openssl/openssl/issues/16644_|_This is adding robustness to the code.  The fix to not mis-set the pointer
is in #16636.

Fixes #16631


- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #16631

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Most extensions are initially sent in the ClientHello and then (optionally) responded to in subsequent messages from the server. However client Certificate messages work differently. In this case the initial extension is added to the server's CertificateRequest message, and the client then may (optionally) respond with the same extension in it's Certificate message.

This was not handled correctly for custom extensions meaning that it was not possible to add custom extensions to a client certificate message.

This should go to 3.0 and 1.1.1. It mostly cherry-picks ok to 1.1.1 but with a trivial conflict in the test. Since its trivial I won't create a separate PR for that branch.

Fixes #16632_|_Originally the code to im/export the EC pubkey was meant to be consumed
only by the im/export functions when crossing the provider boundary.
Having our providers exporting to a COMPRESSED format octet string made
sense to avoid memory waste, as it wasn't exposed outside the provider
API, and providers had all tools available to convert across the three
formats.

Later on, with #13139 deprecating the `EC_KEY_*` functions, more state
was added among the params imported/exported on an EC provider-native
key (including `OSSL_PKEY_PARAM_EC_POINT_CONVERSION_FORMAT`, although it
did not affect the format used to export `OSSL_PKEY_PARAM_PUB_KEY`).

Finally, in #14800, `EVP_PKEY_todata()` was introduced and prominently
exposed directly to users outside the provider API, and the choice of
COMPRESSED over UNCOMPRESSED as the default became less sensible in
light of usability, given the latter is more often needed by
applications and protocols.

This commit fixes it, by using `EC_KEY_get_conv_form()` to get the
point format from the internal state (an `EC_KEY` under the hood) of the
provider-side object, and using it on
`EVP_PKEY_export()`/`EVP_PKEY_todata()` to format
`OSSL_PKEY_PARAM_PUB_KEY`.
The default for an `EC_KEY` was already UNCOMPRESSED, and it is altered
if the user sets `OSSL_PKEY_PARAM_EC_POINT_CONVERSION_FORMAT` via
`EVP_PKEY_fromdata()`, `EVP_PKEY_set_params()`, or one of the
more specialized methods.

For symmetry, this commit also alters `ec_pkey_export_to()` in
`crypto/ec/ec_ameth.c`, part of the `EVP_PKEY_ASN1_METHOD` for legacy EC
keys: it exclusively used COMPRESSED format, and now it honors the
conversion format specified in the EC_KEY object being exported to a
provider when this function is called.

Fixes #16595

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_This is a proposed backport of #16440 (as discussed there) from master to 3.0:

Over the years, the `x509` and `req` app options have become a mess
and their documentation and help output is partly outdated, incomplete, or even wrong.
I recently came across this issue again when extending the tests in #16342.

This PR improves the description of the `-key`, `-in`, and related options
and adds some warnings for useless or problematic option combinations.

Note that this does not change the semantics of the options.

- [x] documentation is added or updated

_|_OpenSSL 1.1.1 links the simple libcrypto.so to libcrypto_variant.so,
this was inadvertently dropped.

Fixes #16605
_|_The header is already included by <windows.h> for WinSDK 8 or later. Actually this causes problem for WinSDK 7.1 (defaults for VS2010) that it does not have this header while SRW Locks do exist for Windows 7.

CLA: trivial
_|_This ensures that only application or engine-based EVP_CIPHERs and EVP_MDs are used as a fallback. Otherwise we can get surprising results like PBKDF2 working with whirlpool hash in a separate library context where no legacy provider is loaded if there is a default configuration file loading the legacy provider.
_|_Fixes #16546

- [x] tests are added or updated
_|_Fixes issue #16517

master branch of PR #16587_|_Fixes issue #16517

3.0 branch of PR #16587 _|_Fixes #16517

<!--
Fixes #16517
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

_|_Fixes #16585 
_|_Fixes #16572
_|_Fixes #16564
_|_This is legacy DH PKEY only code.

Fixes #16562
_|_
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Most of all, this reduces the following:

    built on: built on: Wed Sep  8 19:41:55 2021 UTC

to:

    built on: Wed Sep  8 19:41:55 2021 UTC
_|_away the use of $(DEFINES), which does get populated with defines
given through configuration.  This makes it impossible to configure
with extra defines on VMS.  Uncommenting and moving $(DEFINES) to a
more proper spot gives the users back that ability.
_|_Fixes #16516
_|_'__int64', not 'int64_t'

Ref: commit 2e5cdbc18a1a26bfc817070a52689886fa0669c2
_|_It used bldtop_dir(), which is incorrect for files.
_|_The options -1 and -apr1 were mentioned in DESCRIPTION, not mentioning
any other options or even mentioning that there are more algorithms.
The simple fix is to remove that sentence and let the OPTIONS section
speak for itself.

Fixes #16529
_|_CLA:trivial

There are 3 changes within the pr:

+ Fix documentation: inproper description of OSSL_HTTP_REQ_CTX_free 

    Function OSSL_HTTP_REQ_CTX_free will free wbio if rctx->free_wbio is set while documentation says _The wbio and rbio are not free'd_. This may lead to misuse of freed object. 

+ Fix documentation: update parameters of OSSL_CMP_MSG_read

  Old function defination of OSSL_CMP_MSG_read. Note that some other new functions origins from commit c6313780586f94b0542f55c3ffa399f5ad2c7297 may also need to be added to documentation. 

+ Fix documentation: update parameters of some functions

  Some parameters' names are not consistent with source code. 

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This fix is an addition to the sequence of commits fixing CVE-2021-3712

CLA: individual_|_This affects test/recipes/30-test_evp_data/evpkdf_scrypt.txt and
test/recipes/30-test_evp_data/evppkey_kdf_scrypt.txt, where the "Out
of memory" stanza weren't up to the task, as they didn't hit the
default scrypt memory limit like they did in OpenSSL 1.1.1.

We solve this by setting the |n| value to the next power of two, and
correcting the expected result.

Fixes #16519
_|_In one spot, files aren't properly closed, so the sub-process program
that's supposed to read them can't, because it's locked out.

In another spot, srctop_file() was used where srctop_dir() should be
used to properly format a directory specification.
_|_I assume you saw this one too during your recent audit for issues of this kind, and for some reason decided it is not a vulnerability nor a bug.

But isn't the code of /apps/ also supposed to serve as example code how to use the OpenSSL API?
Wouldn't it be better to avoid this dangerous idiom in /apps/ code?

Edit: only compile tested in the OpenSSL-3.0 branch, but full testing of the same code was done in LibreSSL.  Needless to say, it also applies to older branches in your repo._|_The compiler says that 'unsigned long long' isn't the same as
'unsigned __int64'.  Sure, and considering that crypto/rand/rand_vms.c
is specific VMS only code, it's easy to just change the type to the
exact same as what's specified in the system headers.
_|_Whenever the source from $target{apps_init_src} is added to the source
of a test program, it needs to be linked with libapps.a as well.  Some
init sources depend on that.

Without this, builds break on VMS because of the unresolved symbol
'app_malloc'.

On platforms that do not need anything from libapps.a, adding it is a
no-op.

This is for OpenSSL 1.1.1 only.  OpenSSL 3.0 and beyond have a
different solution.
_|_This fix is an addition to sequence of commits fixing CVE-2021-3712

CLA: trivial_|_
Add border check num_ < 0 to avoid potential bugs. 

CLA:trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_CLA:trivial

+ fix documentation error caused by commit 29b3fdad2b078f45f840f6e45b0fe483b77dbc6f

+ fix documentation error caused by commit 6882652e65d39310c98ba506ceb55a87c702d419

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [ ] tests are added or updated
_|_The x86_64 cross compiler says that 'unsigned long long' isn't the
same as 'unsigned __int64'.  Sure, and considering that
providers/implementations/rands/seeding/rand_vms.c is specific VMS
only code, it's easy to just change the type to the exact same as
what's specified in the system headers.
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated

Adding coverage tests found a few refcount/double free issues._|_This is a bug fix for a DANE corner case where TLSA records publish a "DANE-TA(2) 0 0" full trust anchor certificate, but the remote peer's untrusted chain has instead a cross-cert.

This is the case with Let's Encrypt and the ISRG X1 root, which is also available as a cross cert signed by DST.

- [x] tests are added or updated

[ This is the *3.0* version of #16471 ]_|_Closes: #7679_|_The OTC voted today that the release branch for OpenSSL 3.0 should be
openssl-3.0 rather than openssl-3.0.x.  The release script is changed
accordingly.
_|_Openssl fails to compile on Debian with kfreebsd kernels (kfreebsd-amd64, kfreebsd-i386). The error reported by the compiler is:
```
../crypto/uid.c: In function 'OPENSSL_issetugid':
../crypto/uid.c:50:22: error: 'AT_SECURE' undeclared (first use in this function)
   50 |     return getauxval(AT_SECURE) != 0;
      |                      ^~~~~~~~~
```
This commit changes the code to use the freebsd code in this case.
This fixes the compilation.
_|_This is a bug fix for a DANE corner case where TLSA records publish a "DANE-TA(2) 0 0" full trust anchor certificate, but the remote peer's untrusted chain has instead a cross-cert.

This is the case with Let's Encrypt and the ISRG X1 root, which is also available as a cross cert signed by DST.

- [x] tests are added or updated

[ This is the "master" version of #16471 ]_|_This is a bug fix for a DANE corner case where TLSA records publish a "DANE-TA(2) 0 0" full trust anchor certificate, but the remote peer's untrusted chain has instead a cross-cert.

This is the case with Let's Encrypt and the ISRG X1 root, which is also available as a cross cert signed by DST.

- [x ] tests are added or updated
_|_I've added some guidelines and some rules to provider_core.c in order to avoid deadlocks. I've then refactored the provider_core.c code in order to adhere to the rules.

This incorporates the commit from #16311 so I consider that old PR obsolete.

Fixes #16312_|_The gist of the filter is implemented in DECODER, the 'file:' scheme implementation and the PEM to DER decoder only pass extra data to feed the filter.

As a consequence of this change, it was discovered that we don't treat the structure name specified by the user correctly.  The intention was always that it should specify the *outermost* structure, as given by the decoders.  However, we used it to filter the *innermost* structure, and were arguably not even doing that quite right.
So, there are places where EncryptedPrivateKeyInfo need to be specified, rather than PrivateKeyInfo, and by consequence, there's a need for encoders with that output structure (or test_encoder_decoder fails).

See commits for details.

Fixes #16224 _|_Fixes #16457

The ECDSA and DSA signature tests use Pairwise tests instead of KATS.
Note there is a seperate type used by the keygen for conditional Pairwise Tests.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_This test did not really execute, since usually
the OPENSSL_malloc(0) will fail and prevent the
execution of the KDF.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_We should not assume that the type of an ASN.1 value is UTF8String as
expected. We must actually check it, otherwise we could get a NULL ptr
deref, or worse memory errors.

Reported by David Benjamin._|_This provides a simplified fix (compared to #16342) of issue #16300, 
which as been marked important, regarding the generation of the AKID of a cert.

It takes into account a convention from RFC 5280:
* For self-signed certs the AKID should be suppressed
  (unless forced using `authorityKeyIdentifier = keyid:always`).

and some tricky corner cases:
* Prefer any pre-existing subject key identifier of the issuer cert
  except if issuer cert is same as subject cert and is not self-signed.
* The hash of the public key related to the signing key is taken as fallback
  if the issuer certificate is the same as the current certificate.

Moreover, it corrects the SKID generation in case `-force_pubkey` is used.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated - more tests will be added as part of #16342
_|_This is the 1.1.1 version of #16433

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Fixes #16428
_|_When activating providers via config check we've not already activated them. We skip the activation if we already configured them.  We also fix a related threading problem that could occur if multiple threads attempt to load a config file at the same time.

Fixes #16250 _|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated

this is for 1.1.1 only, a similar patch a07dc816 was already applied to master._|_The legacy implementation duplicates the pctx before creating/verifying
the signature unless EVP_MD_CTX_FLAG_FINALISE is set. We have to do the
same with provided implementations.

Fixes #16321

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_When further extending the tests in #16342, I found two issues with the `req` app:
* In #13658, which - among others - added the `-CA` and `-CAkey` options, I introduced a misconception.
  These two new options should not be ignored if `-x509` is not given, but they should imply `-x509`.
* In commit 41e597a01d95540f52e8bc4d69f88c3d93a093ce I made a mistake such that AKID generation goes wrong if `-CA` is in use.

Both issues are fixed here.

- [x] documentation is added or updated
- [ ] tests are added or updated: they are part of #16342
_|_backport #16409_|_When extending the tests in #16342, I noticed that 
when using the `x509` app with the `-x509toreq` option, the `-extfile` option was wrongly applied, namely on the input cert rather than on the output request, which resulted in ignoring the extfile (unless `-copy_extensions copy` is given as well, which has related, but different effects).
This PR moves the application of the extfile contents to the appropriate place, such that they take the expected direct effect, already documented as:
```
=item B<-x509toreq>
...
X.509 extensions to be added can be specified using the B<-extfile> option.
```
_|_issue #16407 #16408_|_CLA: trivial


<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_While improving the diagnostics of the apps on 'unkown' optionsin in #16416,
I noticed a bug regarding the `cms` `-wrap` option introduced when adding this option in #10904.

This issue could have been avoided by adding tests for the new option._|_$(SRCDIR)/doc doesn't work right on VMS.
_|_In current Configure script, libdir can be specified either an absolute
path or relative, while in Configurations/shared-info.pl, on darwin
system "-install_name" only accepts relative libdir path, and the
program fails when receiving absolute libdir path. This PR is to fix
this and match requirements of scripts.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_There was a problem with the error handling in AES wrap which fell back to a default _final error_.  This adds a fix for the error and more specific errors for the different failure possibilities.
    
Fixes #16387

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Command 'openssl ciphers -convert <name>' always returns failure,
this patch set the correct return value.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_To make incremental builds more possible, we need to have re-configuration impact building as little as possible.  Since rebuilding is sensitive to time stamps, that becomes the important thing to keep track of.

Two files are affected, `configdata.pm` and `include/openssl/configuration.h`.  With this PR, we avoid having their time stamps updated unless their contents have changed, and thusly avoid rebuilding stuff that depend on them unless necessary.

Please read the actual commit messages for the full story.

Fixes #16377_|_this is for the 1.1.1 branch.
apparently the master branch was already fixed._|_Current implementation of warn_binary introduces a regression
when the content is passed in /dev/stdin as an explicit file name
and reads the file to be processed twice otherwise.

I suggest to reimplement this functionality after 3.0 if necessary.

Fixes #16359

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Trivial spelling, whitespace, hashbang, and codestyle fixes._|_This PR is the `master` counterpart of #12457, and fixes #12443.

This is the original message for the 1.1.1 commit:

> ## Fix `d2i_ECPKParameters_fp` and `i2d_ECPKParameters_fp` macroes
>
> These functions are part of the public API but we don't have tests
> covering their usage.
> They are actually implemented as macroes and the absence of tests has
> caused them to fall out-of-sync with the latest changes to ASN1 related
> functions and cause compilation warnings.
>
> This commit fixes the public headers to reflect these changes.

In `master` we inherited the defect in the public header.

The test for this uncovered a second bug, dealing with curves without associated OIDs.
This PR (as well as #12457) also includes a fix for this second issue.

## Tasks

- [x] Cherry-pick test from #12457
- [x] Evaluate if #12443 still affects `master`
  - [x] Fix #12433 in `master` if needed
- [x] Pass `*_fp()` tests in Windows_|_This fixes spurious error queue entries like
```
007E7E0D01000000:error:100C0102:BIO routines:BIO_puts:passed a null parameter:../openssl/crypto/bio/bio_lib.c:406:
007E7E0D01000000:error:100C0102:BIO routines:BIO_puts:passed a null parameter:../openssl/crypto/bio/bio_lib.c:406:
```
mentioned in https://github.com/openssl/openssl/issues/16300#issue-967625058.

These are due to the IMHO unfortunate design decison that `BIO_puts(NULL, ...)`, takes a NULL BIO input as an error,
while most/all other BIO print functions simply are no-ops in this case.
_|_This functionality was completely untested.

Doesn't fix #16002 since that's a bug against 1.1.1.


- [x] documentation is added or updated
- [x] tests are added or updated
_|_This is based on #16252 and will need to be rebased once that is merged.

## Tasks

- [x] Enable the tests again
- [ ] Fix the failure_|_This is based on #16252 and will need to be rebased once that is merged.

## Tasks

- [x] Enable the tests again
- [ ] Fix the failure_|_This is based on #16252 and will need to be rebased once that is merged.

## Tasks

- [x] Enable the tests again
- [ ] Fix the failure_|_This is based on #16252 and will need to be rebased once that is merged.

## Tasks

- [x] Enable the tests again
- [x] Fix the failure
  - [x] Cherry-pick of 64fac96de81d3dc19cc0c9045c341f0dec818075 from `master`
 _|_This is based on #16252 and will need to be rebased once that is merged.

## Tasks

- [x] Enable the tests again
- [ ] Fix the failure_|_The latest change misdocumented OSSL_PARAM_get_utf8_string(), that
change should have been for OSSL_PARAM_set_utf8_string().
_|_check the result of BIO_new, clean and return when fails

CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Check the result of BIO_new and clean up when fail

CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The `sk` variable is assigned to `s->session->peer_chain`.
If `ssl3_digest_cached_records()` were to fail, then `sk` would still be
non-NULL, and subsequently freed on the error return. When the session
is freed, it will then attempt to free `s->session->peer_chain`,
resulting in a double-free (of `sk`).

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This reverts all the commits from #16027. I.e, this also effectively tests that the change that triggered the #16266 issue is unapplied.

Fixes #16266 

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_This is a backport of the the same fix as in https://github.com/openssl/openssl/pull/16291

The s390x specific implementation in crypto/evp/e_aes.c does not update the cipher context's IV field during an operation for AES OFB and CFB.

An application that uses EVP_CIPHER_CTX_iv() to get the updated IV would thus always get the original IV value on s390x. Other platforms are not affected as far as I can tell.

I have added a testcase in test/evp_extra_test.c to reproduce this error.

<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_The s390x specific implementation in `crypto/evp/e_aes.c` does not update the cipher context's IV field during an operation for AES OFB and CFB. 

An application that uses `EVP_CIPHER_CTX_iv()` to get the updated IV would thus always get the original IV value on s390x. Other platforms are not affected as far as I can tell. 

Please note that the provider based implementation in `providers/implementations/ciphers/cipher_aes_hw_s390x.inc` does it correctly already. The fix in `e_aes.c` aligns the code to the code in `cipher_aes_hw_s390x.inc`.

Because the provider based implementation is correct, an application using OpenSSL 3.0 will not see the error. However, the same error is in the OpenSSL 1.1.1 branch, and with OpenSSL 1.1.1 the error can be seen by an application (on s390x). I would suggest to fix this anyway in the master branch, since the code in `e_aes.c` is wrong, too.

I have added a testcase in `test/evp_extra_test.c` to reproduce this error. Of course, it won't fail with OpenSSL 3.0, because the code goes the provider path. I don't know how the code in `e_aes.c` could be tested in OpenSSL 3.0.... 

I will submit another PR for the same fix in the OpenSSL 1.1.1 branch.

<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_If there are no suitable encoders it might mean the key is in
an engine and thus it is a legacy key. Try legacy encoding
routines to encode the public key. We do not attempt encoding
a private key as it would be in most cases impossible anyway.

Fixes #16256
_|_If key length is different from the existing key length and it is not
a settable parameter, raise an error.

Fixes #16277
_|_Fixes #16273
_|_
Fixes #16261_|_<CommonCrypto/CommonRandom.h>, as required by older releases of
the macOS developer tools.

Fixes #16248

CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
_|_There were multiple issues with getting OSSL_PKEY_PARAM_PUB_KEY
from a legacy EVP_PKEY DH and DHX keys.

Fixes #16247

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_This is an attempt at syncing the GitHub CI infrastructure for the 1.1.1 branch with what we do in `master`

# Tasks

- [x] Sync `ci.yml` file
  - [x] Ensure tests are running
- [x] Import `windows.yml`
  - [x] Ensure tests are running
- [x] Import `cross-compiles.yml`
  - [x] Ensure tests are running
- [x] Import run-checker workflows
  - [x] Ensure tests are running
- [x] Disable problematic tests (they will be dealt with in separate PRs)
  - 9c3a9ab176 `[cross-compiles.yml] Disable sparcv9`
    - [x] Dedicated PR: #16336
  - f73c3720e1 `[ci.yml] Disable krb5 external tests`
    - [ ] Dedicated PR: #16339
  - 850ed18505 `[ci.yml] Disable pyca external tests`  
    - [ ] Dedicated PR: #16340
  - f9c3c9cdff `[run-checker-ci.yml] Disable no-tls1_3 tests`
    - [x] Dedicated PR: ~~#16335~~ #16453 
  - e88314973a `[ci.yml] Disable memory sanitizer build` (fails due to timeout)
    - [ ] Dedicated PR: #16338
  - 111244dec5 `[run-checker-merge.yml] Disable ubsan build`
    - [x] Dedicated PR: ~~#16337~~ #16423 
- [x] Evaluate `run-checker-daily.yml`
_|_Also update and slightly extend the respective documentation and simplify some code.
~and add  internal `ossl_x509_algor_from_nid()` for simplifying code.~

This is all minor stuff, so I'd say can wait until after 3.0 release._|_Fixes #16238

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This is rather a workaround as better fix would require loading only the pem2der decoder in the provided file store if we expect crls or certs only.

Fixes #16224

Also in store_result: Do not try to decode something unexpected.
_|_Fixes #16226
_|_So far, `apps/cmp.c` just used `load_certstore()` to load the trust store for TLS connections,
but it must use the enhanced function `load_trusted()` that takes over any provied verification parameter options._|_Fixes #15484

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Two issues in the cms application are fixed by this PR.

Fixes #16195
_|_Fixes #16196

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Fixes #16200


- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_If objects are added in a config file the OPENSSL_INIT_LOAD_CONFIG
will be called recursively which results in hang in RUN_ONCE.

Fixes #16186
_|_So far,  `ERR_print_errors()` was not called on Signature Verification Failure, resulting in poor diagnostics in this case.
Also centralize this call to simplify the code.
_|_Also fix some inconsistencies and minor bugs related to the
install_fips target on Windows and VMS.

Fixes #16194
_|_Fixes #12649_|_Fixes #16197

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [ ] tests are added or updated
_|_This was introduced in 814b5133e for MSVC. C++Builder [doesn't need it](http://docwiki.embarcadero.com/RADStudio/Rio/en/Getpid), and in fact suffers a link error:

```
        "ilink32" -x -Gn -q -w-dup -j"C:\Program Files (x86)\Embarcadero\Studio\20.0\lib\win32c\release" -L"C:\Program Files (x86)\Embarcadero\Studio\20.0\lib\win32c\release" -ap -Tpe c0x32.obj wildargs.obj  -x -Gn -q -w-dup -j"C:\Program Files (x86)\Embarcadero\Studio\20.0\lib\win32c\release" -L"C:\Program Files (x86)\Embarcadero\Studio\20.0\lib\win32c\release" @MAKE0016.@@@
Error: Unresolved external '__getpid' referenced from C:\USERS\T_17_\SOURCE\REPOS\CRYPTOPALS\OPENSSL_ANOTHER\APPS\LIBAPPS.LIB|libapps-lib-s_socket
Error: Unable to perform link
```_|_Add Paul Dale as an approved release signer.

_|_This avoids using the shell's `&&` and shortens the lines a bit.
It also makes for less scrolling when looking for the config command line.


- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Add missing session timeout calculation in `ssl_get_new_session()`

Fixes #16142 

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_If an engine is non-NULL in EVP_PKEY_CTX_new() call an assert might
have been incorrectly triggered or the engine might be finished
without being inited.
_|_Previously, SHA1 security bits were lowered resulting in TLS and DTLS versions below v1.2 only working at security level 0. Adjust the security callback and documentation to match reality.

@kroeckx 

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #10777
_|_removes the corrupted code_|_Also disable the AES-CCM in TLS-1.3 which is broken on current kernels.

Fixes #16089
_|_This came up when connecting the CMP client via HTTPS and a proxy to a real server.
Interestingly, the server gave `400 Bad request` already on `OSSL_HTTP_proxy_connect()`:
```
cmpClient:CMPclient_setup_HTTP():src/genericCMPClient.c:446: INFO: will contact
  https://ec2-....compute-1.amazonaws.com:443/ejbca/publicweb/cmp/ECCEndEntity
  via proxy ....net:9400
cmpClient:send_receive_check():crypto/cmp/cmp_client.c:166: INFO: sending IR
CMP client: HTTP CONNECT failed, reason= 400 Bad request
cmpClient:():src/cmpClient.c:1534: ERROR: Failed to perform CMP transaction
cmpClient:():crypto/http/http_client.c:1324: ERROR: connect failure:OSSL_HTTP_proxy_connect():reason= 400 Bad request
cmpClient:():crypto/cmp/cmp_client.c:172: ERROR: transfer error:send_receive_check():request sent: IR, expected response: IP
cmpClient:CMPclient():src/cmpClient.c:1665: ERROR: CMPclient error 159: transfer error
```_|_Backport of #16074 to the 1.1.1 branch._|_This contains 2 fixes affecting SSL_key_update():

- Don't reset the packet pointer in ssl3_setup_read_buffer

Sometimes this function gets called when the buffers have already been
set up. If there is already a partial packet in the read buffer then the
packet pointer will be set to an incorrect value. The packet pointer already
gets reset to the correct value when we first read a packet anyway, so we
don't also need to do it in ssl3_setup_read_buffer.

- Disallow SSL_key_update() if there are writes pending

If an application is halfway through writing application data it should
not be allowed to attempt an SSL_key_update() operation. Instead the
SSL_write() operation should be completed.

The former issue can result in a "bad record mac" problem if a partial record read occurs around the same time as a key update.

Fixes #13729
Fixes #12485

PR #16021 will provide tests for these scenarios.

This should also be applied to 1.1.1, but I will wait until this is approved to create a PR there since it requires some minor adjustment there._|_The flag_allow_md prevents setting a digest in params however this is unnecessarily strict. If the digest is the same as the one already set, we do not return an error.

Fixes #16071_|_This is a follow up of 15729bef385211bc2a0497e2d53a45c45d677d2c.  Even
when the host does not support IPv6 at all, BIO_lookup_ex may now
return IN6ADDR_ANY in addition to INADDR_ANY, as the second element of
the ai_next field.

After eee8a40aa5e06841eed6fa8eb4f6109238d59aea, the do_server function
prefers the IPv6 address and fails on the BIO_socket call.  This adds
a fallback code to retry with the IPv4 address returned as the first
element to avoid the error.

The failure had been partially avoided in the previous code with
AI_ADDRCONFIG, because getaddrinfo returns only IPv4 address if no
IPv6 address is associated with external interface.  However, it would
be still a problem if the external interface has an IPv6 address
assigned, while the loopback interface doesn't.

Signed-off-by: Daiki Ueno <dueno@redhat.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The implementation of EVP_PKEY_pairwise_check() is also changed
to handle the legacy keys.

Fixes #16046

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
_|_When no md is set, the raw operations should be allowed.

Fixes #16056
_|_Fix various minor issues with the HTTP server:

* Fix the port output of the HTTP server. 
So far, on automatic local port selection, `Awaiting new connection on port 0...` was printed.
* Make the verbosity setting of the HTTP server dynamic.

This has been extracted from #16051 for separate treatment._|_Fix various minor bugs in the CMP client and test server ~and underlying HTTP server~:
* Correct the handling of the `-verbosity` option of the CMP app: So far, `verbosity` settings in config file were ignored.
* So far, CMP server logging was not actually visible; this is fixed by sending it to `stderr` rather than `stdout`.
* Make sure that logging of CMP server on received request type is done before checking details,
  such that it is given also for the case that a check fails, where it typically is most interesting.
* Make server diagnostics by `80-test_cmp_http` more verbose: by default, print message types received and responded.
* ~Fix the port output of the HTTP server. So far, on automatic local port selection,
`Awaiting new connection on port 0...` was printed.~
* ~Make the verbosity setting of the HTTP server dynamic~

This has been extracted from #16050 for separate reviewing._|_* CMP mock server: add `-ref_cert` option and corresponding `ossl_cmp_mock_srv_set1_refCert()` and update tests
   Fixes #16041

* `X509_cmp.pod:` Point out that the `X509_NAME_cmp()` arguments may be `NULL`
  (This was not document yet and is used in the fix.)

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_The flag only affects which record types are queried via DNS (A or
AAAA, or both).  When node is NULL and AF_UNSPEC is used, it prevents
getaddrinfo returning the right address associated with the loopback
interface.

Signed-off-by: Daiki Ueno <dueno@redhat.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_This fixes a subtle bug in the compatibility declaration of the undocumented legacy OCSP HTTP API function `OCSP_REQ_CTX_http()`, which must always expect ASN.1 formatted input. 
This also is a workaround for the strange situation described in #16028 that connect BIOs do not support `BIO_gets()`.

Also improve the documentation of `OSSL_HTTP_REQ_CTX_set_expected()` for the corner case `timeout` param < 0.

- [x] documentation is added or updated
_|_Fixes https://github.com/openssl/openssl/issues/13729 and https://github.com/openssl/openssl/issues/12485
- In tls13 key update， the block socket is rigiht. Then in  non-blocking, The keyupdate is sending when local is writing, that will get the error code ```SSL_R_BAD_LENGTH``` .  The keyupdate  is sending when local or peer is reading, that will get  the error code ```SSL_R_DECRYPTION_FAILED_OR_BAD_RECORD_MAC``` . The key update msg interrupted the complete encryption record. 
 - My current thinking is that when there is reading and writing, it is delayed until the reading and writing are completed to send and receive key updates. _|_Fixes #15978
_|_Missing @ caused a blank link which caused breakage.

Fixes #16014

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_According to RFC 3217, when encrypting 24 bytes of data(Triple-DES key),
the length of ciphertext should be 40 bytes, not 56 bytes.
EVP_CipherFinal_ex calls des_ede3_wrap_cipher, when input is empty,
des_ede3_wrap_cipher should return 0, instead of calling des_ede3_wrap
to add extra 16 bytes._|_When creating a signed S/MIME message using SMIME_write_CMS()
if the reading from the bio fails, the state is therefore
still ASN1_STATE_START when BIO_flush() is called by i2d_ASN1_bio_stream().
This results in calling asn1_bio_flush_ex cleanup but will only
reset retry flags as the state is not ASN1_STATE_POST_COPY.
Therefore 48 bytes (Linux x86_64) leaked since the
ndef_prefix_free / ndef_suffix_free callbacks are not executed
and the ndef_aux structure is not freed.

By always calling free function callback in asn1_bio_free() the
memory leak is fixed.

(cherry picked from commit 3a1d2b59522163ebb83bb68e13c896188dc222c6)
https://github.com/openssl/openssl/pull/14844_|_Fixes #15984
_|_2 of these commits should fix the (big-endian and 32-bit PPC) build problems seen in Issue #15923.  The other seems to be required to build with an ancient version of binutils.

Testing:
* Tested on IBM 64-bit little-endian Power 9 LPAR with gcc-11.1.1 and binutils-2.35.1. Builds, runs (`LD_LIBRARY_PATH=. openssl speed ecdhp384 ecdsap384`), no visible performance penalty due to the change of branch instruction.
* Tested on IBM 64-bit big-endian Power 7 LPAR with gcc-8.3.1 and binutils-2.29.1. Builds, runs .
* The 32-bit (powerpc) fix is untested. However, it seems quite obvious given that building the code is conditional on 64-bit but the function calls were built unconditionally.
* I'm unable to test the build on AIX because the compiler is complaining about type conflicts between gcc and system headers (even on code that built fine 2 weeks ago). Not sure what has changed on this machine... sorry about that!

I'm running `make test` on the test machines I have and will confirm results in a comment a bit later...
<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
_|_Fixes #15945 

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [x] tests are added or updated
_|_CID #1486532
CID #1486531
_|_There were 4 classes of failure:

- line ending problems;
- unicode problems;
- file path munging problems; and
- a "hang" in test_cmp_http.

The unicode problems appear to be somewhere between wine or msys - they
don't actually appear to be a problem with the built binaries. We just skip
those tests for now.

Fixes #13558
_|_The issues are due to an integer overflow that may happen on `(ERR_SYSTEM_FLAG << 1)`.
_|_
Backport of #15924 
_|_When decoding a key and asking the keymgmt to import the key data, it
was told that the key data includes everything.  This may not be true,
since the user may have specified a different selection, and some
keymgmts may want to be informed.

Our key decoders' export function, on the other hand, didn't care
either, and simply export anything they could, regardless.

In both cases, the selection that was specified by the user is now
passed all the way.
_|_

_|_These topics came up with #15224; moved them to here.

* `Makefile:` Add `SRCS` list of all `.c` (and any `.cc` and `.cpp)` files
* `Makefile:` Update [**new:** _but disable_] `lint` target, using `splint` with some quirks
* `Makefile:` Exclude dummy header `asn1_mac.h` from `CRYPTOHEADERS`
* `internal/asn1.h:` Add missing `#include <openssl/bio.h>`
* `Makefile:` Add `check-format` target, operating on all `.c` sources and crypto+ssl headers











_|_Missing '(' added into a PowerPC-specific command

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fix a number of:
- potential memory leaks on error paths
- unchecked returns from memory allocation functions
- improve the error return in evp_test

Alternative to #15906 and #15834.

Issues reported by @lequangloc using Facebook's Infer static analyzer (https://fbinfer.com/, Pulse.ISL checker) 

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_This avoids use of uninitialised memory.

Follow on to #15900

_|_Fixes #15639
_|_Extending #15847 I spotted a bug in `file_name_check()`, which is fixed here.

BTW, there is pretty strong code overlap of `storemgmt/file_store.c` and `e_loader_attic.c`,
which makes maintenance of these files tedious and error-prone.
_|_Standard Posix Threads (SPT) Threads are an older separate branch of
pthreads that do not support some of the capabilities in the current
Posix User Threads (PUT).

Fixes #15885

Signed-off-by: Randall S. Becker <rsbecker@nexbridge.com>_|_As discussed in OTC meeting on Tuesday.

Fixes #15839.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [ ] tests are added or updated
_|_While re-working #15790 and testing the new check I found that 
* there were some minor bugs in reporting error reason codes via CMP `error` messages
* the internal CMP message creation API and its documentation deserved some cleanup and corrections

This PR fixes both, and enhances the related internal function `ossl_sk_ASN1_UTF8STRING2text()`.

- [x] documentation is added or updated
- [x] tests are added or updated
_|_Fixes warnings about using implicit declaration for strlen() on AIX.
_|_The precondition that the caller to the property string routines held a lock over the property string store is no longer met in several places.  Instead of relying on the caller locking correctly, the property string database now contains locks which prevent threading issues.
    
Fixes #15866

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #9498 

1.0.2 use getauxval to get CPU capacibility by default, 
1.1.1 use SIGILL & sigsetjmp by default, only use getauxval on certain condition:
```
# if defined(__GLIBC__) && defined(__GLIBC_PREREQ)
#  if __GLIBC_PREREQ(2, 16)
#   include <sys/auxv.h>
#   define OSSL_IMPLEMENT_GETAUXVAL
#  endif
# endif
```
but NDK with clang does not recognize that, and NDK with api level greater than 18 support getauxval, 
see https://developer.android.google.cn/ndk/guides/cpu-features 
so add it for NDK and walk around SIGILL & sigsetjmp way, which maybe problematic on some android platform...

Signed-off-by: yunhai haihai107@126.com
_|_Previously providers were added to the store first, and then subsequently initialised. This meant that during initialisation the provider object could be shared between multiple threads and hence the locks needed to be held. However this causes problems because the provider init function is essentially a user callback and could do virtually anything. There are many API calls that could be invoked that could subsequently attempt to acquire the locks. This will fail because the locks are already held.

This PR refactors things so that the provider is created and initialised before being added to the store. Therefore at the point of initialisation the provider object is not shared with other threads and so no locks need to be held.

In order to achieve this we no longer create the predefined providers up front, and we don't create provider objects for providers loaded from config that aren't activated. Instead we store this information away in a table for future reference. We already had a structure that did most of the job for this table, that was used for holding information about the predefined providers. This PR just expands that structure out a bit, and makes it possible for user code to add new entries.

Fixes #15793
Fixes #15712
_|_Upon user feedback I found that the test/mock CMP server implemented `-poll_count` insufficiently: only for the first request.
Moreover, the CMP client diagnostic output of the `checkAfter` value received from the server was not always right.
This PR fixes both issues.
_|_This should back port to 1.1.1 cleanly and it seems like it would be useful and low risk there too.

The app_malloc() function terminates execution if the allocation fails.  The tests implement their own app_malloc() in an attempt to reduce the amount of code pulled in.

This version also needs to terminate on failed allocation.  The alternative would be adding failed allocation checks pervasively throughout the apps's commands.

As noted by @lequangloc in #15834.

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Fixes #13336

This includes one part of the #15798 PR. It will be dropped after that PR is merged and this is rebased.
_|_Add a few testcases.

Fixes #15749

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated

Mostly these changes seek to fix testing of TLS 1.3 with KTLS.  Previously since the cipher suites were never set, the TLS 1.3 tests always tested the default cipher instead of the requested cipher.  While fixing this I also cleaned up some other bits of the KTLS tests (including fixing a small regression in #14799 where it still used SSL_set_mode for the serverssl) to make them a bit more robust in the face of varying kernel support and to make it easier to add new cipher suites.  Patch 2 adds TLS 1.2 and TLS 1.3 Chacha20-Poly1305 test suites for supported platforms (currently only for Linux)._|_Fixes #15809

Signed-off-by: Randall S. Becker <rsbecker@nexbridge.com>
_|_Builds with old compilers might be broken by this._|_I was not happy that many TODOs also for CMP code were removed (during my vacation) in PR #15539 without actually solving them.
I've started tracing those TODOs for which I feel responsible.

I just found out that the answer on the TODO `is the server host name correct for TLS via proxy?`, which  was removed from `apps/cmp.c`, is "yes",
but while experimenting on this I encountered a bug that leads to connection failure (with the misleading error: `received wrong http version`) when the HTTP client tries to CONNECT using TLS via a proxy. This is fixed by the present PR._|_Preparing #15778, I found that the CMP test server was missing a critical check.
Implementing it, I found that some CMP and CRMF API elements were missing, part of which are needed for the fix.
Hope it is not too late to fix this and add those elements now.

<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_It turned out that `app/cmp.c` contains a bug in reporting the HTTP proxy being used.
For fixing this, `OSSL_HTTP_adapt_proxy()`, needs to be exported, 
which in turn allows a cleanup: remove `http_local.h`.
_|_This fixes several issues that came up in aftermath of #15682.

* ~`fuzz/asn1parse.c:` Clean up non-portable code and catch `malloc` failure~
   `ASN1_parse_dump():` allow NULL BIO input, which simplifies also `fuzz/asn1parse.c`
*  ASN1: rename `asn1_par.c` to `asn1_parse.c` for clarity; simplify `asn1_parse2()`
*  BIO: Make source file names in `crypto/bio/` consistent
*  `BIO_dum_indent_cb():` Fix handling of `cb` return value
*  BIO: prevent crash on NULL BIO for `prefix_ctrl()` and thus for `BIO_set_prefix(),` `BIO_set_indent(),` etc.
* `BIO_write_ex():` Make handing of BIO `b == NULL` and `dlen == 0` less redundant

- [x] documentation is added or updated
- [x] tests are added or updated
_|_This is a follow-up on #15648 as discussed there: https://github.com/openssl/openssl/pull/15648#discussion_r648001126.

* HTTP client: Fix GET request handling when `rctx` is reused (keep-alive)
* Update the documentation of `OSSL_HTTP_REQ_CTX_set1_req().`
* Rename `OSSL_HTTP_set_request()` to `OSSL_HTTP_set1_request()` for clarity

_|_* `25-test_verify.t:` Add test case: accept trusted self-signed EE cert with key usage keyCertSign also when strict.
  Such a cert would not be well-formed according to RFC 5280, but it is okay because [RFC 6818 section 2](https://datatracker.ietf.org/doc/html/rfc6818#section-2) clarifies that directly trusted self-signed EE certs are out of scope.
* `25-test_verify.t:` Prevent expiration of test case 'Name constraints bad othername name constraint'
  as agreed in https://github.com/openssl/openssl/pull/15611#issuecomment-855803963. Otherwise the test case would become useless.
* `test/certs/mkcert.sh:` Correct description of `geneealt` parameters

- [x] tests are added or updated
_|_As discussed for #15493, the return values of `BIO_write_ex()` are intentionally different from those of `BIO_write()`.
Yet as I mentioned, there are minor bugs/inconsistencies with the return values  of `BIO_write_ex()`:

* If an empty string is to be printed, i.e., `dlen == 0`, this results in a (wrong) error being flagged.
* If `b == NULL`, this is also (needlessly) flagged as error, while for `BIO_write()` this was allowed.

These are fixed in this PR by replacing in
```
int BIO_write_ex(BIO *b, const void *data, size_t dlen, size_t *written)
{
     return bio_write_intern(b, data, dlen, written) > 0;
}
```
the `>` by `>=`.

Moreover, this PR allows `written` to be NULL, which is helpful in case the caller is not interested in how many bytes have been written.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [ ] tests are added or updated
_|_I've removed some tests which simulate a write to a directory by using a path ending in '/' as this is not compatible with fopen() on all platforms. On AIX the trailing '/' is removed and the path opened as a file.

- [X] tests are added or updated
_|_Fixes #15552

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_After #15383 was cherry-picked to 1.1.1, no-ec builds have been
failing.  On master, we build EC support into libssl and detect
at runtime whether providers are able to implement the necessary
ECC functionality, so no include guards are present around the
EC point formats entryin the array of extensions.  On 1.1.1,
the support for the TLS extension is gated on OPENSSL_NO_EC,
so the newly added init_ec_point_formats function must be
similarly gated as well.  (The build failure results from the
init function trying to access fields that are not present
in struct_ssl.)

_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->
The EVP-API allows users to provide parts and even change the direction (decryption vs encryption or vice versa) without providing all arguments.  This led to some errors on s390x where, e.g., a late change in the direction caused the cipher to perform the wrong operation.

This is the master branch equivalent of PR #14900.  For more details on why we want this and where the init sequences come from, please see https://github.com/openssl/openssl/pull/14900#issuecomment-824685249.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_When EVP_MD_CTX_new fails call SSLfatal before the goto err.
This resolves a state machine issue on the out of memory condition.

Fixes #15491.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

_|_This fixes a recent regression of no-ec build on the 1.1.1 branch.
_|_When EVP_MD_CTX_new fails call SSLfatal before the goto err.
This resolves a state machine issue on the out of memory condition:
ssl/statem/statem.c:643: OpenSSL internal error: Assertion failed:
(s)->statem.in_init && (s)->statem.state == MSG_FLOW_ERROR

CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

_|_This backports the core of #15499.

Fixup for #12561, which updated and prolonged the validity of the test certificate but turned it into a CA cert,
but defeated the purpose of the test case "accept trusted self-signed EE cert excluding key usage keyCertSign".

- [x] tests are added or updated
_|_Fixup for #12549, which updated and prolonged the validity of the test certificate but turned it into a CA cert,
which defeated the purpose of the test case "accept trusted self-signed EE cert excluding key usage keyCertSign".
See also https://github.com/openssl/openssl/pull/12549#issuecomment-849478561.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_Otherwise, the state machine ends up being in a bad state:
```
SSL routines:write_state_machine:missing fatal:ssl/statem/statem.c:XXX:
```

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Otherwise, the state machine ends up being in a bad state:
```
SSL routines:write_state_machine:missing fatal:ssl/statem/statem.c:850:
```

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The O/S name for AIX was being incorrectly matched to 'AIX'. I checked the actual value returned on an AIX box:

```
bash-4.2$ perl -e "print \"O/S is: $^O\n\""
O/S is: aix
```

This fits with what is listed in the perl docs here:

https://perldoc.perl.org/perlport#PLATFORMS

It seems the O/S name for most platforms is the string returned by 'uname -a' lowercased, with a few exceptions (MSWin, VMS, MacOS).

- [X] tests are added or updated
_|_Trivial stuff.  md-nits should be added to the CI (#15459)
_|_The `ctx->propq` is `strdup`ed, so it must be `free`d too._|_Fixes #15424
_|_The `test_pkcs5_pbe()` function and related static vars are required twice:
once `if !defined OPENSSL_NO_RC4 && !defined OPENSSL_NO_MD5`
and once `if !defined OPENSSL_NO_DES && !defined OPENSSL_NO_SHA1`

Hence there should be `||` between those.
Currently the build fails if the first condition is false, while the second is true, e.g. when only SHA1 is defined.
_|_* BIO `acpt_state():` Allow retrying addresses (e.g., using IPv6 vs. IPv4) on creating accept socket
* `apps/lib/s_socket.c` and `80-test_cmp_http.t:` Make `ACCEPT` port reporting more robust
  which is a fixup of #15281

* ~`80-test_cmp_http.t`: Skip on NonStop `ia64` since not supporting `BIO_set_accept_port(bio, "0")`~
*  `apps/ocsp`: Allow `-port 0`
* `BIO_s_accept.pod:` Add missing documentation for `BIO_{get,set}_accept_ip_family()`
* DOC: Slightly improve the documentation of `BIO_lookup()` and related functions
    
Fixes #15386.

- [x] documentation is added or updated
- [x] tests are added or updated
_|_This makes the logic more intuitive and corrects the interpretation for NonStop.

Fixes ~(at least~ most of ~)~ #15386.

- [x] tests are added or updated
_|_`apps/cms.c`: Correct `-sign` output and `-verify` input with `-binary`.
Also add related warnings on irrelevant use of `-nodetach` and `-content` options.

Fixes #15347.

This PR contains a preliminary commit just to demonstrate effectiveness of the solution on Windows,
with this message:
`TODO REMOVE THIS TMP COMMIT: Add basic test_cms build to the Windows CI workflow`



##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_openssl dgst print the digest in coreutils format.

Fixes #13983

CLA: trivial
<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Move `ossl_sleep()` to where it fits much better: `e_os.h` and use it in apps.

Fixes #15304: 
```
openssl-bin-cmp.obj : error LNK2019: unresolved external symbol sleep referenced in function cmp_main
```_|_This removes spurious error queue entries such as
```
ossl_store_handle_load_result:crypto/store/store_result.c:151:error: unsupported:
asn1_check_tlen:crypto/asn1/tasn_dec.c:1156:error: wrong tag:
asn1_item_embed_d2i:crypto/asn1/tasn_dec.c:322:error: nested asn1 error:Type=EC_PRIVATEKEY
```
when loading private keys via OSSL_STORE: .
The underlying issue was revealed by a recent improvement in #15253.

~On this occasion, also~
* ~Make `OSSL_CRMF_ENCRYPTEDVALUE_get1_encCert()` conservative on the error queue~
* ~`crypto/{http,cmp}`: Remove obsolete comments w.r.t. `ERR_clear_error()`~_|_Fixes #14694

- [x] tests are added or updated
_|_Pull in Todd Short's fix cfd7225fbb from 1.1.1, which moves the disabling
of pic, threads and statics to before they are checked.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->
_|_The providers have to call `up_ref` to keep the `cbio` pointer, just like the internal `bio_prov.c` does.

`OSSL_STORE_attach` passes a `cbio` pointer to the provider and then calls `ossl_core_bio_free(cbio)`. If up_ref is not called, the `cbio` gets freed way too early.
_|_Fixes #11388

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Fixes #14966
_|_This came up while adding more tests to #15053.
Fixes crashes when no input file name is provided (e.g, via the CLI)._|_Fixes #12735 for 1.1.1

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_In hybrid and compressed point encodings, the form octet contains a bit
of information allowing to calculate y from x.  For a point on a binary
curve, this bit is zero if x is zero, otherwise it must match the
rightmost bit of of the field element y / x.  The existing code only
considers the second possibility. It could thus incorrecly fail with a
division by zero error as found by Guido Vranken's cryptofuzz.

This commit adds a few explanatory comments to oct2point. The only
actual code change is in the last hunk which adds a BN_is_zero(x)
check to avoid the division by zero.

##### Checklist
- [x] tests are added or updated
_|_Fixes #15056

The dependency for fipsinstall was being added to the makefile regardless of
it being used.  This means that a subsequent `make test` would fail if the
command line application wasn't present.  Rather than fix the instance in question,
it is better to leave out this part of the makefile if the tests cannot be
run.

- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_* APPS `load_key_certs_crls()`: Correct the `expect` arg calculation for `OSSL_STORE_expect()`
* `OSSL_STORE_expect()`: Improve error handling and documentation
* `BIO_eof()` and `OSSL_STORE_eof()`: Correct doc and use of return value < 0 in `store_lib.c`
* `OSSL_DECODER_from_bio()`: Prevent spurious decoding error at EOF


##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [ ] tests are added or updated
_|_This came up while preparing the HTTP client for an implementation of #14004._|_* ~apps/cmp.c~ APPS: Improve diagnostics for string options and options expecting int >= 0 ~(which could be helpful also for other apps).~
* APPS: Prevent ASAN hickup on idempotent `strncpy()` in `opt_progname()`_|_Fixes #14910
Also slightly improve further error handling of setup_request_ctx().
_|_The s390x cipher implementations must call their init function
even if the key argument is NULL to allow initializing the
cipher operation's context in any order.


Note that the same issue is present on master but im still looking for a way to fix it since the EVP_CIPH_ALWAYS_CALL_INIT flag (and flags in general) are now legacy members of the EVP_CIPHER structure and not checked anymore in the new code paths._|_* `apps/cmp.c`: Fix TLS hostname checking in case `-server` provides URL (i.e, more than just a hostname)
* `OSSL_CMP_CTX_new()`: Fix distinction of out-of-memory and other errors
_|_X509_VERIFY_PARAM_inherit() now copies hostflags independently of hosts.

Previously hostflags were only copied when at least one host was set.
Typically applications don't configure hosts on SSL_CTX. The change
enables applications to configure hostflags on SSL_CTX and have OpenSSL
copy the flags from SSL_CTX to SSL.

Fixes: https://github.com/openssl/openssl/issues/14579
Signed-off-by: Christian Heimes <christian@python.org>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [X] tests are added or updated
_|_When creating a signed S/MIME message using SMIME_write_CMS(), the state machine in the background does not handle error cases completely. This results in a small memory leak in i2d_ASN1_bio_stream / asn_mime.c

In BIO_new_NDEF, ndef_aux is initialized and set to the bio stream via 
`ndef_aux = OPENSSL_zalloc(sizeof(*ndef_aux));`
to bio->ex_arg

This memory is normally freed in asn1_bio_flush_ex (bio_asn1.c, cleanup parameter set to true).

This call is triggered via BIO_flush() which ends up in the asn1_bio_ctrl (bio_asn1.c) in the case the cmd is BIO_CTRL_FLUSH and state is ASN1_STATE_POST_COPY.

The state is also updated in the same function and asn1_bio_write.

In our use case the reading from the bio fails, the state is therefore still ASN1_STATE_START when BIO_flush() is called by i2d_ASN1_bio_stream. This results in calling asn1_bio_flush_ex cleanup but will only reset retry flags as the state is not ASN1_STATE_POST_COPY. Therefore 48 bytes (Linux x86_64) leaked since the ndef_prefix_free / ndef_suffix_free callbacks are not executed and the ndef_aux structure is not freed.

Patch is attached which makes sure the free callbacks are called. Another option would be to improve the state machine but this looks harder to get it right.

CLA: trivial_|_See analysis in https://github.com/openssl/openssl/pull/14589#discussion_r610892756.
This corrects and simplifies use of the `canon_enc` field in X509_NAME_cmp().

Fixes #14813.
_|_The last commit enables ktls on Debian build target which do not begin with linux (like debian-amd64).
The first two commits popped up in the CI due to anonymous unions and a missing fall-through statement._|_While testing some other work I ran across a couple places where we were needlessly out of compliance with RFC 8446.

At the end of https://tools.ietf.org/html/rfc8446#section-4.2.8 : 

>    If using (EC)DHE key establishment, servers offer exactly one
   KeyShareEntry in the ServerHello.  This value MUST be in the same
   group as the KeyShareEntry value offered by the client that the
   server has selected for the negotiated key exchange.  Servers
   MUST NOT send a KeyShareEntry for any group not indicated in the
   client's "supported_groups" extension and MUST NOT send a
   KeyShareEntry when using the "psk_ke" PskKeyExchangeMode.  [...]

Prior to these changes, the server would send a KeyShareEntry when the
"psk_ke" mode was used, if the client had actually sent an "key_share".
OpenSSL speaking to OpenSSL will never negotiate the "psk_ke" mode,
since we prefer to have the ephemeral key exchange.

In https://tools.ietf.org/html/rfc8446#section-4.2.9 :

>    A client MUST provide a "psk_key_exchange_modes" extension if it
   offers a "pre_shared_key" extension.  If clients offer
   "pre_shared_key" without a "psk_key_exchange_modes" extension,
   servers MUST abort the handshake.  [...]

We were not detecting this condition.  In practice it seems that the server
would proceed without sending a key share; an openssl client would typically
fail at this point, though any client sending such a malformed ClientHello
might well behave unexpectedly in other ways._|_Use unsigned character type so that non‐ASCII bytes are escaped to `\XX` (as in `do_esc_char`) instead of `\0xFFFFFFXX`.

In addition, value of the `DEL` character is corrected from `0xf7` to `0x7f`.

CLA: trivial_|_This PR is a further spin-off of #14630 for simpler reviewing.
It fixes the `method_POST` param by moving it to `OSSL_HTTP_REQ_CTX_set_request_line()`, 
which is required for backward compatibility with the OCSP HTTP API 
and is also better from a conceptual view.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated

_|_Also rename the function to `ossl_http_req_ctx_transfer()` since it is an internal function.

This PR has been carved out from #14630 for alleviating reviews,
making this PR pretty simple._|_Adds a new lock to read default_path and uses a strdup() on default_path before using it

Fixes #14483
Signed-off-by: Sahana Prasad <sahana@redhat.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_When using credential test data in a PEM input file that was meant to contain a chain of certs, with the current master I got a strange memory leak on a private key. It took me a while to find out that a colleague had included by mistake a private key in that PEM file and this private key was loaded but then immediately discarded by `d2i_PrivateKey()` due to a subtle bug handling its `EVP_PKEY **a` parameter introduced in commit 576892d78f80cf9a. 
I provide fix for this here, along with tests in order to avoid such regression in the future.

Doing this, I found that the doc of `PEM_X509_INFO_read_bio_ex()` etc. was still pretty poor and that the implementation was not able to parse the "{ENCRYPTED ,}PRIVATE KEY" formats but just the specific "{RSA,DSA,EC} PRIVATE KEY" formats.
So I fixed these issues as well.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_Fixes #14622
_|_* ~HTTP: Fix mem leak of `OSSL_HTTP_REQ_CTX_transfer()`, 
rename it to `ossl_http_req_ctx_transfer()` since it is internal~

* ~HTTP: Rename `OSSL_HTTP_REQ_CTX_i2d()` to `OSSL_HTTP_REQ_CTX_set1_req()`~ 

* ~HTTP: Fix `method_POST` param by moving it to `OSSL_HTTP_REQ_CTX_set_request_line()`, 
which is required for backward compat with the OCSP HTTP API 
and is also better from a conceptual view~

* ~BIO: make sure `BIO_should_*()` return `1` as documented if condition is met~

* `OSSL_HTTP_REQ_CTX_transfer()`: improve distinction of send error vs. receive error

* `OSSL_parse_url()`: Improve handling of IPv6 addresses

* `80-test_cmp_http.t`: Add diagnostic info on starting/stopping mock server

* `http_client.c`: Prevent spurious error queue entry on `NULL` mem argument

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_Avoid dividing by zero_|_
Avoid calling memcpy if the pointers are identical.
_|_`size_t` was used to determine the size of the `cmp` buffer instead of `time_t`. Under some architectures with MSVC, this caused the array to be too small to accommodate the `time_t` objects that are copied into `cmp` further down in the test. This bug was caught by enabling AddressSanitizer with MSVC.

CLA: trivial

##### Checklist
- [x] tests are added or updated
_|_Without this, it is necessary to query an algorithm before setting the default property query.  With this, the value will be created and the default will work.

Fixes #14516

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_This fixes #14190 in a way that ~I believe~ is better than the proposal in #14214,
partly based on contributions by @zhanzhenzhen and @midnight-wonderer.
I did this implementation originally as a PoC to convince myself that my proposal makes sense.

The correct/intended interpretation of RFC 2634 section 5.4 and [its update in RFC 5035](https://tools.ietf.org/html/rfc5035#section-5.4.1)
has meanwhile been [discussed on the LAMPS mailing list](https://mailarchive.ietf.org/arch/msg/spasm/JOHi3aOBMNTYgZkCITsUcoM-JVQ/). My interpretation [has been confirmed by Russ Housley](https://mailarchive.ietf.org/arch/browse/spasm/?gbt=1&index=JOHi3aOBMNTYgZkCITsUcoM-JVQ). It turns out also be the one taken in section 3.6 (A3.6-3) of the [BSI TR-03125 annex TR-ESOR-ERS](https://www.bsi.bund.de/SharedDocs/Downloads/DE/BSI/Publikationen/TechnischeRichtlinien/TR03125/BSI_TR_03125_Anlage_ERS_V1_2_1.html).

This PR ~includes all the points~ contains the main point I made in the discussion of #14214:
Invert the search logic of `ts_check_signing_certs()` to correctly cover cert ID list.
(I moved some related cleanup of the test script `80-test_tsa.t` and improvements of `TS_RESP_verify_signature()` and the `ts` app w.r.t untrusted certs to #14504.)

This PR also includes a further related correction:
RFC 5035 requires evaluating _both_ ESSCertID and ESSCertIDv2 if both are present.

Moreover, I found that `ossl_ess_check_signing_certs()` in `cms_ess.c` had taken over the code in question from `ts_check_signing_certs()` in `crypto/ts/ts_rsp_verify.c`.
So corrected this as well, moving the common code to a new function  `ossl_ess_check_signing_certs()` in `ess_lib.c`, and cleaned up the code.
Also constified related CMS/PKCS7 functions
and improved error codes thrown as well as the documentation.

- [x] documentation is added or updated
- [x] tests are added or updated
_|_Since I am getting errors of sanitizers / non-caching CI I think my changes are not related to, I looked at the failing test. 
I think this might me a negation error. It seems as currently `fake_rand_finish` is only called when SM2 is disabled and I think it should be called when it is enabled._|_This is a fixup for the original commit 5b5e2985f355c8e99c196d9ce5d02c15bebadfbc
"Add support for io_pgetevents_time64 syscall" that didn't correctly
work for 32-bit architecutres with a 64-bit time_t that aren't RISC-V.

For a full discussion of the issue see https://github.com/openssl/openssl/commit/5b5e2985f355c8e99c196d9ce5d02c15bebadfbc

Signed-off-by: Alistair Francis <alistair.francis@wdc.com>

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [X] documentation is added or updated
- [X] tests are added or updated
_|_Refer to #14418 for a description of the problem being solved. 

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_**Note: this PR is ready for review**

This was originally a PR to just trigger the issue described in #11940 , but I have reworked it to include the fix authored by @levitte and to keep the extra CI job (as it does not take too much time and this is not the first time we accidentally break out-of-tree builds).

## Checklist

- [x] Fixes #11940
- [x] Add CI job for #11940

<details>
<summary>Original description</summary>

# THIS PR SHOULD NOT BE MERGED

This PR is just meant to exercise the issue reported in #11940 using the new CI infrastructure, so that all it takes to verify if it is solved is to rebase this branch.

Note that one of the commits is dropping some jobs as they take longer and are not relevant for this issue.
</details>_|_This has been motivated by a crash on error reported in #14322.
_|_This fixes `BIO_mem_d2i()` on NULL `mem` BIO input and 
related failure behavior of `OSSL_HTTP_REQ_CTX_sendreq_d2i()`, `OCSP_sendreq_nbio()`, etc.

Also removes the unused declaration of `HTTP_sendreq_bio()` from `http_local.h`
and simplifies `OCSP_sendreq_bio()`.

Fixes #14322
_|_This fixes a small bug reported at https://github.com/openssl/openssl/pull/13711#issuecomment-786263077: 
a too eager call to `X509_set_issuer_name()` introduced recently.
On this occasion also 
* improve indentation of the large print loop in `x509_main()`in apps/x509.c`,
* fix minor memory leaks on malloc failure processing `-next_serial` in the print loop, and
* improve `print_name()` and coding style of the print loop in `x509_main()`.
_|_Return an error instead of trying to malloc a negative number.
The other usage in this file already had a similar check, and the caller
should have put an entry on the error stack already.

Note that we only check the initial calls to obtain the encoded length,
and assume that the follow-up call to actually encode to the allocated
storage will succeed if the first one did.

Fixes: #14177

_|_Hello,
I found that OpenSSL does not verify the timestamp response properly in a specific case.
Specifically in cases when the timestamp authority response with more than one certificate ids in the signing certificate section.

Coincidentally, @zhanzhenzhen found the same bug at almost the same time as me.
Most of the debugging work was done by him.

Basically, when the response provides one signing certificate, OpenSSL verifies one certificate fingerprint, but when facing multiple signing certificates, OpenSSL attempts to verify the chain beyond what is specified by the response.

For instance, when two certificate fingerprints are specified in the response but the chain length is three, OpenSSL tries to match all three of the certificates with the set of two certificate fingerprints, which isn't quite working.
The actual request and response found in the wild can be found at #14190._|_Fixes the two reported instances
```
    CID 1473068:    (RESOURCE_LEAK)
    Variable "sk_untrusted" going out of scope leaks the storage it points to.
```_|_This fixes #14175 regarding a crash of the `ca` app when the `ext_ctx` structure is not initialized
and a more subtle initialization bug for the `ext_ctx` structure w.r.t. any CSR given with the `-csr` option.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated

_|_A number of bugs in the fetch/caching mechanism have been discovered when turning caching off.  This PR will address those that are bug and that could be discovered in a normal build.

Additionally, an address sanitiser build is added that disables fetch caching for all providers.

- [ ] documentation is added or updated
- [x] tests are added or updated

Further fixes for #14126
_|_Fixes #13944
   + changed ASN1_UTCTIME to ASN1_TIME
   + removed all Y2K code from do_updatedb
   + changed compare to ASN1_TIME_compare_|_Also fix up CSR test cases for `81-test_cmp_cli.t`

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_Extend `OSSL_HTTP_parse_url()` to handle `[http[s]://][userinfo@]host[:port][/path[?query]][#frag]`
~by silently ignoring~ to optionally provide any `userinfo`, `query`, and `frag` components of its input.
All current usages of this function, which are client-only, silently ignore userinfo and frag components,
while the query component is taken as part of the path.

This came up in https://github.com/openssl/openssl/issues/14001#issuecomment-769163033.

Also introduce a generalization `OSSL_parse_url()`, which handles any scheme (not only `http[s]`).

On this occasion document and deprecate `OCSP_parse_url()`.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_Fixes #13931

- [x] tests are added or updated
_|_This is an upstream fix for #13931.

It also generalizes the `genca` function of `mkcert.sh`.

- [x] tests are added or updated
_|_*  `OSSL_HTTP_REQ_CTX_nbio()`: Revert to having state var that keeps req len still to send.
    Otherwise, sending goes wrong in case `BIO_write(rctx->wbio, ...)` is incomplete at first.
    Fixes #13938.

* Fix not backwards-compatible `X509_http_nbio()` and `X509_CRL_http_nbio()`.
  Provides partial fix of #13127.

* HTTP: add more error detection to low-level API
  which includes allocationg `rctx->mem` only when needed
  
* `OSSL_HTTP_REQ_CTX.pod` and `OSSL_HTTP_transfer.pod`: various improvements

* HTTP: Fix mistakes and unclarities on `maxline` and `max_resp_len` params.
  Also rename internal structure fields `iobuf` to `readbuf`, `iobuflen` to `readbuflen` for clarity
  
* Constify `OSSL_HTTP_REQ_CTX_get0_mem_bio()`

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated

_|_CLA: trivial

mac_dupctx should make a copy of the propq field.  Currently it does a shallow copy which can result in a double free and causing a crash.  The double free occurs when using a provider property string.  For example, passing in "fips=no" to SSL_CTX_new_ex() causes the propq field to get set to that value.  When mac_dupctx and mac_freectx is called (ie: in SSL_write) it ends up freeing the reference of the original object instead of a copy._|_The app-internal `prog` variable has been used in an inconsistent way when printing help or error output
due to some confusion of the program name (usually `openssl`) and the app/cmd/alg name (such as `x509` or `des`).

This PR aims at cleaning this up by making sure that 
after `prog` initially holds the bare program name,
a space char and the app/cmd/alg name is appended when available.

This way for instance `openssl x509 --help` does not anymore print
```
Usage: x509 [options]
```
but
```
Usage: openssl x509 [options]
```

On this occasion I made sure that `openssl --help` and `openssl -help` do not complain
```
Invalid command '--help'; type "help" for a list.
```
but immediately prints the high-level help
and that this starts by echoing the program name:
```
openssl help:

Standard commands
[...]
```

- [x] tests are added or updated_|_This fixes a regression reported for v1.1.1 in #13739 for the case that the candidate issuer cert is identical to the target cert.

Further related commits do the following:
* Add checks in case `X509_NAME_hash()` fails due to unsupported SHA1.
* Make `PEM_X509_INFO_read_bio_ex()` conservative on the error queue
* TEST: move cert, key, and CSR loading aux functions to new `testutil/load.c`

- [x] documentation is added or updated
- [x] tests are added or updated
_|_This backports the main part of #13755, namely the fix for #13698 as discussed there,
by checking more specifically if the hash value computation succeeded.
This required improving the error reporting of `x509v3_cache_extensions()`.

Adds a test using the example cert given there, which has invalid SKID and AKID encodings.

- [x] tests are added or updated
_|_This is the upstream fix for #13698 reported for v1.1.1 as discussed there,
by checking more specifically if the hash value computation succeeded.
This required improving the error reporting of `x509v3_cache_extensions()`

Adds a test using the example cert given there, which has invalid SKID and AKID encodings.

Also makes the `d2i_X509()` deallocation behavior consistent with `d2i_X509_AUX()`,
which is needed for the new test and partly fixes #13754.

- [x] tests are added or updated
_|_This fix is for the case that the candidate issuer cert is identical to the target cert.
 
This is a backport of part of #13748.

Fixes #13739.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] tests are added or updated
_|_A recent merge broken the build.
This fixes it.
_|_Currently, the devcrypto engine does not work on FreeBSD.  This is because current versions of FreeBSD require the use of the CRIOGET ioctl to obtain a cloned file descriptor that is then used to create sessions.  Although I currently have a patch in review to remove this requirement from FreeBSD 13, the requirement will remain for older versions of FreeBSD.  The first patch in this series fixes that (and is possibly a 1.1.1 back port candidate though it would need to be reworked as e_devcrypto.c has moved in the tree in master vs 1.1.1).

The second patch is not required for basic engine functionality, but does bring the support on FreeBSD more on par with Linux in terms of respecting the flags to request only software or hardware drivers.  This works differently than on Linux as FreeBSD is able to request a class of drivers up front when creating a session.  However, it should provide equivalent functionality.  The 'dump_info' command also works correctly in that it properly determines when a cipher's session is accelerated or not (in this case ccr0 is a co-processor driver whereas cryptosoft0 is a software driver):

```
# openssl engine -pre DUMP_INFO devcrypto
(devcrypto) /dev/crypto engine
Information about ciphers supported by the /dev/crypto engine:
CIOCGSESSINFO (session info call) unavailable
Cipher DES-CBC, NID=31, /dev/crypto info: id=1, CIOCGSESSION (session open call) failed
Cipher DES-EDE3-CBC, NID=44, /dev/crypto info: id=2, CIOCGSESSION (session open call) failed
Cipher BF-CBC, NID=91, /dev/crypto info: id=3, CIOCGSESSION (session open call) failed
Cipher CAST5-CBC, NID=108, /dev/crypto info: id=4, CIOCGSESSION (session open call) failed
Cipher AES-128-CBC, NID=419, /dev/crypto info: id=11, driver=ccr0 (hw accelerated)
Cipher AES-192-CBC, NID=423, /dev/crypto info: id=11, driver=ccr0 (hw accelerated)
Cipher AES-256-CBC, NID=427, /dev/crypto info: id=11, driver=ccr0 (hw accelerated)
Cipher RC4, NID=5, /dev/crypto info: id=12, CIOCGSESSION (session open call) failed
Cipher CAMELLIA-128-CBC, NID=751, /dev/crypto info: id=21, driver=cryptosoft0 (software)
Cipher CAMELLIA-192-CBC, NID=752, /dev/crypto info: id=21, driver=cryptosoft0 (software)
Cipher CAMELLIA-256-CBC, NID=753, /dev/crypto info: id=21, driver=cryptosoft0 (software)
```

(The session open call failures are due to the fact that I've removed support for many older algorithms from /dev/crypto in FreeBSD 13.)

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
_|_It does not do it in legacy path and 1.1.1 so that must not change.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_This PR adds a new series of tests to test `EVP_PKEY` objects validation thorugh the `openssl pkey -check` CLI.

- test corner cases for P-256 private keys as an example for EC keys
- `openssl pkey -check` did not return failure if the check fails: instead of parsing the output we fix `pkey` to return an error in this case
- add test for a corner case for SM2 private keys from #8435 
- create dedicated validate function for SM2 keys to check their validity to partially fix one of the issues highlighted in #8435

Partially fixes #8435

##### Checklist
- [x] tests are added or updated
_|_OPENSSL_init_crypto() passes its `settings` argument to
`ossl_init_config()` through a static variable called
`conf_settings`, because ossl_init_config() is a
run-once function which can't take any parameters.

This workaround is thread-safe, because passing a non-null
`settings` argument is well defined and allowed only during
early initialization in single-threaded mode.

Nevertheless, the 'init_lock' was added in commit bf24111bb2
(Avoid a race condition in loading config settings, 2016-02-09)
to protect this workaround. This probably happened to fix a
thread sanitizer warning. I believe it was a ~~false~~ false
positive caused by unnecessary writes of null values to the
`conf_settings` variable.

Since commit e6c54619d1 (Load the default config file before
working with default properties, 2020-07-31) the unnecessary
lock is causing a lock-order-inversion, so it needs to be
removed. Instead, we prevent concurrency warnings by avoiding
to update `conf_settings` unnecessarily.

Fixes #12869

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_As part of ongoing OTC discussions, one item that nobody ever opposed is that builds shouldn't be failing for some period of time before the release.

This PR is to track the state of our builds in combination with the `[extended tests]` tag.

Any Committer should feel free to rebase this PR on latest `master` and push to my branch to update this PR.

This PR is tracking the **issues** not the solutions: feel free to spawn separate PRs to address the issues detected by the CI in the builds of this PR, and link to them in a comment: it would be nice if after a PR fixing one of the problems is merged to `master` you could also rebase this PR and force-push, so we can keep track of other potentially undetected issues unlocked by the fix.

Ideally this PR will be closed the day `beta1` is released after ensuring everything passes, it is not meant to be merged._|_RFC2315 states that the list of certificates in PKCS7 signed data objects is an implicit SET OF not SEQUENCE OF as is currently in the codebase. Because of this signatures generated by openssl fail to validate on Microsoft's new stricter DER parser in wintrust.dll._|_
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_A provider without `provider_query_operation()` is admittedly quite useless, yet technically the base provider functions are not mandatory according to our documentation.

Adding a test for this would require to instantiate a dummy provider, ideally one for each of the `provider-base(7)` _Provider functions_: it's not impossible, but I am not sure it is worth putting the effort.

I'll let the reviewer decide if I should add such a test case.

##### Checklist

- [ ] tests are added or updated
_|_This fixes (among others) the following error with gcc9:

.../crypto/bio/b_addr.c:198:19: error: ‘NI_MAXHOST’ undeclared

Since glibc 2.8, these defines like `NI_MAXHOST` are exposed only
if suitable feature test macros are defined, namely: _GNU_SOURCE,
_DEFAULT_SOURCE (since glibc 2.19), or _BSD_SOURCE or _SVID_SOURCE
(before glibc 2.19)

CLA: trivial
Fixes #13049
_|_So far signing and verifying S/MIME binary input did not work properly.
* `openssl cms -sign` tended to corrupt/truncate non-detached binary data without warning
* `openssl cms -verify -binary` tended to give unsuccessful verification result or fail with
```
Error reading S/MIME message
139893396579456:error:0D0D40D2:asn1 encoding routines:SMIME_read_ASN1:no multipart body failure:../crypto/asn1/asn_mime.c:408:
```
This PR fixes that.
* Warn when the `-in` or `-content` argument files contains NUL or 8-bit chars without the `-binary` option being used.
* Correct parsing of non-detached binary S/MIME data such that parse failures and verification false negatives are avoided.

This fixes #8940.

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [x] documentation is added or updated
- [x] tests are added or updated
_|_This pull request continues work started on the 1.1.1 stable branch in #12759. For a more detailed explanation, see that pr.

Still work in progress, tests are failing.

The first two commits are from #12866, on which this pull request is currently based. They will disappear as soon as #12866 is merged.

_|_The dgst app was using an undocumented behaviour in the
EVP_PKEY_new_raw_private_key() function when setting a key length for
a MAC. The old EVP_PKEY to MAC bridge, probably by accident, converts a
-1 length to a strlen() call, by virtue of the fact that it eventually
calls ASN1_STRING_set() which has this feature.

As noted above this is undocumented, and unexpected since the len
parameter to EVP_PKEY_new_raw_private_key() is an unsigned value (size_t).
In the old bridge it was later (silently) cast to an int, and therefore
the original -1 value was restored. This only works because sizeof(int) <=
sizeof(size_t). If we ever run on a platform where sizeof(int) >
sizeof(size_t) then it would have failed. The behaviour also doesn't hold
for EVP_PKEY_new_raw_private_key() in general - only when the old MAC
bridge was in use.

Rather than restore the original behaviour I think it is best to simply
fix the dgst app to not assume it exists. We should not bake in this
backwards and inconsistent behaviour.

Fixes #12837
_|_Fix VS2019 compile error C4703: potentially uninitialized local pointer variable used.

encode_key2text.c(689): error C4703: potentially uninitialized local pointer variable 'modulus_label' used
encode_key2text.c(691): error C4703: potentially uninitialized local pointer variable 'exponent_label' used

CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a GitHub issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The behaviour of EVP_KDF_CTX_set_params changed between alpha4 and current, so that one of our tests started to fail. The test results in this API call:

    params[0] = OSSL_PARAM_construct_utf8_string(OSSL_KDF_PARAM_DIGEST, (char *) mdname, 0);
    params[1] = OSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_SECRET, secret, secretlen);
    params[2] = OSSL_PARAM_construct_octet_string(OSSL_KDF_PARAM_SEED, seed, seedlen);
    params[3] = OSSL_PARAM_construct_end();

    ret = EVP_KDF_CTX_set_params(ctx, params);

Where:
  secret = pointer to blank buffer
  secretlen = 0

The KDF is OSSL_KDF_NAME_TLS1_PRF.

This started to fail recently with a change to the HMAC code (which is used internally in the KDF):

https://github.com/openssl/openssl/commit/3fddbb264e87a8cef2903cbd7b02b8e1a39a2a99

The code added to allocate a copy of the HMAC key is not zero-length aware so the OPENSSL_secure_malloc fails. The KDF code to store the secret is already zero-length aware.

This PR also goes some way to fixing #8531 although the secret buffer is still checked for NULL so the user would have to provide a non-null buffer even with a length of zero.
_|_The 'MinProtocol' and 'MaxProtocol' configuration commands now silently
ignore TLS protocol version bounds when configurign DTLS-based contexts,
and conversely, silently ignore DTLS protocol version bounds when
configuring TLS-based contexts.  The commands can be repeated to set
bounds of both types.  The same applies with the corresponding
"min_protocol" and "max_protocol" command-line switches, in case some
application uses both TLS and DTLS.

SSL_CTX instances that are created for a fixed protocol version (e.g.
TLSv1_server_method()) also silently ignore version bounds.  Previously
attempts to apply bounds to these protocol versions would result in an
error.  Now only the "version-flexible" SSL_CTX instances are subject to
limits in configuration files in command-line options.

Backport of #12472
Expected to resolve #12394

##### Checklist
- [ x] documentation is added or updated
_|_These functions are part of the public API but we don't have tests covering their usage.
They are actually implemented as macroes and the absence of tests has caused them to fall out-of-sync with the latest changes to ASN1 related functions and cause compilation warnings.

This PR fixes the public headers to reflect these changes.

Fixes #12443

### `1.1.1` first

Unusually I am proposing to fix first this issue as a `1.1.1` issue, and then forward-port the changes to `master` (see #16355). The reason is that master has inherited this bug from `1.1.1` and has compounded it with the current inability of handling serialization with the `OPENSSL_EC_EXPLICIT_CURVE` ASN1 flag.

This means that anyway we would have to review the changes separately as the cherry-picks are not trivial, and it makes sense to address this issue in `1.1.1` first and then apply incremental changes to adapt to the new architecture in `master`.

### Additional related commits included in this PR

- `Add tests for i2d_TYPE_fp and d2i_TYPE_fp`

  This commit add tesst to trigger the issue and make sure these macroes have at least a caller in our test suite to avoid this to happen again in the future.
  
  At the moment the test only covers ECPKParameters as a type, but this should probably be extended similarly to DH, DSA and (maybe) RSA equivalents.

- `[ec] Do not default to OPENSSL_EC_NAMED_CURVE for curves without OID`

  Some curves don't have an associated OID: for those we should not default to `OPENSSL_EC_NAMED_CURVE` encoding of parameters and instead set the ASN1 flag to `OPENSSL_EC_EXPLICIT_CURVE`.
  
  This is a follow-up to https://github.com/openssl/openssl/pull/12312


### Checklist

- [x] tests are added or updated
_|_Usually it will be freed in tls_early_post_process_client_hello().
However if a ClientHello callback will be used and will return
SSL_CLIENT_HELLO_RETRY then tls_early_post_process_client_hello()
may never come to the point where pre_proc_exts is freed.

Fixes #12194

CLA: trivial

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a github issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_The calls to query the DRBG strength, state and maximum output size all used nested locks.  This removes the nesting.

Fixes #12290


_|_
> The following built-in curves do not have an assigned OID:
>
> - Oakley-EC2N-3
> - Oakley-EC2N-4
>
> In general we shouldn't assume that an OID is always available.
>
> This commit detects such cases, raises an error and returns appropriate
> return values so that the condition can be detected and correctly
> handled by the callers, when serializing EC parameters or EC keys with
> the default `ec_param_enc:named_curve`.
>
> Fixes #12306
>

This is the analogous of #12312 for `master`: they differ for the `make update` commit._|_This PR is for `1.1.1`: it is identical to #12313 but for the commit with the `make update` results.

> The following built-in curves do not have an assigned OID:
> 
> - Oakley-EC2N-3
> - Oakley-EC2N-4
> 
> In general we shouldn't assume that an OID is always available.
> 
> This commit detects such cases, raises an error and returns appropriate
> return values so that the condition can be detected and correctly
> handled by the callers, when serializing EC parameters or EC keys with
> the default `ec_param_enc:named_curve`.
> 
> Fixes #12306

## TODO

- [ ] approval for #12313 (`master` counterpart of this PR)_|_## TL;DR

If the key is to be serialized or printed as text and the framework returns an error, the app should signal the failure to the user using a non-zero exit status.

## History

From `1.1.1-stable` (this snippet did not change in `master`, only shifted by a few lines):
https://github.com/openssl/openssl/blob/7bdf1ee8ccb69a743e29e3d1a72194c30e8583ae/apps/genpkey.c#L180-L199

The code above has been unchanged (apart from formatting) for the last 14 years.

In case of an error writing the key to a file or in textual form to the terminal, the exit status of the command is still reset to 0.

## Branches

This should be fixed both in `master` and in `1.1.1`_|_Prior to this patch doing something like `openssl s_client -dtls1 -tls1 ...` could cause s_client to speak TLS on a UDP socket which does not normally make much sense.

NB: Bug exists since at least OpenSSL 1.0.1c (originally found there).
<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a github issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->
_|_The assembly code is not PIC, so we should only try to build it
when the configuration has disabled PIC, not the other way around.

Noted by @kroeckx at https://github.com/openssl/openssl/issues/12050#issuecomment-640253738_|_BSD-generic32 already uses this for building shared libraries on other
32-bit BSD platforms.  Commit b7efa56 collapsed various *BSD targets
down to the BSD-generic ones and BSD-x86.  At the time only
OpenBSD/i386 used `bsd-shared` while both FreeBSD and NetBSD used
`bsd-gcc-shared`.  In practice, all of the BSDs are using either a
GCC/ld.bfd toolchain or a clang/lld toolchain both of which are
compatible with 'bsd-gcc-shared'.

Retire 'bsd-shared' since this removes the last user.

Fixes #12050.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a github issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
_|_The ticket callback is deprecated in 3.0 and can't be used in a no-deprecated build.

Fixes #11942

- [ ] documentation is added or updated
- [x] tests are added or updated
_|_Address 42 of the 45 coverity issues.  The remaining three are:
- 1462557
- 1462559
- 1462568
_|_The back port of the timing information leak fix uses `u32` which is defined in `crypto/modes/modes_local.h` in 1.1.1 and `include/crypto/modes.h` for 3.0.


- [ ] documentation is added or updated
- [ ] tests are added or updated

Fixes #11487

Bug introduced in cherry picking of #11147
_|_Addressing a potential integer overflow condition.

Alternative implementation for #6279.


_|_<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING.md

Other than that, provide a description above this comment if there isn't one already

If this fixes a github issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

This PR fixes the first half of https://github.com/openssl/openssl/issues/10842. The second half (relocations in poly1305-armv8) was apparently already fixed in an almost identical manner to my proposed patch in https://github.com/openssl/openssl/commit/db42bb440e76399b89fc8ae04644441a2a5f6821.
_|_One of the android applications we work on received analytics that devices of the device family Oppo A37x were crashing with SIGILL when trying to load a bundled libcrypto.so built from OpenSSL_1_1_1c.

This device family has a SnapDragon 410 processor: https://www.qualcomm.com/products/snapdragon-processors-410, which is based upon an ARM Cortex A53

These crashes were fixed by using the system-supplied getauxval function.
_|_The parameter got "const" in 9fdcc21fdc9 but that was not added
to cast. So this throws a -Wcast-qual in user code.

error: cast from 'const DUMMY *' to 'ASN1_VALUE_st *' drops const qualifier [-Werror,-Wcast-qual]

CLA: trivial
_|_    Having structures in the FIPS and the default provider with the
    same name but different memory layouts is possible in theory,
    since the objects are not shared between those two providers.

    However, it can have very confusing side effects in the debugger,
    because the members can slip out of place and the debugger will
    show misleading information.

    For that reason, it is better to keep the EX_DATA field even though
    it is not used in the FIPS provider.


## Background

This almost drove me crazy when debugging the FIPS DRBG self tests #11010. The debugger's output of the RAND_DRBG_METHOD is very confusing, for example it shows that RAND_DRBG_METHOD pointer points to the cleanup entropy callback:

```
(gdb) frame
+frame
#0  self_test_drbg (t=0x7ffff78c7540 <st_kat_drbg_tests>, ... ) at providers/fips/self_test_kats.c:247
247	    if (drbg == NULL)

(gdb) p drbg->meth
+p drbg->meth
$33 = (RAND_DRBG_METHOD *) 0x7ffff78354bd <rand_crngt_cleanup_entropy>    <<<=== ?!?!?
```

This confusion is caused by the fact that the RAND_DRBG_METHOD structure has different sizes in the FIPS provider and elsewhere since commit a3327784d95.

https://github.com/openssl/openssl/blob/0618b62ca2a9c5fb7bf8421deabaee240c709040/crypto/rand/rand_local.h#L311-L314

As you can see below, the debugger correctly reports `sizeof(RAND_DRBG) == 576` in frames 1 and 2, and `sizeof(RAND_DRBG) == 592` in the other frames. The problem could be partially fixed by defining FIPS_MODE in the self tests, `providers/fips/self_test_kats.c`. But OTOH, using structures with the same name but different layouts means looking for trouble.




### Callstack

```
+bt
#0  rand_drbg_new (ctx=0x55555569e390, secure=0, type=672, flags=0, parent=0x0) at crypto/rand/drbg_lib.c:436
#1  0x00007ffff7833453 in RAND_DRBG_new_ex (ctx=0x55555569e390, type=672, flags=0, parent=0x0) at crypto/rand/drbg_lib.c:504
#2  0x00007ffff77b6d7f in self_test_drbg (t=0x7ffff78c7540 <st_kat_drbg_tests>, event=0x7fffffffcae0, libctx=0x55555569e390) at providers/fips/self_test_kats.c:246
#3  0x00007ffff77b72d5 in self_test_drbgs (event=0x7fffffffcae0, libctx=0x55555569e390) at providers/fips/self_test_kats.c:357
#4  0x00007ffff77b7373 in SELF_TEST_kats (event=0x7fffffffcae0, libctx=0x55555569e390) at providers/fips/self_test_kats.c:380
#5  0x00007ffff77b5890 in SELF_TEST_post (st=0x7ffff78cf7a0 <selftest_params>, on_demand_test=0) at providers/fips/self_test.c:269
#6  0x00007ffff77b4be1 in OSSL_provider_init (provider=0x5555556b10f0, in=0x7ffff7efd960 <core_dispatch_+448>, out=0x7fffffffcc30, provctx=0x5555556b1168) at providers/fips/fipsprov.c:984
#7  0x00007ffff7cfbee5 in provider_activate (prov=0x5555556b10f0) at crypto/provider_core.c:454
#8  0x00007ffff7cfc1bc in ossl_provider_activate (prov=0x5555556b10f0) at crypto/provider_core.c:547
#9  0x00007ffff7cfadfd in provider_conf_load (libctx=0x0, name=0x55555569f050 "fips", value=0x55555569f070 "fips_install", cnf=0x55555569bf70) at crypto/provider_conf.c:131
#10 0x00007ffff7cfaf1a in provider_conf_init (md=0x555555671230, cnf=0x55555569bf70) at crypto/provider_conf.c:167
#11 0x00007ffff7c1f6f6 in module_init (pmod=0x5555556425f0, name=0x55555569d610 "providers", value=0x55555569de90 "provider_section", cnf=0x55555569bf70) at crypto/conf/conf_mod.c:317
#12 0x00007ffff7c1f1ac in module_run (cnf=0x55555569bf70, name=0x55555569d610 "providers", value=0x55555569de90 "provider_section", flags=0) at crypto/conf/conf_mod.c:175
#13 0x00007ffff7c1ef74 in CONF_modules_load (cnf=0x55555569bf70, appname=0x0, flags=0) at crypto/conf/conf_mod.c:104
#14 0x00005555555a20a8 in generate_config_and_load (prov_name=0x7fffffffda93 "fips", section=0x7fffffffdadd "fips_install", module_mac=0x7fffffffcf70 "\031\216\"\337\062綌", module_mac_len=32) at apps/fipsinstall.c:184
#15 0x00005555555a2a58 in fipsinstall_main (argc=0, argv=0x7fffffffd600) at apps/fipsinstall.c:411
#16 0x00005555555abb2e in do_cmd (prog=0x55555564fba0, argc=15, argv=0x7fffffffd600) at apps/openssl.c:473
#17 0x00005555555ab4c5 in main (argc=15, argv=0x7fffffffd600) at apps/openssl.c:288
```

### Frame 0

```
+p sizeof(RAND_DRBG)
$12 = 576
+fin
Run till exit from #0  rand_drbg_new (ctx=0x55555569e390, secure=0, type=672, flags=0, parent=0x0) at crypto/rand/drbg_lib.c:436
```

### Frame 1

```
RAND_DRBG_new_ex (ctx=0x55555569e390, type=672, flags=0, parent=0x0) at crypto/rand/drbg_lib.c:505
505	}
Value returned is $13 = (RAND_DRBG *) 0x5555556d1fe0
+p sizeof(*$13)
$15 = 576
+p sizeof(RAND_DRBG)
$16 = 576
+fin
Run till exit from #0  RAND_DRBG_new_ex (ctx=0x55555569e390, type=672, flags=0, parent=0x0) at crypto/rand/drbg_lib.c:505
```

### Frame 2

The return value of Frame 1, which is still displayed correctly by the gdb...

```
0x00007ffff77b6d7f in self_test_drbg (t=0x7ffff78c7540 <st_kat_drbg_tests>, event=0x7fffffffcae0, libctx=0x55555569e390) at providers/fips/self_test_kats.c:246
246	    drbg = RAND_DRBG_new_ex(libctx, t->nid, flags, NULL);
Value returned is $17 = (RAND_DRBG *) 0x5555556d1fe0
+p sizeof(*$17)
$18 = 576
+p sizeof(RAND_DRBG)
$19 = 592
+print(*$17)
$20 = {
  lock = 0x0, 
  libctx = 0x55555569e390, 
  parent = 0x0, 
  secure = 0, 
  type = 672, 
  fork_id = 6960, 
  flags = 0, 
  seed_pool = 0x0, 
  adin_pool = 0x0, 
  strength = 256, 
  max_request = 65536, 
  min_entropylen = 32, 
  max_entropylen = 2147483647, 
  min_noncelen = 16, 
  max_noncelen = 2147483647, 
  max_perslen = 2147483647, 
  max_adinlen = 2147483647, 
  reseed_gen_counter = 0, 
  reseed_interval = 256, 
  reseed_time = 0, 
  reseed_time_interval = 3600, 
  reseed_prop_counter = 0, 
  reseed_next_counter = 0, 
  seedlen = 55, 
  state = DRBG_UNINITIALISED, 
  data = {
    ctr = {
      ctx = 0x5555556ab2a0, 
      ctx_df = 0x5555556aad30, 
      cipher = 0x20, 
      keylen = 0, 
      K = '\000' <repeats 31 times>, 
      V = '\000' <repeats 15 times>, 
      bltmp = '\000' <repeats 15 times>, 
      bltmp_pos = 0, 
      KX = '\000' <repeats 47 times>
    }, 
    hash = {
      md = 0x5555556ab2a0, 
      ctx = 0x5555556aad30, 
      blocklen = 32, 
      V = '\000' <repeats 110 times>, 
      C = '\000' <repeats 110 times>, 
      vtmp = '\000' <repeats 110 times>
    }, 
    hmac = {
      md = 0x5555556ab2a0, 
      ctx = 0x5555556aad30, 
      blocklen = 32, 
      K = '\000' <repeats 63 times>, 
      V = '\000' <repeats 63 times>
    }
  }, 
  meth = 0x7ffff78cf740 <drbg_hash_meth>,                      <<<=== CORRECT
  get_entropy = 0x7ffff7835291 <rand_crngt_get_entropy>, 
  cleanup_entropy = 0x7ffff78354bd <rand_crngt_cleanup_entropy>, 
  get_nonce = 0x7ffff7832cdf <rand_drbg_get_nonce>, 
  cleanup_nonce = 0x7ffff7832e33 <rand_drbg_cleanup_nonce>, 
  callback_data = 0x0
}
```

...is assigned to the local variable drbg, which is displayed incorrectly:

```
+n
247	    if (drbg == NULL)
+print(*drbg)
$21 = {
  lock = 0x0, 
  libctx = 0x55555569e390, 
  parent = 0x0, 
  secure = 0, 
  type = 672, 
  fork_id = 6960, 
  flags = 0, 
  seed_pool = 0x0, 
  adin_pool = 0x0, 
  strength = 256, 
  max_request = 65536, 
  min_entropylen = 32, 
  max_entropylen = 2147483647, 
  min_noncelen = 16, 
  max_noncelen = 2147483647, 
  max_perslen = 2147483647, 
  max_adinlen = 2147483647, 
  reseed_gen_counter = 0, 
  reseed_interval = 256, 
  reseed_time = 0, 
  reseed_time_interval = 3600, 
  reseed_prop_counter = 0, 
  reseed_next_counter = 0, 
  seedlen = 55, 
  state = DRBG_UNINITIALISED, 
  ex_data = {                             <<===  EX_DATA !!!  (REMOVED IN FIPS_MODE)
    ctx = 0x5555556ab2a0, 
    sk = 0x5555556aad30
  }, 
  data = {
    ctr = {
      ctx = 0x20, 
      ctx_df = 0x0, 
      cipher = 0x0, 
      keylen = 0, 
      K = '\000' <repeats 31 times>, 
      V = '\000' <repeats 15 times>, 
      bltmp = '\000' <repeats 15 times>, 
      bltmp_pos = 0, 
      KX = '\000' <repeats 47 times>
    }, 
    hash = {
      md = 0x20, 
      ctx = 0x0, 
      blocklen = 0, 
      V = '\000' <repeats 110 times>, 
      C = '\000' <repeats 110 times>, 
      vtmp = '\000' <repeats 98 times>, "@\367\214\367\377\177\000\000\221R\203\367\377"
    }, 
    hmac = {
      md = 0x20, 
      ctx = 0x0, 
      blocklen = 0, 
      K = '\000' <repeats 63 times>, 
      V = '\000' <repeats 63 times>
    }
  },
  
  meth = 0x7ffff78354bd <rand_crngt_cleanup_entropy>,             <<<=== RAND_DRBG_METH ?!?
  
  get_entropy = 0x7ffff7832cdf <rand_drbg_get_nonce>, 
  cleanup_entropy = 0x7ffff7832e33 <rand_drbg_cleanup_nonce>, 
  get_nonce = 0x0, 
  cleanup_nonce = 0x0, 
  callback_data = 0x7811
}
+set logging off
```

cc @levitte @slontis_|_CLA: trivial
_|_Found by coverity.

CIDs: 1201462 and 1201478.
_|_FIXES #10692 #10638_|_Fixes #8766 by returning -1 when an eckey does not have a verify_sig function as the function signature specifies -1._|_Invoking memcpy on NULL is undefined behaviour, even if the size is zero.

https://en.cppreference.com/w/c/string/byte/memcpy


CLA: trivial
_|_Coverity 1456008.

_|_rand_bytes_ex() calls RAND_get_rand_method(), which can return a NULL
method pointer in the case of a malloc failure.

Reported-by: Zu-Ming Jiang (detected by FIFUZZ)

Fixes #10480
_|_As was done for ciphers, supported groups, and EC point formats in
https://github.com/openssl/openssl/pull/9162, only write the negotiated
SNI hostname value to the session object when not resuming, even for
TLS 1.3 resumptions.  Otherwise, when using a stateful session cache
(as is done by default when 0-RTT data is enabled), we can have multiple
SSLs active using the same in-memory session object, which leads to
double-frees and similar race conditions in the SNI handler prior
to this commit.

Fortunately, since draft-ietf-tls-tls13-22, there is no requirement
that the SNI hostname be preserved across TLS 1.3 resumption, and thus
not a need to continually update the session object with the "current"
value (to be used when producing session tickets, so that the subsequent
resumption can be checked against the current value).  So we can just
relax the logic and only write to the session object for initial handshakes.
This still leaves us in a somewhat inconsistent state, since if the SNI value
does change across handshakes, the session object will continue to record
the initial handshake's value, even if that bears no relation to the
current handshake.  The current SSL_get_servername() implementation
prefers the value from the session if s->hit, but a more complete fix
for that and related issues is underway in
https://github.com/openssl/openssl/pull/10018; there is no need to wait
for the complete fix for SNI name handling in order to close the
race condition and avoid runtime crashes.

Fixes #10210 _|_The resumption_label variable when CHARSET_EBCDIC was enabled, was misspelled. Instead of evaluating to 'res binder' as expected, it evaluated to 'red binder'.

Evaluating the hex values in the old code:
```python
"".join([chr(i) for i in [0x72, 0x65, 0x64, 0x20, 0x62, 0x69, 0x6E, 0x64, 0x65, 0x72]])
'red binder'
```

Evaluating the hex values in the new code:
```python
"".join([chr(i) for i in [0x72, 0x65, 0x73, 0x20, 0x62, 0x69, 0x6E, 0x64, 0x65, 0x72]])
'res binder'
```
<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING

Other than that, provide a description above this comment if there isn't one already

If this fixes a github issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->
_|_Many Windows-based GOST TLS implementations are unable to extend the
list of supported SignatureAlgorithms because of lack of the necessary
callback in Windows. So for TLS 1.2 it makes sense to imply the support
of GOST algorithms in case when the GOST ciphersuites are present.

This is a backport of #10377 to 1.1.1 branch

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING

Other than that, provide a description above this comment if there isn't one already

If this fixes a github issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Many Windows-based GOST TLS implementations are unable to extend the
list of supported SignatureAlgorithms because of lack of the necessary
callback in Windows. So for TLS 1.2 it makes sense to imply the support
of GOST algorithms in case when the GOST ciphersuites are present.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING

Other than that, provide a description above this comment if there isn't one already

If this fixes a github issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Large GOST ClientKeyExchange messages are sent by VipNet CSP, one of
Russian certified products implementing GOST TLS, when a server
certificate contains 512-bit keys.

This behaviour was present in 1.0.2 branch and needs to be restored.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING

Other than that, provide a description above this comment if there isn't one already

If this fixes a github issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

##### Checklist
<!-- Remove items that do not apply. For completed items, change [ ] to [x]. -->
- [ ] documentation is added or updated
- [ ] tests are added or updated
_|_Simple bug fix._|_If the xlate filter script fails, the outer script doesn't notice. We
only notice later if the output happens not to assemble. Fix this by
checking for failures on close.

<!--
Thank you for your pull request. Please review these requirements:

Contributors guide: https://github.com/openssl/openssl/blob/master/CONTRIBUTING

Other than that, provide a description above this comment if there isn't one already

If this fixes a github issue, make sure to have a line saying 'Fixes #XXXX' (without quotes) in the commit message.
-->

_|_##### Checklist
- [x] tests are added or updated
_|_